{"version":3,"file":"faces.js","mappings":"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","sources":["webpack://jsf.js_next_gen/./node_modules/mona-dish/dist/js/commonjs/index_core.js","webpack://jsf.js_next_gen/./src/main/typescript/api/_api.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/AjaxImpl.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/PushImpl.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/core/Const.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/core/ImplTypes.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/i18n/Messages.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/Assertions.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/AsyncRunnable.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/ExtDomQuery.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/FileUtils.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/HiddenInputBuilder.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/Lang.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/util/XhrQueueController.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/ErrorData.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/EventData.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/RequestDataResolver.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/ResonseDataResolver.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/Response.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/ResponseProcessor.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/XhrFormData.ts","webpack://jsf.js_next_gen/./src/main/typescript/impl/xhrCore/XhrRequest.ts","webpack://jsf.js_next_gen/./src/main/typescript/myfaces/OamSubmit.ts","webpack://jsf.js_next_gen/webpack/bootstrap","webpack://jsf.js_next_gen/./src/main/typescript/api/faces.ts"],"sourcesContent":["!function(){\"use strict\";var e={447:function(e,t,r){r.r(t),r.d(t,{append:function(){return i},appendIf:function(){return a},assign:function(){return s},assignIf:function(){return o},buildPath:function(){return v},deepCopy:function(){return p},resolve:function(){return u},shallowMerge:function(){return m},simpleShallowMerge:function(){return g}});var n=r(484);class l{constructor(e){this.parent=e}set value(e){}get value(){return this.parent}}function s(e,...t){if(t.length<1)return new l(e);const r=v(e,...t);return new class{set value(e){r.target[r.key]=e}get value(){return r.target[r.key]}}}function i(e,...t){if(t.length<1)return new l(e);const r=v(e,...t);return new class{set value(e){Array.isArray(e)||(e=[e]),r.target[r.key]?(Array.isArray(r.target[r.key])||(r.target[r.key]=[r.target[r.key]]),r.target[r.key].push(...e)):r.target[r.key]=e}}}function o(e,t,...r){return!e||r.length<1?new l(t):s(t,...r)}function a(e,t,...r){return!e||r.length<1?new l(t):i(t,...r)}function u(e,...t){let r=null;t=f(t);let n=e;for(let e=0;e<t.length;e++){let l=t[e];if(l=-1!=c(l)?c(l):l,n=null==n?void 0:n[l],void 0===n)return null;r=n}return n}function h(e){let t=e.indexOf(\"[\");return t>=0?e.substring(0,t):e}function c(e){let t=e.indexOf(\"[\"),r=e.indexOf(\"]\");return t>=0&&r>0&&t<r?parseInt(e.substring(t+1,r)):-1}function d(e,t,r={}){let n=[];n.length=t,n[t-1]=r,e.push(...n)}function f(e){return new n.Es2019Array(...e).flatMap((e=>e.split(\"[\"))).map((e=>-1!=e.indexOf(\"]\")?\"[\"+e:e)).filter((e=>\"\"!=e))}function v(e,...t){t=f(t);let r=e,n=null,l=null,s=-1;for(let e=0;e<t.length;e++)if(l=h(t[e]),s=c(t[e]),-1!=s){if(!Array.isArray(r))throw Error(\"Associative array referenced as index array in path reference\");let l=-1;e<t.length-1&&(l=c(t[e+1]));let i=void 0!==(null==r?void 0:r[s]);d(r,s+1,-1!=l?[]:{}),n=s,e==t.length-1?r[s]=i?r[s]:null:r=r[s]}else{if(Array.isArray(r))throw Error(\"Index array referenced as associative array in path reference\");let s=-1;e<t.length-1&&(s=c(t[e+1])),n=l;let i=void 0!==(null==r?void 0:r[l]);e==t.length-1?i||(r[l]=null):(i||(r[l]=-1==s?{}:[]),r=r[l])}return{target:r,key:n}}function p(e){return JSON.parse(JSON.stringify(e))}function g(...e){return m(!0,!1,...e)}function m(e=!0,t=!1,...r){let l={};return new n.Es2019Array(...r).map((e=>({arr:e,keys:Object.keys(e)}))).forEach((({arr:r,keys:s})=>{s.forEach((s=>{let i=r[s];if(!Array.isArray(i)&&t&&(i=new n.Es2019Array(...[i])),e||!(null==l?void 0:l[s]))if(t)if(void 0===(null==l?void 0:l[s]))l[s]=i;else if(Array.isArray(l[s]))l[s].push(...i);else{let e=l[s];l[s]=new n.Es2019Array(...[]),l[s].push(e),l[s].push(...i)}else l[s]=r[s]}))})),l}},549:function(e,t,r){r.d(t,{De:function(){return c},ac:function(){return u},ko:function(){return h}});var n=r(484),l=r(152),s=r(805),i=r(447),o=s.Lang.objAssign;class a extends l.ValueEmbedder{constructor(e,t,r){super(e,t),this.arrPos=null!=r?r:-1}get value(){return\"\"==this.key&&this.arrPos>=0?this._value[this.arrPos]:this.key&&this.arrPos>=0?this._value[this.key][this.arrPos]:this._value[this.key]}set value(e){\"\"==this.key&&this.arrPos>=0?this._value[this.arrPos]=e:this.key&&this.arrPos>=0?this._value[this.key][this.arrPos]=e:this._value[this.key]=e}}a.absent=a.fromNullable(null);const u=\"__END_POINT__\",h=\"__ANY_POINT__\";class c extends l.Optional{constructor(e,t){super(e),this.configDef=t}get shallowCopy(){return this.shallowCopy$()}shallowCopy$(){let e=new c({});return e.shallowMerge(this.value),e}get deepCopy(){return this.deepCopy$()}deepCopy$(){return new c(o({},this.value))}static fromNullable(e){return new c(e)}shallowMerge(e,t=!0,r=!1){let n=(0,i.shallowMerge)(t,r,this.value,e.value);Array.isArray(this._value)?(this._value.length=0,this._value.push(...n)):(Object.getOwnPropertyNames(this._value).forEach((e=>delete this._value[e])),Object.getOwnPropertyNames(n).forEach((e=>this._value[e]=n[e])))}append(...e){return(0,i.append)(this._value,...e)}appendIf(e,...t){return(0,i.appendIf)(e,this._value,...t)}assign(...e){return(0,i.assign)(this.value,...e)}assignIf(e,...t){return(0,i.assignIf)(e,this._value,...t)}getIf(...e){return this.assertAccessPath(...e),this.getClass().fromNullable((0,i.resolve)(this.value,...e))}get(e){return this.getClass().fromNullable(super.get(e).value)}delete(e){return e in this.value&&delete this.value[e],this}toJson(){return JSON.stringify(this.value)}getClass(){return c}setVal(e){this._value=e}assertAccessPath(...e){var t,r,s,i,o,a,u,c,d;if(e=this.preprocessKeys(...e),!this.configDef)return;let f=l.Optional.fromNullable(Object.keys(this.configDef).map((e=>{let t={};return t[e]=this.configDef[e],t})));for(let v=0;v<e.length;v++){let p=this.keyVal(e[v]),g=this.arrayIndex(e[v]);if(f=this.isArray(g)?\"\"!=p?Array.isArray(f.value)?l.Optional.fromNullable(null===(r=null===(t=new n.Es2019Array(...f.value).find((e=>{var t;return!(null===(t=null==e?void 0:e[p])||void 0===t||!t)})))||void 0===t?void 0:t[p])||void 0===r?void 0:r[g]):l.Optional.fromNullable(null!==(o=null===(i=null===(s=f.value)||void 0===s?void 0:s[p])||void 0===i?void 0:i[g])&&void 0!==o?o:null):Array.isArray(f.value)?l.Optional.fromNullable(null===(a=f.value)||void 0===a?void 0:a[g]):l.Optional.absent:Array.isArray(f.value)?l.Optional.fromNullable(null===(u=new n.Es2019Array(...f.value).find((e=>{var t;return!(null===(t=null==e?void 0:e[p])||void 0===t||!t)})))||void 0===u?void 0:u[p]):l.Optional.fromNullable(null!==(d=null===(c=f.value)||void 0===c?void 0:c[p])&&void 0!==d?d:null),!f.isPresent())throw Error(\"Access Path to config invalid\");if(f.value==h)return}}isNoArray(e){return-1==e}isArray(e){return!this.isNoArray(e)}}},585:function(e,t,r){r.d(t,{DQ:function(){return w},DQ$:function(){return E},DomQuery:function(){return y},DomQueryCollector:function(){return b},ElementAttribute:function(){return p}});var n,l=r(152),s=r(255),i=r(805),o=r(456),a=r(484),u=r(447),h=function(e,t,r,n){return new(r||(r=Promise))((function(l,s){function i(e){try{a(n.next(e))}catch(e){s(e)}}function o(e){try{a(n.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?l(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,o)}a((n=n.apply(e,t||[])).next())}))},c=i.Lang.trim,d=i.Lang.isString,f=i.Lang.equalsIgnoreCase,v=i.Lang.objToArray;!function(e){e.SELECT=\"select\",e.BUTTON=\"button\",e.SUBMIT=\"submit\",e.RESET=\"reset\",e.IMAGE=\"image\",e.RADIO=\"radio\",e.CHECKBOX=\"checkbox\"}(n||(n={}));class p extends l.ValueEmbedder{constructor(e,t,r=null){super(e,t),this.element=e,this.name=t,this.defaultVal=r}get value(){let e=this.element.get(0).orElse().values;return e.length?e[0].getAttribute(this.name):this.defaultVal}set value(e){let t=this.element.get(0).orElse().values;for(let r=0;r<t.length;r++)t[r].setAttribute(this.name,e);t[0].setAttribute(this.name,e)}getClass(){return p}static fromNullable(e,t=\"value\"){return new p(e,t)}}class g extends l.ValueEmbedder{constructor(e,t,r=null){super(e,t),this.element=e,this.name=t,this.defaultVal=r}get value(){let e=this.element.values;return e.length?e[0].style[this.name]:this.defaultVal}set value(e){let t=this.element.values;for(let r=0;r<t.length;r++)t[r].style[this.name]=e}getClass(){return p}static fromNullable(e,t=\"value\"){return new p(e,t)}}const m=()=>!0;class y{constructor(...e){if(this.rootNode=[],this.pos=-1,this._limits=-1,!l.Optional.fromNullable(e).isAbsent()&&e.length)for(let t=0;t<e.length;t++)if(e[t])if(d(e[t])){let r=y.querySelectorAll(e[t]);r.isAbsent()||e.push(...r.values)}else e[t]instanceof y?this.rootNode.push(...e[t].values):this.rootNode.push(e[t]);else;}get value(){return this.getAsElem(0)}get values(){return this.allElems()}get global(){return o.R}get stream(){throw Error(\"Not implemented, include Stream.ts for this to work\")}get lazyStream(){throw Error(\"Not implemented, include Stream.ts for this to work\")}get id(){return new p(this.get(0),\"id\")}get length(){return this.rootNode.length}get tagName(){return this.getAsElem(0).getIf(\"tagName\")}get nodeName(){return this.getAsElem(0).getIf(\"nodeName\")}isTag(e){return!this.isAbsent()&&(this.nodeName.orElse(\"__none___\").value.toLowerCase()==e.toLowerCase()||this.tagName.orElse(\"__none___\").value.toLowerCase()==e.toLowerCase())}get type(){return this.getAsElem(0).getIf(\"type\")}get name(){return new l.ValueEmbedder(this.getAsElem(0).value,\"name\")}get inputValue(){return this.getAsElem(0).getIf(\"value\").isPresent()?new l.ValueEmbedder(this.getAsElem(0).value):l.ValueEmbedder.absent}get val(){return this.inputValue.value}set val(e){this.inputValue.value=e}get nodeId(){return this.id.value}set nodeId(e){this.id.value=e}get checked(){return new a.Es2019Array(...this.values).every((e=>!!e.checked))}set checked(e){this.eachElem((t=>t.checked=e))}get elements(){return this.querySelectorAll(\"input, checkbox, select, textarea, fieldset\")}get deepElements(){return this.querySelectorAllDeep(\"input, select, textarea, checkbox, fieldset\")}querySelectorAllDeep(e){let t=[],r=this.querySelectorAll(e);r.length&&t.push(r);let n=this.querySelectorAll(\"*\").shadowRoot;if(n.length){let r=n.querySelectorAllDeep(e);r.length&&t.push(r)}return new y(...t)}get disabled(){return this.attr(\"disabled\").isPresent()}set disabled(e){e?this.attr(\"disabled\").value=\"disabled\":this.removeAttribute(\"disabled\")}removeAttribute(e){this.eachElem((t=>t.removeAttribute(e)))}get childNodes(){let e=[];return this.eachElem((t=>{e=e.concat(v(t.childNodes))})),new y(...e)}get asArray(){return new a.Es2019Array(...this.rootNode).filter((e=>null!=e)).map((e=>y.byId(e)))}get offsetWidth(){return new a.Es2019Array(...this.rootNode).filter((e=>null!=e)).map((e=>e.offsetWidth)).reduce(((e,t)=>e+t),0)}get offsetHeight(){return new a.Es2019Array(...this.rootNode).filter((e=>null!=e)).map((e=>e.offsetHeight)).reduce(((e,t)=>e+t),0)}get offsetLeft(){return new a.Es2019Array(...this.rootNode).filter((e=>null!=e)).map((e=>e.offsetLeft)).reduce(((e,t)=>e+t),0)}get offsetTop(){return new a.Es2019Array(this.rootNode).filter((e=>null!=e)).map((e=>e.offsetTop)).reduce(((e,t)=>e+t),0)}get asNodeArray(){return new a.Es2019Array(...this.rootNode.filter((e=>null!=e)))}static querySelectorAllDeep(e){return new y(document).querySelectorAllDeep(e)}static querySelectorAll(e){return-1!=e.indexOf(\"/shadow/\")?new y(document)._querySelectorAllDeep(e):new y(document)._querySelectorAll(e)}static byId(e,t=!1){return d(e)?t?new y(document).byIdDeep(e):new y(document).byId(e):new y(e)}static byTagName(e){return d(e)?new y(document).byTagName(e):new y(e)}static globalEval(e,t){return new y(document).globalEval(e,t)}static globalEvalSticky(e,t){return new y(document).globalEvalSticky(e,t)}static fromMarkup(e){const t=document.implementation.createHTMLDocument(\"\");let r=(e=c(e)).toLowerCase();if(-1!=r.search(/<!doctype[^\\w\\-]+/gi)||-1!=r.search(/<html[^\\w\\-]+/gi)||-1!=r.search(/<head[^\\w\\-]+/gi)||-1!=r.search(/<body[^\\w\\-]+/gi))return t.documentElement.innerHTML=e,new y(t.documentElement);{let t=function(e,t){let r=[\"<\",t,\">\"].join(\"\"),n=[\"<\",t,\" \"].join(\"\");return 0==e.indexOf(r)||0==e.indexOf(n)},n=new y(document.createElement(\"div\"));return t(r,\"thead\")||t(r,\"tbody\")?(n.html(`<table>${e}</table>`),n.querySelectorAll(\"table\").get(0).childNodes.detach()):t(r,\"tfoot\")?(n.html(`<table><thead></thead><tbody><tbody${e}</table>`),n.querySelectorAll(\"table\").get(2).childNodes.detach()):t(r,\"tr\")?(n.html(`<table><tbody>${e}</tbody></table>`),n.querySelectorAll(\"tbody\").get(0).childNodes.detach()):t(r,\"td\")?(n.html(`<table><tbody><tr>${e}</tr></tbody></table>`),n.querySelectorAll(\"tr\").get(0).childNodes.detach()):(n.html(e),n.childNodes.detach())}}get(e){return e<this.rootNode.length?new y(this.rootNode[e]):y.absent}getAsElem(e,t=l.Optional.absent){return e<this.rootNode.length?l.Optional.fromNullable(this.rootNode[e]):t}filesFromElem(e){var t;return e<this.rootNode.length&&(null===(t=this.rootNode[e])||void 0===t?void 0:t.files)?this.rootNode[e].files:[]}allElems(){return this.rootNode}isAbsent(){return 0==this.length}isPresent(e){let t=this.isAbsent();return!t&&e&&e.call(this,this),!t}ifPresentLazy(e=function(){}){return this.isPresent.call(this,e),this}delete(){this.eachElem((e=>{e.parentNode&&e.parentNode.removeChild(e)}))}querySelectorAll(e){return-1!=e.indexOf(\"/shadow/\")?this._querySelectorAllDeep(e):this._querySelectorAll(e)}closest(e){return-1!=e.indexOf(\"/shadow/\")?this._closestDeep(e):this._closest(e)}byId(e,t){let r=[];return t&&(r=r.concat(...new a.Es2019Array(...(null==this?void 0:this.rootNode)||[]).filter((t=>e==t.id)).map((e=>new y(e))))),r=r.concat(this.querySelectorAll(`[id=\"${e}\"]`)),new y(...r)}byIdDeep(e,t){let r=[];t&&(r=r.concat(new a.Es2019Array(...(null==this?void 0:this.rootNode)||[]).filter((t=>e==t.id)).map((e=>new y(e)))));let n=this.querySelectorAllDeep(`[id=\"${e}\"]`);return n.length&&r.push(n),new y(...r)}byTagName(e,t,r){var n;let l=[];return t&&(l=new a.Es2019Array(...null!==(n=null==this?void 0:this.rootNode)&&void 0!==n?n:[]).filter((t=>(null==t?void 0:t.tagName)==e)).reduce(((e,t)=>e.concat([t])),l)),r?l.push(this.querySelectorAllDeep(e)):l.push(this.querySelectorAll(e)),new y(...l)}attr(e,t=null){return new p(this,e,t)}style(e,t=null){return new g(this,e,t)}hasClass(e){let t=!1;return this.eachElem((r=>{if(t=r.classList.contains(e),t)return!1})),t}addClass(e){return this.eachElem((t=>t.classList.add(e))),this}removeClass(e){return this.eachElem((t=>t.classList.remove(e))),this}isMultipartCandidate(e=!1){const t=\"input[type='file']\";return this.matchesSelector(t)||(e?this.querySelectorAllDeep(t):this.querySelectorAll(t)).first().isPresent()}html(e){return l.Optional.fromNullable(e).isAbsent()?this.isPresent()?l.Optional.fromNullable(this.innerHTML):l.Optional.absent:(this.innerHTML=e,this)}dispatchEvent(e){return this.eachElem((t=>t.dispatchEvent(e))),this}set innerHTML(e){this.eachElem((t=>t.innerHTML=e))}get innerHTML(){let e=[];return this.eachElem((t=>e.push(t.innerHTML))),e.join(\"\")}set innerHtml(e){this.innerHTML=e}get innerHtml(){return this.innerHTML}filterSelector(e){let t=[];return this.eachElem((r=>{this._mozMatchesSelector(r,e)&&t.push(r)})),new y(...t)}matchesSelector(e){return this.asArray.some((t=>this._mozMatchesSelector(t.getAsElem(0).value,e)))}getIf(...e){let t=this.childNodes;for(let r=0;r<e.length;r++)if(t=t.filterSelector(e[r]),t.isAbsent())return t;return t}eachElem(e){for(let t=0,r=this.rootNode.length;t<r&&!1!==e(this.rootNode[t],t);t++);return this}firstElem(e=(e=>e)){return this.rootNode.length>1&&e(this.rootNode[0],0),this}lastElem(e=(e=>e)){return this.rootNode.length>1&&e(this.rootNode[this.rootNode.length-1],0),this}each(e){return new a.Es2019Array(...this.rootNode).forEach(((t,r)=>{if(null!=t)return e(y.byId(t),r)})),this}replace(e){return this.each((t=>{let r=t.getAsElem(0).value,n=r.parentElement,l=r.nextElementSibling,s=r.previousElementSibling;null!=l?new y(l).insertBefore(e):s?new y(s).insertAfter(e):new y(n).append(e),t.delete()})),e}first(e=(e=>e)){return this.rootNode.length>=1?(e(this.get(0),0),this.get(0)):this}last(e=(e=>e)){if(this.rootNode.length>=1){let t=this.get(this.rootNode.length-1);return e(t,0),t}return this}filter(e){let t=[];return this.each((r=>{e(r)&&t.push(r)})),new y(...t)}globalEval(e,t){var r,n,l;const s=null!==(n=null===(r=document.getElementsByTagName(\"head\"))||void 0===r?void 0:r[0])&&void 0!==n?n:null===(l=document.documentElement.getElementsByTagName(\"head\"))||void 0===l?void 0:l[0],i=document.createElement(\"script\");t&&(void 0!==(null==i?void 0:i.nonce)?i.nonce=t:i.setAttribute(\"nonce\",t)),i.type=\"text/javascript\",i.innerHTML=e;let o=s.appendChild(i);return s.removeChild(o),this}globalEvalSticky(e,t){let r=document.getElementsByTagName(\"head\")[0]||document.documentElement,n=document.createElement(\"script\");return this.applyNonce(t,n),n.type=\"text/javascript\",n.innerHTML=e,r.appendChild(n),this}detach(){return this.eachElem((e=>{e.parentNode.removeChild(e)})),this}appendTo(e){return i.Lang.isString(e)?(this.appendTo(y.querySelectorAll(e)),this):(this.eachElem((t=>{e.getAsElem(0).orElseLazy((()=>({appendChild:()=>{}}))).value.appendChild(t)})),this)}loadScriptEval(e,t=0,r){return this._loadScriptEval(!1,e,t,r),this}loadScriptEvalSticky(e,t=0,r){return this._loadScriptEval(!0,e,t,r),this}insertAfter(...e){this.each((t=>{let r=t.getAsElem(0).value,n=r.parentNode;for(let t=0;t<e.length;t++){let l=r.nextSibling;e[t].eachElem((e=>{l?(n.insertBefore(e,l),r=l):n.appendChild(e)}))}}));let t=[];return t.push(this),t=t.concat(e),new y(...t)}insertBefore(...e){this.each((t=>{let r=t.getAsElem(0).value,n=r.parentNode;for(let t=0;t<e.length;t++)e[t].eachElem((e=>{n.insertBefore(e,r)}))}));let t=[];return t.push(this),t=t.concat(e),new y(...t)}orElse(...e){return this.isPresent()?this:new y(...e)}orElseLazy(e){return this.isPresent()?this:new y(e())}allParents(e){let t=this.parent(),r=[];for(;t.isPresent();)t.matchesSelector(e)&&r.push(t),t=t.parent();return new y(...r)}firstParent(e){let t=this.parent();for(;t.isPresent();){if(t.matchesSelector(e))return t;t=t.parent()}return y.absent}parentsWhileMatch(e){const t=[];let r=this.parent().filter((t=>t.matchesSelector(e)));for(;r.isPresent();)t.push(r),r=r.parent().filter((t=>t.matchesSelector(e)));return new y(...t)}parent(){let e=[];return this.eachElem((t=>{let r=t.parentNode||t.host||t.shadowRoot;r&&-1==e.indexOf(r)&&e.push(r)})),new y(...e)}copyAttrs(e){return e.eachElem((e=>{let t=v(e.attributes);for(let e of t){let t=e.value,r=e.name;switch(r){case\"id\":this.id.value=t;break;case\"disabled\":this.resolveAttributeHolder(\"disabled\").disabled=t;break;case\"checked\":this.resolveAttributeHolder(\"checked\").checked=t;break;default:this.attr(r).value=t}}})),this}outerHTML(e,t,r,n=!1){var l;if(this.isAbsent())return;let s=null===(l=null===document||void 0===document?void 0:document.activeElement)||void 0===l?void 0:l.id,i=s?y.getCaretPosition(document.activeElement):null,o=y.fromMarkup(e),a=[],u=this.getAsElem(0).value,h=o.get(0),c=u.parentNode,d=h.getAsElem(0).value;if(c.replaceChild(d,u),a.push(new y(d)),this.isAbsent())return this;let f=[];o.length>1&&(f=f.concat(...o.values.slice(1)),a.push(y.byId(d).insertAfter(new y(...f)))),t&&this.runScripts(),r&&this.runCss();let v=y.byId(s);return s&&v.isPresent()&&null!=i&&void 0!==i&&v.eachElem((e=>y.setCaretPosition(e,i))),o}runScripts(e=!1,t=m){const r=t=>{if(t.length){let r=[];new a.Es2019Array(...t).forEach((t=>{t.nonce?(r.length&&(this.globalEval(r.join(\"\\n\")),r.length=0),e?this.globalEvalSticky(t.evalText,t.nonce):this.globalEval(t.evalText,t.nonce)):r.push(t.evalText)})),r.length&&(e?this.globalEvalSticky(r.join(\"\\n\")):this.globalEval(r.join(\"\\n\")),r.length=0),t=[]}return t};let n=[],l=[\"\",\"script\",\"text/javascript\",\"text/ecmascript\",\"ecmascript\"],s=s=>{var i,o,a,u;let h=s.tagName,d=(null!==(i=null==s?void 0:s.type)&&void 0!==i?i:\"\").toLowerCase();if(h&&f(h,\"script\")&&-1!=l.indexOf(d)){let l=s.getAttribute(\"src\");if(void 0!==l&&null!=l&&l.length>0){let i=null!==(o=null==s?void 0:s.nonce)&&void 0!==o?o:s.getAttribute(\"nonce\").value;t(l)&&(n=r(n),e?i?this.loadScriptEvalSticky(l,0,i):this.loadScriptEvalSticky(l,0):i?this.loadScriptEval(l,0,i):this.loadScriptEval(l,0))}else{let e=c(s.text||s.innerText||s.innerHTML),t=!0;for(;t;)t=!1,\"\\x3c!--\"==e.substring(0,4)&&(e=e.substring(4),t=!0),\"//\\x3c!--\"==e.substring(0,4)&&(e=e.substring(6),t=!0),\"//<![CDATA[\"==e.substring(0,11)&&(e=e.substring(11),t=!0);let r=null!==(u=null!==(a=null==s?void 0:s.nonce)&&void 0!==a?a:s.getAttribute(\"nonce\").value)&&void 0!==u?u:\"\";n.push({nonce:r,evalText:e})}}};try{new y(this.filterSelector(\"script\"),this.querySelectorAll(\"script\")).asArray.flatMap((e=>[...e.values])).sort(((e,t)=>e.compareDocumentPosition(t)-3)).forEach((e=>s(e))),r(n)}catch(e){console&&console.error&&console.error(e.message||e.description)}finally{s=null}return this}runCss(){return new y(this.filterSelector(\"link, style\"),this.querySelectorAll(\"link, style\")).asArray.flatMap((e=>[...e.values])).sort(((e,t)=>e.compareDocumentPosition(t)-3)).forEach((e=>(e=>{const t=y.byId(e),r=t.tagName.orElse(\"\").value;let n=y.fromMarkup(`<${r.toLowerCase()} />`);n=n.copyAttrs(t),n.innerHTML=e.innerHTML,t.replace(n)})(e))),this}click(){return this.fireEvent(\"click\"),this}addEventListener(e,t,r){return this.eachElem((n=>n.addEventListener(e,t,r))),this}removeEventListener(e,t,r){return this.eachElem((n=>n.removeEventListener(e,t,r))),this}fireEvent(e,t={}){let r={bubbles:!0,cancelable:!0};r=(0,u.simpleShallowMerge)(r,t),this.eachElem((t=>{let n;if(t.ownerDocument)n=t.ownerDocument;else{if(9!=t.nodeType)throw new Error(\"Invalid node passed to fireEvent: \"+t.id);n=t}if(t.dispatchEvent){let n=Event;switch(e){case\"click\":case\"mousedown\":case\"mouseup\":case\"mousemove\":n=this.global().MouseEvent;break;case\"keyup\":case\"keydown\":case\"keypress\":n=this.global().KeyboardEvent;break;case\"focus\":case\"change\":case\"blur\":case\"select\":break;default:throw\"fireEvent: Couldn't find an event class for event '\"+e+\"'.\"}let l=new n(e,r);l.synthetic=!0,t.dispatchEvent(l)}else if(t.fireEvent){let l=n.createEventObject();l.synthetic=!0,Object.keys(r).forEach((e=>l[e]=r[e])),t.fireEvent(\"on\"+e,l)}}))}textContent(e=\"\"){return this.asArray.map((e=>e.getAsElem(0).orElseLazy((()=>({textContent:\"\"}))).value.textContent||\"\")).reduce(((t,r)=>[t,e,r].join(\"\")),\"\")}innerText(e=\"\"){return this.asArray.map((e=>e.getAsElem(0).orElseLazy((()=>({innerText:\"\"}))).value.innerText||\"\")).reduce(((t,r)=>[t,r].join(e)),\"\")}encodeFormElement(e={}){if(this.name.isAbsent())return;let t=(0,u.simpleShallowMerge)(e);return this.each((e=>{var r,l;if(e.name.isAbsent())return;let s=e.name.value,i=e.tagName.orElse(\"__none__\").value.toLowerCase(),o=e.type.orElse(\"__none__\").value.toLowerCase();if(o=o.toLowerCase(),(\"input\"==i||\"textarea\"==i||\"select\"==i)&&null!=s&&\"\"!=s&&!e.disabled){if(\"select\"==i){let r=e.getAsElem(0).value;if(r.selectedIndex>=0){let e=r.options.length;for(let n=0;n<e;n++)if(r.options[n].selected){let e=r.options[n];(0,u.append)(t,s).value=null!=e.getAttribute(\"value\")?e.value:e.text}}}if(i!=n.SELECT&&o!=n.BUTTON&&o!=n.RESET&&o!=n.SUBMIT&&o!=n.IMAGE&&(o!=n.CHECKBOX&&o!=n.RADIO||e.checked)){let n=null===(l=null===(r=e.value)||void 0===r?void 0:r.value)||void 0===l?void 0:l.files,i=null!=n?n:[];if(null==i?void 0:i.length)(0,u.assign)(t,s).value=Array.from(i);else{if(n)return;(0,u.append)(t,s).value=e.inputValue.value}}}})),t}get cDATAAsString(){return this.asArray.flatMap((e=>e.childNodes.asArray)).filter((e=>{var t,r;return 4==(null===(r=null===(t=null==e?void 0:e.value)||void 0===t?void 0:t.value)||void 0===r?void 0:r.nodeType)})).reduce(((e,t)=>{var r,n,l;return e.push(null!==(l=null===(n=null===(r=null==t?void 0:t.value)||void 0===r?void 0:r.value)||void 0===n?void 0:n.data)&&void 0!==l?l:\"\"),e}),[]).join(\"\")}subNodes(e,t){return l.Optional.fromNullable(t).isAbsent()&&(t=this.length),new y(...this.rootNode.slice(e,Math.min(t,this.length)))}limits(e){return this._limits=e,this}hasNext(){let e=-1!=this._limits&&this.pos>=this._limits-1,t=this.pos>=this.values.length-1;return!(e||t)}next(){return this.hasNext()?(this.pos++,new y(this.values[this.pos])):null}lookAhead(e=1){return this.values.length-1<this.pos+e?s.dD.EO_STRM:new y(this.values[this.pos+e])}current(){return-1==this.pos?s.dD.BEF_STRM:new y(this.values[this.pos])}reset(){this.pos=-1}attachShadow(e={mode:\"open\"}){let t=[];return this.eachElem((r=>{let n;if(!(null==r?void 0:r.attachShadow))throw new Error(\"Shadow dom creation not supported by the browser, please use a shim, to gain this functionality\");n=y.byId(r.attachShadow(e)),t.push(n)})),new y(...t)}waitUntilDom(e,t={attributes:!0,childList:!0,subtree:!0,timeout:500,interval:100}){return h(this,void 0,void 0,(function*(){return function(e,t,r={attributes:!0,childList:!0,subtree:!0,timeout:500,interval:100}){return new Promise(((n,l)=>{let s=null;const i=new Error(\"Mutation observer timeout\");function o(e,t){let n=null;return t(e)?e:(n=r.childList?t(e)?e:e.childNodes.filter((e=>t(e))).first().value.value:r.subtree?t(e)?e:e.querySelectorAll(\" * \").filter((e=>t(e))).first().value.value:t(e)?e:null,n)}let a=e;if(a=o(a,t))n(new y(a));else if(\"undefined\"!=typeof MutationObserver){const o=setTimeout((()=>(s.disconnect(),l(i))),r.timeout),a=r=>{const l=new y(r.map((e=>e.target))).filter((e=>t(e))).first();l.isPresent()&&(clearTimeout(o),s.disconnect(),n(new y(l||e)))};s=new MutationObserver(a);let u=Object.assign({},r);delete u.timeout,e.eachElem((e=>{s.observe(e,u)}))}else{let s=setInterval((()=>{let r=o(e,t);r&&(a&&(clearTimeout(a),clearInterval(s),s=null),n(new y(r||e)))}),r.interval),a=setTimeout((()=>{s&&(clearInterval(s),l(i))}),r.timeout)}}))}(this,e,t)}))}get shadowElements(){let e=(this.querySelectorAll(\"*\").filter((e=>e.hasShadow)).allElems()||[]).map((e=>e.shadowRoot));return new y(...e)}get shadowRoot(){let e=[];for(let t=0;t<this.rootNode.length;t++)this.rootNode[t].shadowRoot&&e.push(this.rootNode[t].shadowRoot);return new y(...e)}get hasShadow(){for(let e=0;e<this.rootNode.length;e++)if(this.rootNode[e].shadowRoot)return!0;return!1}static getCaretPosition(e){let t=0;try{if(null===document||void 0===document?void 0:document.selection){e.focus();let r=document.selection.createRange();r.moveStart(\"character\",-e.value.length),t=r.text.length}}catch(e){}return t}static setCaretPosition(e,t){(null==e?void 0:e.focus)&&(null==e||e.focus()),(null==e?void 0:e.setSelectiongRange)&&(null==e||e.setSelectiongRange(t,t))}[Symbol.iterator](){return{next:()=>({done:!this.hasNext(),value:this.next()})}}concat(e,t=!0){let r=this.asArray;const n=new y(...r.concat(e.asArray));if(!t)return n;let l={};return new y(...n.asArray.filter((e=>{const t=!(null==l?void 0:l[e.value.value.outerHTML]);return l[e.value.value.outerHTML]=!0,t})))}append(e){return this.each((t=>e.appendTo(t))),this}prependTo(e){return e.eachElem((e=>{e.prepend(...this.allElems())})),this}prepend(e){return this.eachElem((t=>{t.prepend(...e.allElems())})),this}_querySelectorAll(e){var t,r;if(!(null===(t=null==this?void 0:this.rootNode)||void 0===t?void 0:t.length))return this;let n=[];for(let t=0;t<this.rootNode.length;t++){if(!(null===(r=this.rootNode[t])||void 0===r?void 0:r.querySelectorAll))continue;let l=this.rootNode[t].querySelectorAll(e);n=n.concat(...v(l))}return new y(...n)}_querySelectorAllDeep(e){var t;if(!(null===(t=null==this?void 0:this.rootNode)||void 0===t?void 0:t.length))return this;let r=new y(...this.rootNode),n=e.split(/\\/shadow\\//);for(let e=0;e<n.length;e++){if(\"\"==n[e])continue;let t=n[e];r=r.querySelectorAll(t),e<n.length-1&&(r=r.shadowRoot)}return r}_closest(e){var t,r;if(!(null===(t=null==this?void 0:this.rootNode)||void 0===t?void 0:t.length))return this;let n=[];for(let t=0;t<this.rootNode.length;t++){if(!(null===(r=this.rootNode[t])||void 0===r?void 0:r.closest))continue;let l=[this.rootNode[t].closest(e)];n=n.concat(...l)}return new y(...n)}_closestDeep(e){var t;if(!(null===(t=null==this?void 0:this.rootNode)||void 0===t?void 0:t.length))return this;let r=new y(...this.rootNode),n=e.split(/\\/shadow\\//);for(let e=0;e<n.length;e++){if(\"\"==n[e])continue;let t=n[e];r=r.closest(t),e<n.length-1&&(r=r.shadowRoot)}return r}_mozMatchesSelector(e,t){let r=e,n=r.matches||r.matchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector||r.webkitMatchesSelector||function(t){let r=(document||ownerDocument).querySelectorAll(t),n=r.length;for(;--n>=0&&r.item(n)!==e;);return n>-1};return n.call(e,t)}_loadScriptEval(e,t,r=0,n){let l=this.createSourceNode(t,n),s=this.createSourceNode(null,n),i=`nonce_${Date.now()}_${Math.random()}`;s.innerHTML=`document.head[\"${i}\"] = true`;let o=document.head;if(o.appendChild(s),o.removeChild(s),o[i]){try{r?setTimeout((()=>{o.appendChild(l),e||o.removeChild(l)}),r):(o.appendChild(l),e||o.removeChild(l))}finally{delete o[i]}return this}}resolveAttributeHolder(e=\"value\"){let t=[];return t[e]=null,e in this.getAsElem(0).value?this.getAsElem(0).value:t}createSourceNode(e,t){let r=document.createElement(\"script\");return r.type=\"text/javascript\",t&&(void 0!==(null==r?void 0:r.nonce)?r.nonce=t:r.setAttribute(\"nonce\",t)),e&&(r.src=e),r}applyNonce(e,t){e&&(void 0!==(null==t?void 0:t.nonce)?t.nonce=e:t.setAttribute(\"nonce\",e))}}y.absent=new y,y.global=o.R;class b{constructor(){this.data=[]}collect(e){this.data.push(e)}get finalValue(){return new y(...this.data)}}const w=y,E=y.querySelectorAll},484:function(e,t,r){r.d(t,{Es2019Array:function(){return s},_Es2019Array:function(){return l}});class n extends Array{constructor(...e){super(...e),e._another?this._another=e._another:this._another=e,this.flatMap=e=>this._flatMap(e),this.flat=(e=1)=>this._flat(e)}map(e,t){return new l(...Array.prototype.map.call(this._another,e,t))}concat(...e){return new l(...Array.prototype.concat.call(this._another,...e))}reverse(){return new l(...Array.prototype.reverse.call(this._another))}slice(e,t){return new l(...Array.prototype.slice.call(this._another,e,t))}splice(e,t){return new l(...Array.prototype.splice.call(this._another,e,t))}filter(e,t){return new l(...Array.prototype.filter.call(this._another,e,t))}reduce(e,t){return Array.prototype.reduce.call(this._another,e,t)}_flat(e=1){return this._flatResolve(this._another,e)}_flatResolve(e,t=1){if(0==t)return e;let r=[];return e.forEach((e=>{e=Array.isArray(e)?e:[e];let n=this._flatResolve(e,t-1);r=r.concat(n)})),new s(...r)}_flatMap(e){let t=this.map((t=>e(t)));return this._flatResolve(t)}}function l(...e){let t=new n(...e);return new Proxy(t,{get(e,t,r){return\"symbol\"==typeof t?e._another[t]:isNaN(parseInt(t))?e[t]:e._another[t]},set(e,t,r){return e[t]=r,e._another[t]=r,!0}})}var s=Array.prototype.flatMap?function(...e){return[...e]}:l},456:function(e,t,r){function n(){var e;let t=\"undefined\"!=typeof globalThis&&globalThis.window?globalThis.window:\"undefined\"!=typeof window?window:\"undefined\"!=typeof globalThis?globalThis:void 0!==r.g&&(null===r.g||void 0===r.g?void 0:r.g.window)?r.g.window:void 0!==r.g?r.g:null;return null!==(e=null==t?void 0:t.window)&&void 0!==e?e:t}r.d(t,{R:function(){return n}})},805:function(e,t,r){r.d(t,{Lang:function(){return n}});var n,l=r(152),s=r(484);!function(e){function t(e){let t=/\\s/,r=(e=e.replace(/^\\s\\s*/,\"\")).length;for(;t.test(e.charAt(--r)););return e.slice(0,r+1)}function r(e){return!!arguments.length&&null!=e&&(\"string\"==typeof e||e instanceof String)}e.saveResolve=function(e,t=null){try{let r=e();return l.Optional.fromNullable(null!=r?r:t)}catch(e){return l.Optional.absent}},e.saveResolveLazy=function(e,t=null){try{let r=e();return l.Optional.fromNullable(null!=r?r:t())}catch(e){return l.Optional.absent}},e.strToArray=function(e,r=/\\./gi){let n=[];return e.split(r).forEach((e=>{n.push(t(e))})),n},e.trim=t,e.objToArray=function(e,t=0,r=[]){return\"__undefined__\"==(null!=e?e:\"__undefined__\")?null!=r?r:null:e instanceof Array&&!t&&!r?e:new s.Es2019Array(...r.concat(Array.prototype.slice.call(e,t)))},e.equalsIgnoreCase=function(e,t){let r=null!=t?t:\"___no_value__\";return(null!=e?e:\"___no_value__\").toLowerCase()===r.toLowerCase()},e.assertType=function(e,t){return r(t)?typeof e==t:e instanceof t},e.isString=r,e.isFunc=function(e){return e instanceof Function||\"function\"==typeof e},e.objAssign=function(e,...t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");let r=Object(e);return Object.assign?(t.forEach((e=>Object.assign(r,e))),r):(t.filter((e=>null!=e)).forEach((e=>{let t=e;Object.keys(t).filter((e=>Object.prototype.hasOwnProperty.call(t,e))).forEach((e=>r[e]=t[e]))})),r)}}(n||(n={}))},152:function(e,t,r){r.d(t,{Monad:function(){return l},Optional:function(){return s},ValueEmbedder:function(){return i}});var n=r(484);class l{constructor(e){this._value=e}get value(){return this._value}map(e){e||(e=e=>e);let t=e(this.value);return new l(t)}flatMap(e){let t=this.map(e);for(;(null==t?void 0:t.value)instanceof l;)t=t.value;return t}}class s extends l{constructor(e){super(e)}get value(){return this._value instanceof l?this._value.flatMap().value:this._value}static fromNullable(e){return new s(e)}isAbsent(){return void 0===this.value||null==this.value}isPresent(e){let t=this.isAbsent();return!t&&e&&e.call(this,this),!t}ifPresentLazy(e=(()=>{})){return this.isPresent.call(this,e),this}orElse(e){return this.isPresent()?this:null==e?s.absent:this.flatMap((()=>e))}orElseLazy(e){return this.isPresent()?this:this.flatMap(e)}flatMap(e){let t=super.flatMap(e);return t instanceof s?t.flatMap():s.fromNullable(t.value)}getIf(...e){e=this.preprocessKeys(...e);let t=this;for(let r=0;r<e.length;r++){let n=this.keyVal(e[r]),l=this.arrayIndex(e[r]);if(\"\"===n&&l>=0){if(t=this.getClass().fromNullable(t.value instanceof Array?t.value.length<l?null:t.value[l]:null),t.isAbsent())return t}else if(n&&l>=0){if(t.getIfPresent(n).isAbsent())return t;if(t=t.getIfPresent(n).value instanceof Array?this.getClass().fromNullable(t.getIfPresent(n).value[l]):this.getClass().absent,t.isAbsent())return t}else{if(t=t.getIfPresent(n),t.isAbsent())return t;l>-1&&(t=this.getClass().fromNullable(t.value[l]))}}return t}match(e){return!this.isAbsent()&&e(this.value)}get(e=s.absent){return this.isAbsent()?this.getClass().fromNullable(e).flatMap():this.getClass().fromNullable(this.value).flatMap()}toJson(){return JSON.stringify(this.value)}getClass(){return s}arrayIndex(e){let t=e.indexOf(\"[\"),r=e.indexOf(\"]\");return t>=0&&r>0&&t<r?parseInt(e.substring(t+1,r)):-1}keyVal(e){let t=e.indexOf(\"[\");return t>=0?e.substring(0,t):e}getIfPresent(e){return this.isAbsent()?this.getClass().absent:this.getClass().fromNullable(this.value[e]).flatMap()}resolve(e){if(this.isAbsent())return s.absent;try{return s.fromNullable(e(this.value))}catch(e){return s.absent}}preprocessKeys(...e){return e.flatMap((e=>new n.Es2019Array(...e.split(/]\\s*\\[/gi)).map((e=>(-1==(e=e.replace(/^\\s+|\\s+$/g,\"\")).indexOf(\"[\")&&-1!=e.indexOf(\"]\")&&(e=\"[\"+e),-1==e.indexOf(\"]\")&&-1!=e.indexOf(\"[\")&&(e+=\"]\"),e)))))}}s.absent=s.fromNullable(null);class i extends s{constructor(e,t=\"value\"){super(e),this.key=t}get value(){return this._value?this._value[this.key]:null}set value(e){this._value&&(this._value[this.key]=e)}orElse(e){let t={};return t[this.key]=e,this.isPresent()?this:new i(t,this.key)}orElseLazy(e){if(this.isPresent())return this;{let t={};return t[this.key]=e(),new i(t,this.key)}}getClass(){return i}static fromNullable(e,t=\"value\"){return new i(e,t)}}i.absent=i.fromNullable(null)},255:function(e,t,r){r.d(t,{dD:function(){return n}});var n;r(484),r(549);!function(e){e.EO_STRM=\"__EO_STRM__\",e.BEF_STRM=\"___BEF_STRM__\"}(n||(n={}))},121:function(e,t,r){r.d(t,{XMLQuery:function(){return o},XQ:function(){return a}});var n=r(805),l=r(585),s=r(456),i=n.Lang.isString;class o extends l.DomQuery{constructor(e,t=\"text/xml\"){let r=e=>{if(null==e)return null;return n.Lang.saveResolveLazy((()=>new((0,s.R)().DOMParser)),(()=>(()=>{let e=new ActiveXObject(\"Microsoft.XMLDOM\");return e.async=!1,{parseFromString:(t,r)=>e.loadXML(t)}})())).value.parseFromString(e,t)};i(e)?super(r(e)):super(e)}isXMLParserError(){return this.querySelectorAll(\"parsererror\").isPresent()}toString(){let e=[];return this.eachElem((t=>{var r,n,l,i;let o=null!==(i=null===(l=null===(n=null===(r=(0,s.R)())||void 0===r?void 0:r.XMLSerializer)||void 0===n?void 0:n.constructor())||void 0===l?void 0:l.serializeToString(t))&&void 0!==i?i:null==t?void 0:t.xml;o&&e.push(o)})),e.join(\"\")}parserErrorText(e){return this.querySelectorAll(\"parsererror\").textContent(e)}static parseXML(e){return new o(e)}static parseHTML(e){return new o(e,\"text/html\")}static fromString(e,t=\"text/xml\"){return new o(e,t)}}const a=o}},t={};function r(n){var l=t[n];if(void 0!==l)return l.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var n={};!function(){r.r(n),r.d(n,{Assoc:function(){return i},CONFIG_ANY:function(){return o.ko},CONFIG_VALUE:function(){return o.ac},Config:function(){return o.De},DQ:function(){return e.DQ},DQ$:function(){return e.DQ$},DomQuery:function(){return e.DomQuery},DomQueryCollector:function(){return e.DomQueryCollector},ElementAttribute:function(){return e.ElementAttribute},Es2019Array:function(){return a.Es2019Array},Lang:function(){return t.Lang},Monad:function(){return l.Monad},Optional:function(){return l.Optional},ValueEmbedder:function(){return l.ValueEmbedder},XMLQuery:function(){return s.XMLQuery},XQ:function(){return s.XQ},_Es2019Array:function(){return a._Es2019Array},append:function(){return i.append},assign:function(){return i.assign},assignIf:function(){return i.assignIf},shallowMerge:function(){return i.shallowMerge},simpleShallowMerge:function(){return i.simpleShallowMerge}});var e=r(585),t=r(805),l=r(152),s=r(121),i=r(447),o=r(549),a=r(484)}();var l=exports;for(var s in n)l[s]=n[s];n.__esModule&&Object.defineProperty(l,\"__esModule\",{value:!0})}();\n//# sourceMappingURL=index_core.js.map","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Implementation} from \"../impl/AjaxImpl\";\nimport {PushImpl} from \"../impl/PushImpl\";\nimport {oam as _oam} from \"../myfaces/OamSubmit\";\nimport {$nsp, CTX_OPTIONS_EXECUTE, CTX_OPTIONS_PARAMS, CTX_PARAM_RENDER, P_BEHAVIOR_EVENT} from \"../impl/core/Const\";\nimport {ErrorData} from \"../impl/xhrCore/ErrorData\";\nimport {EventData} from \"../impl/xhrCore/EventData\";\n\n//we use modules to get a proper jsdoc and static/map structure in the calls\n//as per spec requirement\nexport module faces {\n\n\n    /**\n     * Version of the implementation for the faces.ts.\n     * <p />\n     * as specified within the jsf specifications faces.html:\n     * <ul>\n     * <li>left two digits major release number</li>\n     * <li>middle two digits minor spec release number</li>\n     * <li>right two digits bug release number</li>\n     * </ul>\n     * @constant\n     */\n    export var specversion = 400000;\n    /**\n     * Implementation version as specified within the jsf specification.\n     * <p />\n     * A number increased with every implementation version\n     * and reset by moving to a new spec release number\n     *\n     * @constant\n     */\n    export var implversion = 0;\n\n    /**\n     * SeparatorChar as defined by facesContext.getNamingContainerSeparatorChar()\n     */\n    export var separatorchar: string = getSeparatorChar();\n\n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Context Path as defined externalContext.requestContextPath\n     */\n    export var contextpath: string = '#{facesContext.externalContext.requestContextPath}';\n    // we do not have a fallback here, for now\n\n    /**\n     * This method is responsible for the return of a given project stage as defined\n     * by the jsf specification.\n     * <p/>\n     * Valid return values are:\n     * <ul>\n     *     <li>&quot;Production&quot;</li>\n     *     <li>&quot;Development&quot;</li>\n     *     <li>&quot;SystemTest&quot;</li>\n     *     <li>&quot;UnitTest&quot;</li>\n     * </li>\n     *\n     * @return {String} the current project state emitted by the server side method:\n     * <i>jakarta.faces.application.Application.getProjectStage()</i>\n     */\n    export function getProjectStage(): string {\n        return Implementation.getProjectStage();\n    }\n\n    /**\n     * collect and encode data for a given form element (must be of type form)\n     * find the jakarta.faces.ViewState element and encode its value as well!\n     * return a concatenated string of the encoded values!\n     *\n     * @throws an exception in case of the given element not being of type form!\n     * https://issues.apache.org/jira/browse/MYFACES-2110\n     */\n    export function getViewState(formElement: Element | string): string {\n        return Implementation.getViewState(formElement);\n    }\n\n    /**\n     * returns the window identifier for the given node / window\n     * @return the window identifier or null if none is found\n     * @param rootNode\n     */\n    export function getClientWindow(rootNode?: Element | string): string {\n        return Implementation.getClientWindow(rootNode);\n    }\n\n    // private helper functions\n    function getSeparatorChar(): string {\n        const sep = '#{facesContext.namingContainerSeparatorChar}';\n        //We now enable standalone mode, the separator char was not mapped we make a fallback to 2.3 behavior\n        //the idea is that the separator char is provided from the underlying container, but if not then we\n        //will perform a fallback (aka 2.3 has the url fallback behavior)\n        return (sep.match(/\\#\\{facesContext.namingContainerSeparatorChar\\}/gi)) ? Implementation.getSeparatorChar() : sep;\n    }\n\n\n\n\n    export module ajax {\n        \"use strict\";\n\n        /**\n         * this function has to send the ajax requests\n         *\n         * following request conditions must be met:\n         * <ul>\n         *  <li> the request must be sent asynchronously! </li>\n         *  <li> the request must be a POST!!! request </li>\n         *  <li> the request url must be the form action attribute </li>\n         *  <li> all requests must be queued with a client side request queue to ensure the request ordering!</li>\n         * </ul>\n         *\n         * @param {String|Node} element: any dom element no matter being it html or jsf, from which the event is emitted\n         * @param {EVENT} event: any javascript event supported by that object\n         * @param {Map} options : map of options being pushed into the ajax cycle\n         */\n        export function request(element: Element, event?: Event, options?: Options): void {\n            Implementation.request(element, event, options)\n        }\n\n        /**\n         * response handler\n         * @param request the request object having triggered this response\n         * @param context the request context\n         *\n         */\n        export function response(request: XMLHttpRequest, context?: Context): void {\n            Implementation.response(request, context);\n        }\n\n        /**\n         * Adds an error handler to our global error queue.\n         * the error handler must be of the format <i>function errorListener(&lt;errorData&gt;)</i>\n         * with errorData being of following format:\n         * <ul>\n         *     <li> errorData.type : &quot;error&quot;</li>\n         *     <li> errorData.status : the error status message</li>\n         *     <li> errorData.serverErrorName : the server error name in case of a server error</li>\n         *     <li> errorData.serverErrorMessage : the server error message in case of a server error</li>\n         *     <li> errorData.source  : the issuing source element which triggered the request </li>\n         *     <li> eventData.responseCode: the response code (aka http request response code, 401 etc...) </li>\n         *     <li> eventData.responseText: the request response text </li>\n         *     <li> eventData.responseXML: the request response xml </li>\n         * </ul>\n         *\n         * @param errorFunc error handler must be of the format <i>function errorListener(&lt;errorData&gt;)</i>\n         */\n        export function addOnError(errorFunc: (data: ErrorData) => void): void {\n            Implementation.addOnError(<any>errorFunc);\n        }\n\n        /**\n         * Adds a global event listener to the ajax event queue. The event listener must be a function\n         * of following format: <i>function eventListener(&lt;eventData&gt;)</i>\n         *\n         * @param eventFunc event must be of the format <i>function eventListener(&lt;eventData&gt;)</i>\n         */\n        export function addOnEvent(eventFunc: (data: EventData) => void): void {\n            Implementation.addOnEvent(<any>eventFunc);\n        }\n    }\n\n    export module util {\n\n        /**\n         * varargs function which executes a chain of code (functions or any other code)\n         *\n         * if any of the code returns false, the execution\n         * is terminated prematurely skipping the rest of the code!\n         *\n         * @param {HTMLElement | String} source, the callee object\n         * @param {Event} event, the event object of the callee event triggering this function\n         * @param funcs ... arbitrary array of functions or strings\n         * @returns true if the chain has succeeded false otherwise\n         */\n        export function chain(source: HTMLElement | string, event: Event | null, ...funcs: Array<Function | string>): boolean {\n            return Implementation.chain(source, event, ...(funcs as EvalFuncs));\n        }\n    }\n\n    export module push {\n        /**\n         * @param socketClientId the sockets client identifier\n         * @param url the uri to reach the socket\n         * @param channel the channel name/id\n         * @param onopen The function to be invoked when the web socket is opened.\n         * @param onmessage The function to be invoked when a message is received.\n         * @param onerror The function to be invoked when an error occurs.\n         * @param onclose The function to be invoked when the web socket is closed.\n         * @param behaviors functions which are invoked whenever a message is received\n         * @param autoConnect Whether or not to automatically open the socket. Defaults to <code>false</code>.\n         */\n        export function init(socketClientId: string,\n                    url: string,\n                    channel: string,\n                    onopen: Function,\n                    onmessage: Function,\n                    onerror: Function,\n                    onclose: Function,\n                    behaviors: any,\n                    autoConnect: boolean): void {\n            PushImpl.init(socketClientId, url, channel, onopen, onmessage, onerror, onclose, behaviors, autoConnect);\n        }\n\n        /**\n         * Open the web socket on the given channel.\n         * @param  socketClientId The name of the web socket channel.\n         * @throws  Error is thrown, if the channel is unknown.\n         */\n        export function open(socketClientId: string): void {\n            PushImpl.open(socketClientId);\n        }\n\n        /**\n         * Close the web socket on the given channel.\n         * @param  socketClientId The id of the web socket client.\n         * @throws  Error is thrown, if the channel is unknown.\n         */\n        export function close(socketClientId: string): void {\n            PushImpl.close(socketClientId);\n        }\n\n    }\n}\n\nexport module myfaces {\n    /**\n     * AB function similar to mojarra and Primefaces\n     * not part of the spec but a convenience accessor method\n     * Code provided by Thomas Andraschko\n     *\n     * @param source the event source\n     * @param event the event\n     * @param eventName event name for java.jakarta.faces.behavior.evemnt\n     * @param execute execute list as passed down in faces.ajax.request\n     * @param render the render list as string\n     * @param options the options which need to be mered in\n     */\n    export function ab(source: Element, event: Event, eventName: string, execute: string, render: string, options: Options = {}): void {\n        if (eventName) {\n           options[CTX_OPTIONS_PARAMS] = options?.[CTX_OPTIONS_PARAMS] ?? {};\n           options[CTX_OPTIONS_PARAMS][$nsp(P_BEHAVIOR_EVENT)] = eventName;\n        }\n        if (execute) {\n            options[CTX_OPTIONS_EXECUTE] = execute;\n        }\n        if (render) {\n            options[CTX_PARAM_RENDER] = render;\n        }\n\n        (window?.faces ?? window.jsf).ajax.request(source, event, options);\n    }\n\n\n    const onReadyChain: Array<() => void> = [];\n    let readyStateListener = null;\n    // noinspection JSUnusedGlobalSymbols\n    /**\n     * Helper function in the myfaces namespace to handle document ready properly for the load case\n     * the ajax case, does not need proper treatment, since it is deferred anyway.\n     * Used by command script as helper function!\n     *\n     * @param executionFunc the function to be executed upon ready\n     */\n    export function onDomReady(executionFunc: () => void) {\n        if(document.readyState !== \"complete\") {\n            onReadyChain.push(executionFunc);\n            if(!readyStateListener) {\n                readyStateListener = () => {\n                    window.removeEventListener(\"DOMContentLoaded\", readyStateListener);\n                    readyStateListener = null;\n                    try {\n                        onReadyChain.forEach(func => func());\n                    } finally {\n                        //done we clear now the ready chain\n                        onReadyChain.length = 0;\n                    }\n                };\n                window.addEventListener(\"DOMContentLoaded\", readyStateListener);\n            }\n        } else {\n            if(readyStateListener) {\n                readyStateListener();\n            }\n            executionFunc();\n        }\n\n    }\n\n    /**\n     * legacy oam functions\n     */\n    export const oam = _oam;\n}\n\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IListener} from \"./util/IListener\";\nimport {Response} from \"./xhrCore/Response\";\nimport {XhrRequest} from \"./xhrCore/XhrRequest\";\nimport {Config, DQ, DQ$, Lang, Optional} from \"mona-dish\";\nimport {Assertions} from \"./util/Assertions\";\nimport {ExtConfig, ExtDomQuery} from \"./util/ExtDomQuery\";\nimport {ErrorData} from \"./xhrCore/ErrorData\";\nimport {EventData} from \"./xhrCore/EventData\";\nimport {ExtLang} from \"./util/Lang\";\n\nimport {\n    CTX_OPTIONS_EXECUTE,\n    CTX_PARAM_REQ_PASS_THR,\n    CTX_PARAM_SRC_CTL_ID,\n    CTX_PARAM_SRC_FRM_ID,\n    IDENT_ALL,\n    IDENT_FORM,\n    IDENT_NONE,\n    IDENT_THIS,\n    MYFACES,\n    ON_ERROR,\n    ON_EVENT,\n    P_AJAX,\n    P_CLIENT_WINDOW,\n    P_EVT,\n    P_EXECUTE,\n    P_AJAX_SOURCE,\n    P_RENDER,\n    P_RESET_VALUES,\n    P_WINDOW_ID,\n    CTX_PARAM_RENDER,\n    SOURCE,\n    HTML_TAG_FORM,\n    CTX_OPTIONS_PARAMS,\n    VIEW_ID,\n    $faces,\n    EMPTY_STR,\n    NAMED_VIEWROOT,\n    NAMING_CONTAINER_ID,\n    CTX_PARAM_PPS,\n    MYFACES_OPTION_PPS,\n    $nsp\n} from \"./core/Const\";\nimport {\n    resolveDefaults,\n    resolveDelay,\n    resolveForm,\n    resolveTimeout, resolveViewId, resolveViewRootId, resoveNamingContainerMapper\n} from \"./xhrCore/RequestDataResolver\";\nimport {encodeFormData} from \"./util/FileUtils\";\nimport {XhrQueueController} from \"./util/XhrQueueController\";\n\n/*\n * allowed project stages\n */\nenum ProjectStages {\n    Production = \"Production\",\n    Development = \"Development\",\n    SystemTest = \"SystemTest\",\n    UnitTest = \"UnitTest\"\n}\n\n/*\n *   Block-filter for the pass-through filtering; the attributes given here\n *   will not be transmitted from the options into the pass-through\n */\nenum BlockFilter {\n    onerror = \"onerror\",\n    onevent = \"onevent\",\n    render = \"render\",\n    execute = \"execute\",\n    myfaces = \"myfaces\",\n    delay = \"delay\",\n    timeout = \"timeout\",\n    resetValues = \"resetValues\",\n    windowId = \"windowId\",\n    params = \"params\"\n}\n\n\n\n/**\n * Core Implementation\n * to distinct between api and impl\n *\n * The original idea was to make the implementation pluggable\n * but this is pointless, you always can overwrite the thin api layer\n * however a dedicated api makes sense for readability reasons\n */\nexport module Implementation {\n/*\n Small internal explanation, this code is optimized for readability\n and cuts off a ton of old legacy code.\n Aka older browsers are not supported anymore.\n We use a self written helper library to keep the number of exernal\n code dependencies down.\n The library is called mona-dish and started as a small sideproject of mine\n it provides following\n\n a) Monad like structures for querying because this keeps the code denser and adds abstractions\n that always was the strong point of jQuery, and it still is better in this regard than what ecmascript provides\n\n c) A neutral json like configuration which allows assignments of arbitrary values with reduce code which then can be\n transformed into different data representations\n\n examples:\n internalCtx.assign(MYPARAM, CTX_PARAM_SRC_FRM_ID).value = form.id.value;\n passes a value into context.MYPARAM.CTX_PARAM_SRC_FRM_ID\n\n basically an abbreviation for\n\n internalCtxt[MYPARAM] = internalCtxt?.[MYPARAM] ?  internalCtxt[MYPARAM] : {};\n internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] = internalCtxt?.[MYPARAM][CTX_PARAM_SRC_FRM_ID] ?  internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] : {};\n internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] = form.id.value;\n\n\n internalCtx.assign(condition, MYPARAM, CTX_PARAM_SRC_FRM_ID).value = form.id.value;\n passes a value into context.MYPARAM.CTX_PARAM_SRC_FRM_ID if condition === true otherwise it is ignored\n\n abbreviates:\n if(condition) {\n    internalCtxt[MYPARAM] = internalCtxt?.[MYPARAM] ?  internalCtxt[MYPARAM] : {};\n    internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] = internalCtxt?.[MYPARAM][CTX_PARAM_SRC_FRM_ID] ?  internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] : {};\n    internalCtxt[MYPARAM][CTX_PARAM_SRC_FRM_ID] = form.id.value;\n }\n\n\n d) Optional constructs, while under heavy debate we only use them lightly where the api requires it from mona-dish\n\n Note the inclusion of this library uses a reduced build which only includes the part of it, which we really use\n\n */\n\n    import trim = Lang.trim;\n    import getMessage = ExtLang.getMessage;\n    import getGlobalConfig = ExtLang.getGlobalConfig;\n    import assert = Assertions.assert;\n    import ofAssoc = ExtLang.ofAssoc;\n    import collectAssoc = ExtLang.collectAssoc;\n\n    let projectStage: string = null;\n    let separator: string = null;\n    let eventQueue = [];\n    let errorQueue = [];\n    export let requestQueue: XhrQueueController<XhrRequest> = null;\n    /*error reporting threshold*/\n    let threshold = \"ERROR\";\n\n    /**\n     * fetches the separator char from the given script tags\n     *\n     * @return {string} the separator char for the given script tags\n     */\n    export function getSeparatorChar(): string {\n        return resolveGlobalConfig()?.separator ??\n            this?.separator ??\n            (separator = ExtDomQuery.searchJsfJsFor(/separator=([^&;]*)/).orElse(\":\").value);\n    }\n\n    /**\n     * this is for testing purposes only, since AjaxImpl is a module\n     * we need to reset for every unit test its internal states\n     */\n    export function reset() {\n        projectStage = null;\n        separator = null;\n        eventQueue = [];\n        errorQueue = [];\n        requestQueue = null;\n    }\n\n    /**\n     * @return the project stage also emitted by the server:\n     * it cannot be cached and must be delivered over the server\n     * The value for it comes from the requestInternal parameter of the faces.js script called \"stage\".\n     */\n    export function getProjectStage(): string | null {\n        return resolveGlobalConfig()?.projectStage ??\n            this?.projectStage ??\n            (projectStage = resolveProjectStateFromURL());\n    }\n\n    /**\n     * resolves the project stage as url parameter\n     * @return the project stage or null\n     */\n    export function resolveProjectStateFromURL(): string | null {\n\n        /* run through all script tags and try to find the one that includes faces.js */\n        const foundStage = ExtDomQuery.searchJsfJsFor(/stage=([^&;]*)/).value as string;\n        return (foundStage in ProjectStages) ? foundStage : ProjectStages.Production; // MYFACES-4572: default is production\n    }\n\n    /**\n     * implementation of the faces.util.chain functionality\n     *\n     * @param source\n     * @param event\n     * @param funcs\n     */\n    export function chain(source: any, event: Event, ...funcs: EvalFuncs): boolean {\n        // we can use our lazy stream each functionality to run our chain here.\n        // by passing a boolean as return value into the onElem call\n        // we can stop early at the first false, just like the spec requests\n\n        let ret;\n        funcs.every(func => {\n            let returnVal = resolveAndExecute(source, event, func);\n            if(returnVal !== false) {\n                ret = returnVal;\n            }\n            return returnVal !== false;\n        });\n        return ret;\n\n    }\n\n    /**\n     * this function has to send the ajax requests\n     *\n     * following request conditions must be met:\n     * <ul>\n     *  <li> the request must be sent asynchronously! </li>\n     *  <li> the request must be a POST!!! request </li>\n     *  <li> the request url must be the form action attribute </li>\n     *  <li> all requests must be queued with a client side request queue to ensure the request ordering!</li>\n     * </ul>\n     *\n     * @param el any dom element no matter being it html or jsf, from which the event is emitted\n     * @param event any javascript event supported by that object\n     * @param opts  map of options being pushed into the ajax cycle\n     *\n     * a) transformArguments out of the function\n     * b) passThrough handling with a map copy with a filter map block map\n     */\n    export function request(el: ElemDef, event?: Event, opts ?: Options) {\n\n        const {\n            options,\n            elem,\n            elementId,\n            windowId,\n            isResetValues\n        } = resolveDefaults(event, opts, el);\n        const requestCtx = new ExtConfig({});\n        const internalCtx = new ExtConfig({});\n\n        Assertions.assertRequestIntegrity(options, elem);\n\n        /**\n         * fetch the parent form\n         *\n         * note we also add an override possibility here\n         * so that people can use dummy forms and work\n         * with detached objects\n         */\n        const form: DQ = resolveForm(elem, event);\n        const viewId: string = resolveViewId(form);\n        const formId = form.id.value;\n        const delay: number = resolveDelay(options);\n        const timeout: number = resolveTimeout(options);\n\n        requestCtx.assignIf(!!windowId, P_WINDOW_ID).value = windowId;\n\n        // old non - spec behavior will be removed after it is clear whether the removal breaks any code\n        requestCtx.assign(CTX_PARAM_REQ_PASS_THR).value = extractLegacyParams(options.value);\n\n        // spec conform behavior, all passthrough params must be under \"passthrough\n        const params = remapArrayToAssocArr(options.getIf(CTX_OPTIONS_PARAMS).orElse({}).value);\n        //we turn off the remapping for the param merge, because we do not want to have\n        //any namespacing to be remapped\n\n        let ctxPassthrough = requestCtx.getIf(CTX_PARAM_REQ_PASS_THR) as ExtConfig;\n        ctxPassthrough.$nspEnabled = false;\n        ctxPassthrough.shallowMerge(new Config(params), true);\n        //now we turn it on again\n        ctxPassthrough.$nspEnabled = true;\n        requestCtx.assignIf(!!event, CTX_PARAM_REQ_PASS_THR, P_EVT).value = event?.type;\n\n        /**\n         * ajax pass through context with the source\n         * onresolved Event and onerror Event\n         */\n        requestCtx.assign(SOURCE).value = elementId;\n\n        requestCtx.assign(VIEW_ID).value = viewId;\n\n        /**\n         * on resolvedEvent and onError...\n         * those values will be traversed later on\n         * also into the response context\n         */\n        requestCtx.assign(ON_EVENT).value = options.value?.onevent;\n        requestCtx.assign(ON_ERROR).value = options.value?.onerror;\n\n        /**\n         * Fetch the myfaces config params\n         */\n        requestCtx.assign(MYFACES).value = options.value?.myfaces;\n\n        /**\n         * binding contract the jakarta.faces.source must be set\n         */\n        requestCtx.assign(CTX_PARAM_REQ_PASS_THR, P_AJAX_SOURCE).value = elementId;\n\n        /**\n         * jakarta.faces.partial.ajax must be set to true\n         */\n        requestCtx.assign(CTX_PARAM_REQ_PASS_THR, P_AJAX).value = true;\n\n        /**\n         * if resetValues is set to true\n         * then we have to set jakarta.faces.resetValues as well\n         * as pass through parameter\n         * the value has to be explicitly true, according to\n         * the specs jsdoc\n         */\n        requestCtx.assignIf(isResetValues, CTX_PARAM_REQ_PASS_THR, P_RESET_VALUES).value = true;\n\n        // additional meta information to speed things up, note internal non jsf\n        // pass through options are stored under _mfInternal in the context\n        internalCtx.assign(CTX_PARAM_SRC_FRM_ID).value = formId;\n\n        // mojarra compatibility, mojarra is sending the form id as well\n        // this is not documented behavior but can be determined by running\n        // mojarra under blackbox conditions.\n        // I assume it does the same as our formId_submit=1 so leaving it out\n        // won't hurt but for the sake of compatibility we are going to add it\n        requestCtx.assign(CTX_PARAM_REQ_PASS_THR, formId).value = formId;\n        internalCtx.assign(CTX_PARAM_SRC_CTL_ID).value = elementId;\n        // reintroduction of PPS as per myfaces 2.3 (myfaces.pps = true, only the executes are submitted)\n        internalCtx.assign(CTX_PARAM_PPS).value = extractMyFacesParams(options.value)?.[MYFACES_OPTION_PPS] ?? false;\n\n\n        assignClientWindowId(form, requestCtx);\n        assignExecute(options, requestCtx, form, elementId);\n        assignRender(options, requestCtx, form, elementId);\n        assignNamingContainerData(internalCtx, form);\n\n        //now we enqueue the request as asynchronous runnable into our request\n        //queue and let the queue take over the rest\n        queueHandler.addRequestToQueue(elem, form, requestCtx, internalCtx, delay, timeout);\n    }\n\n    /**\n     * Spec. 13.3.3\n     * Examining the response markup and updating the DOM tree\n     * @param {XMLHttpRequest} request - the ajax request\n     * @param {Object} context - the ajax context\n     */\n    export function response(request: XMLHttpRequest, context: Context) {\n        Response.processResponse(request, context);\n    }\n\n    /**\n     * adds an error handler to the error queue\n     *\n     * @param errorListener the error listener handler\n     */\n    export function addOnError(errorListener: IListener<ErrorData>) {\n        errorQueue.push(errorListener);\n    }\n\n    /**\n     * adds an event handler to the event queue\n     *\n     * @param eventListener the event listener handler\n     */\n    export function addOnEvent(eventListener: IListener<EventData>) {\n        eventQueue.push(eventListener);\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    /**\n     * sends an event to the event handlers\n     *\n     * @param data the event data object hosting the event data according to the spec @see EventData for what is reachable\n     * @param localHandler an optional event handler, which is processed before the event handler chain\n     */\n    export function sendEvent(data: EventData, localHandler = function (data: EventData) {\n    }) {\n        /*now we serve the queue as well*/\n        localHandler(data);\n        eventQueue.forEach(fn => fn(data));\n    }\n\n    /**\n     * error handler behavior called internally\n     * and only into the impl it takes care of the\n     * internal message transformation to a myfaces internal error\n     * and then uses the standard send error mechanisms\n     * also a double error logging prevention is done as well\n     *\n     * @param request the request currently being processed\n     * @param context the context affected by this error\n     * @param exception the exception being thrown\n     * @param clearRequestQueue if set to true, clears the request queue of all pending requests\n     */\n    export function stdErrorHandler(request: XMLHttpRequest,\n                                    context: Config,\n                                    exception: Error,\n                                    clearRequestQueue = false) {\n        //newer browsers do not allow to hold additional values on native objects like exceptions\n        //we hence capsule it into the request, which is gced automatically\n        //on ie as well, since the stdErrorHandler usually is called between requests\n        //this is a valid approach\n        try {\n            if (threshold == \"ERROR\") {\n                let errorData = ErrorData.fromClient(exception);\n                sendError(errorData);\n            }\n        } finally {\n            if (clearRequestQueue) {\n                requestQueue.clear();\n            }\n        }\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    /**\n     * implementation triggering the error chain\n     *\n     *\n     *\n     *  handles the errors, in case of an onError exists within the context the onError is called as local error handler\n     *  the registered error handlers in the queue received an error message to be dealt with\n     *  and if the projectStage is at development an alert box is displayed\n     *\n     *  note: we have additional functionality here, via the global config myfaces.config.defaultErrorOutput a function can be provided\n     *  which changes the default output behavior from alert to something else\n     *\n     * @param errorData the error data to be displayed\n     * @param localHandler an optional local error handler which has to be processed before the error handler queue\n     */\n    export function sendError(errorData: ErrorData, localHandler = function (data: ErrorData) {\n    }) {\n\n        localHandler(errorData);\n        errorQueue.forEach((errorCallback: Function) => {\n            errorCallback(errorData);\n        });\n        let displayError: (string) => void = getGlobalConfig(\"defaultErrorOutput\", (console ? console.error : alert));\n        displayError(errorData);\n    }\n\n    /**\n     * @node optional element or id defining a rootnode where an element with the id \"jakarta.faces.windowId\" is hosted\n     * @return the client window id of the current window, if one is given if none is found, null is returned\n     */\n    export function getClientWindow(node ?: Element | string): string | null {\n        const ALTERED = \"___mf_id_altered__\";\n        const INIT = \"___init____\";\n\n        /*\n         * the search root for the dom element search\n         */\n\n\n        let searchRoot = ((node) ? DQ.byId(node): DQ$(\"form\"));\n        let inputs = searchRoot\n            .filterSelector(`input[name='${$nsp(P_CLIENT_WINDOW)}']`)\n            .orElseLazy(() => searchRoot.querySelectorAll(`input[name='${$nsp(P_CLIENT_WINDOW)}']`))\n\n        /*\n         * lazy helper to fetch the window id from the included faces.js\n         */\n        let fetchWindowIdFromJSFJS = () => ExtDomQuery.searchJsfJsFor(/jfwid=([^&;]*)/).orElse(null).value;\n\n        /*\n         * fetch window id from the url\n         */\n        let fetchWindowIdFromURL = function () {\n            const href = window.location.href, windowId = \"jfwid\";\n            const regex = new RegExp(\"[\\\\?&]\" + windowId + \"=([^&#\\\\;]*)\");\n            const results = regex.exec(href);\n            //initial trial over the url and a regexp\n            if (results != null) return results[1];\n            return null;\n        };\n\n        /*\n         * functional double check based on stream reduction\n         * the values should be identical or on INIT value which is a premise to\n         * skip the first check\n         *\n         * @param value1\n         * @param value2\n         */\n        let differenceCheck = (value1: string, value2: string): string => {\n            if(value1 == INIT) {\n                return value2;\n            } else if (value1 == ALTERED || value1 != value2) {\n                return ALTERED;\n            }\n            return value2;\n        };\n\n        /*\n         * helper for cleaner code, maps the value from an item\n         *\n         * @param item\n         */\n        let getValue = (item: DQ): string => item.val as string;\n        /*\n         * fetch the window id from the forms\n         * window ids must be present in all forms\n         * or non-existent. If they exist all of them must be the same\n         */\n\n        let formWindowId: string = inputs.asArray.map(getValue).reduce(differenceCheck, INIT);\n\n\n        //if the resulting window id is set on altered then we have an unresolvable problem\n        assert(ALTERED != formWindowId, \"Multiple different windowIds found in document\");\n\n        /*\n         * return the window id or null\n         */\n        return formWindowId != INIT ? formWindowId : (fetchWindowIdFromURL() || fetchWindowIdFromJSFJS());\n    }\n\n    /**\n     * collect and encode data for a given form element (must be of type form)\n     * find the jakarta.faces.ViewState element and encode its value as well!\n     * @return a concatenated string of the encoded values!\n     *\n     * @throws Error in case of the given element not being of type form!\n     * https://issues.apache.org/jira/browse/MYFACES-2110\n     */\n    export function getViewState(form: Element | string): string {\n        /**\n         *  type-check assert!, we opt for strong typing here\n         *  because it makes it easier to detect bugs\n         */\n\n        let element: DQ = DQ.byId(form, true);\n        if (!element.isTag(HTML_TAG_FORM)) {\n            throw new Error(getMessage(\"ERR_VIEWSTATE\"));\n        }\n\n        // determine the naming container scenario\n        const dummyContext = new Config({});\n        assignNamingContainerData(dummyContext, DQ.byId(form))\n        // fetch all non file input form elements\n        let formElements = element.deepElements.encodeFormElement()\n\n        // encode them! (file inputs are handled differently and are not part of the viewstate)\n        return encodeFormData(new ExtConfig(formElements), resoveNamingContainerMapper(dummyContext));\n    }\n\n    /**\n     * this at the first sight looks like a weird construct, but we need to do it this way\n     * for testing, we cannot proxy addRequestToQueue from the testing frameworks directly,\n     * but we need to keep it under unit tests.\n     */\n    export let queueHandler = {\n        /**\n         * public to make it accessible for tests\n         *\n         * adds a new request to our queue for further processing\n         */\n        addRequestToQueue: function (elem: DQ, form: DQ, reqCtx: ExtConfig, respPassThr: Config, delay = 0, timeout = 0) {\n            requestQueue = requestQueue ?? new XhrQueueController<XhrRequest>();\n            requestQueue.enqueue(new XhrRequest(reqCtx, respPassThr, timeout), delay);\n        }\n    };\n\n    //----------------------------------------------- Methods ---------------------------------------------------------------------\n\n    /**\n     * the idea is to replace some placeholder parameters with their respective values\n     * placeholder params like  @all, @none, @form, @this need to be replaced by\n     * the values defined by the specification\n     *\n     * This function does it for the render parameters\n     *\n     * @param requestOptions the source options coming in as options object from faces.ajax.request (options parameter)\n     * @param targetContext the receiving target context\n     * @param issuingForm the issuing form\n     * @param sourceElementId the executing element triggering the faces.ajax.request (id of it)\n     */\n    function assignRender(requestOptions: Config, targetContext: Config, issuingForm: DQ, sourceElementId: string) {\n        if (requestOptions.getIf(CTX_PARAM_RENDER).isPresent()) {\n            remapDefaultConstants(targetContext.getIf(CTX_PARAM_REQ_PASS_THR).get({}), P_RENDER, <string>requestOptions.getIf(CTX_PARAM_RENDER).value, issuingForm, <any>sourceElementId, targetContext.getIf(VIEW_ID).value);\n        }\n    }\n\n    /**\n     * the idea is to replace some placeholder parameters with their respective values\n     * placeholder params like  @all, @none, @form, @this need to be replaced by\n     * the values defined by the specification\n     *\n     * This function does it for the execute parameters\n     *\n     * @param requestOptions the source options coming in as options object from faces.ajax.request (options parameter)\n     * @param targetContext the receiving target context\n     * @param issuingForm the issuing form\n     * @param sourceElementId the executing element triggering the faces.ajax.request (id of it)\n     */\n    function assignExecute(requestOptions: Config, targetContext: Config, issuingForm: DQ, sourceElementId: string) {\n\n        if (requestOptions.getIf(CTX_OPTIONS_EXECUTE).isPresent()) {\n            /*the options must be a blank delimited list of strings*/\n            /*compliance with Mojarra which automatically adds @this to an execute\n             * the spec rev 2.0a however states, if none is issued nothing at all should be sent down\n             */\n            requestOptions.assign(CTX_OPTIONS_EXECUTE).value = [requestOptions.getIf(CTX_OPTIONS_EXECUTE).value, IDENT_THIS].join(\" \");\n            remapDefaultConstants(targetContext.getIf(CTX_PARAM_REQ_PASS_THR).get({}), P_EXECUTE, <string>requestOptions.getIf(CTX_OPTIONS_EXECUTE).value, issuingForm, <any>sourceElementId, targetContext.getIf(VIEW_ID).value);\n        } else {\n            targetContext.assign(CTX_PARAM_REQ_PASS_THR, P_EXECUTE).value = sourceElementId;\n        }\n    }\n\n    /**\n     * apply the browser tab where the request was originating from\n     *\n     * @param form the form hosting the client window id\n     * @param targetContext the target context receiving the value\n     */\n    function assignClientWindowId(form: DQ, targetContext: Config) {\n\n        let clientWindow = $faces().getClientWindow(form.getAsElem(0).value);\n        if (clientWindow) {\n            targetContext.assign(CTX_PARAM_REQ_PASS_THR, P_CLIENT_WINDOW).value = clientWindow;\n        }\n    }\n\n    /**\n     * determines the current naming container\n     * and assigns it internally\n     *\n     * @param internalContext\n     * @param formElement\n     * @private\n     */\n    function assignNamingContainerData(internalContext: Config, formElement: DQ) {\n        const viewRootId = resolveViewRootId(formElement);\n\n        if(!!viewRootId) {\n            internalContext.assign(NAMED_VIEWROOT).value = true;\n            internalContext.assign(NAMING_CONTAINER_ID).value = viewRootId;\n        }\n    }\n\n    /**\n     * transforms the user values to the expected one\n     * with the proper none all form and this handling\n     * (note we also could use a simple string replace, but then\n     * we would have had double entries under some circumstances)\n     *\n     * there are several standardized constants which need a special treatment\n     * like @all, @none, @form, @this\n     *\n     * @param targetConfig the target configuration receiving the final values\n     * @param targetKey the target key\n     * @param userValues the passed user values (aka input string which needs to be transformed)\n     * @param issuingForm the form where the issuing element originates\n     * @param issuingElementId the issuing element\n     * @param rootNamingContainerId the naming container id (\"\" default if none is given)\n     */\n    function remapDefaultConstants(targetConfig: Config, targetKey: string, userValues: string, issuingForm: DQ, issuingElementId: string, rootNamingContainerId: string = \"\"): Config {\n        //a cleaner implementation of the transform list method\n        const SEP = $faces().separatorchar;\n        let iterValues: string[] = (userValues) ? trim(userValues).split(/\\s+/gi) : [];\n        let ret = [];\n        let processed: {[key: string]: boolean} = {};\n\n        /**\n         * remaps the client ids for the portlet case so that the server\n         * can deal with them either prefixed ir not\n         * also resolves the absolute id case (it was assumed the server does this, but\n         * apparently the RI does not, so we have to follow the RI behavior here)\n         * @param componentIdToTransform the componentId which needs post-processing\n         */\n        const remapNamingContainer = componentIdToTransform => {\n            // pattern :<anything> must be prepended by viewRoot if there is one,\n            // otherwise we are in a not namespaced then only the id has to match\n            const rootNamingContainerPrefix = (rootNamingContainerId.length) ? rootNamingContainerId+SEP : EMPTY_STR;\n            let formClientId = issuingForm.id.value;\n            // nearest parent naming container relative to the form\n            const nearestNamingContainer = formClientId.substring(0, formClientId.lastIndexOf(SEP));\n            const nearestNamingContainerPrefix = (nearestNamingContainer.length) ? nearestNamingContainer + SEP : EMPTY_STR;\n            // Absolute search expressions, always start with SEP or the name of the root naming container\n            const hasLeadingSep = componentIdToTransform.indexOf(SEP) === 0;\n            const isAbsolutSearchExpr = hasLeadingSep || (rootNamingContainerId.length\n                && componentIdToTransform.indexOf(rootNamingContainerPrefix) == 0);\n            let finalIdentifier: string;\n            if (isAbsolutSearchExpr) {\n                //we cut off the leading sep if there is one\n                componentIdToTransform = hasLeadingSep ? componentIdToTransform.substring(1) : componentIdToTransform;\n                componentIdToTransform = componentIdToTransform.indexOf(rootNamingContainerPrefix) == 0 ? componentIdToTransform.substring(rootNamingContainerPrefix.length) : componentIdToTransform;\n                //now we prepend either the prefix or \"\" from the cut-off string to get the final result\n                finalIdentifier = [rootNamingContainerPrefix, componentIdToTransform].join(EMPTY_STR);\n            } else { //relative search according to the javadoc\n                //we cut off the root naming container id from the form\n                if (formClientId.indexOf(rootNamingContainerPrefix) == 0) {\n                    formClientId = formClientId.substring(rootNamingContainerPrefix.length);\n                }\n\n                //If prependId = true, the outer form id must be present in the id if same form\n                let hasPrependId = componentIdToTransform.indexOf(formClientId) == 0;\n                finalIdentifier = hasPrependId ?\n                    [rootNamingContainerPrefix, componentIdToTransform].join(EMPTY_STR) :\n                    [nearestNamingContainerPrefix,  componentIdToTransform].join(EMPTY_STR);\n            }\n            // We need to double-check because we have scenarios where we have a naming container\n            // and no prepend (aka tobago testcase \"must handle ':' in IDs properly\", scenario 3,\n            // in this case we return the component id, and be happy\n            // we can roll a dom check here\n            return (!!document.getElementById(finalIdentifier)) ? finalIdentifier : componentIdToTransform;\n        };\n\n        // in this case we do not use lazy stream because it won´t bring any code reduction\n        // or speedup\n        for (let cnt = 0; cnt < iterValues.length; cnt++) {\n            //avoid doubles\n            if (iterValues[cnt] in processed) {\n                continue;\n            }\n            switch (iterValues[cnt]) {\n                //@none no values should be sent\n                case IDENT_NONE:\n                    return targetConfig.delete(targetKey);\n                //@all is a pass through case according to the spec\n                case IDENT_ALL:\n                    targetConfig.assign(targetKey).value = IDENT_ALL;\n                    return targetConfig;\n                //@form pushes the issuing form id into our list\n                case IDENT_FORM:\n                    ret.push(remapNamingContainer(issuingForm.id.value));\n                    processed[issuingForm.id.value] = true;\n                    break;\n                //@this is replaced with the current issuing element id\n                case IDENT_THIS:\n                    if (!(issuingElementId in processed)) {\n                        ret.push(remapNamingContainer(issuingElementId));\n                        processed[issuingElementId] = true;\n                    }\n                    break;\n                default:\n                    ret.push(remapNamingContainer(iterValues[cnt]));\n                    processed[iterValues[cnt]] = true;\n            }\n        }\n\n        targetConfig.assign(targetKey).value = ret.join(\" \");\n        return targetConfig;\n    }\n\n    /**\n     * Filter the options given with a blacklist, so that only\n     * the values required for params-through are processed in the ajax request\n     *\n     * Note this is a bug carried over from the old implementation\n     * the spec conform behavior is to use params for pass - through values\n     * this will be removed soon, after it is cleared up whether removing\n     * it breaks any legacy code\n     *\n     * @param {Context} mappedOpts the options to be filtered\n     */\n    function extractLegacyParams(mappedOpts: Options): {[key: string]: any} {\n        //we now can use the full code reduction given by our stream api\n        //to filter\n        return ofAssoc(mappedOpts)\n            .filter((item => !(item[0] in BlockFilter)))\n            .reduce(collectAssoc, {});\n    }\n\n    /**\n     * extracts the myfaces config parameters which provide extra functionality\n     * on top of JSF\n     * @param mappedOpts\n     * @private\n     */\n    function extractMyFacesParams(mappedOpts: Options): {[key: string]: any} {\n        //we now can use the full code reduction given by our stream api\n        //to filter\n        return ofAssoc(mappedOpts)\n            .filter((item => (item[0] == \"myfaces\")))\n            .reduce(collectAssoc, {})?.[MYFACES];\n    }\n\n    function remapArrayToAssocArr(arrayedParams: [[string, any]] | {[key: string]: any}): {[key: string]: any} {\n        if(Array.isArray(arrayedParams)) {\n            return arrayedParams.reduce(collectAssoc, {} as any);\n        }\n        return arrayedParams;\n    }\n\n    function resolveGlobalConfig(): any {\n        return  window?.[MYFACES]?.config ?? {};\n    }\n\n    /**\n     * Private helper to execute a function or code fragment\n     * @param source the source of the caller passed into the function as this\n     * @param event an event which needs to be passed down into the function\n     * @param func either a function or code fragment\n     * @return a boolean value, if the passed function returns false, then the\n     * caller is basically notified that the execution can now stop (JSF requirement for chain)\n     * @private\n     */\n    function resolveAndExecute(source: any, event: Event, func: Function | string): boolean {\n        if (\"string\" != typeof func) {\n            //function is passed down as chain parameter, can be executed as is\n            return (<Function>func).call(source, event) !== false;\n        } else {\n            //either a function or a string can be passed in case of a string we have to wrap it into another function\n            //it is not a plain executable code but a definition\n            let sourceCode = trim(<string>func);\n            if (sourceCode.indexOf(\"function \") == 0) {\n                sourceCode = `return ${sourceCode} (event)`;\n            }\n            return new Function(\"event\", sourceCode).call(source, event) !== false;\n        }\n    }\n}\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Typescript port of the faces\\.push part in the myfaces implementation\n */\nimport {MAX_RECONNECT_ATTEMPTS, REASON_EXPIRED, RECONNECT_INTERVAL} from \"./core/Const\";\nimport {DQ} from \"mona-dish\";\n\n/**\n * Implementation class for the push functionality\n */\nexport module PushImpl {\n\n    const URL_PROTOCOL = DQ.global().location.protocol.replace(\"http\", \"ws\") + \"//\";\n\n\n    // we expose the member variables for testing purposes\n    // they are not directly touched outside of tests\n\n    /* socket map by token */\n    export let sockets = {};\n    /* component attributes by clientId */\n    export let components = {};\n    /* client ids by token (share websocket connection) */\n    export let clientIdsByTokens = {};\n\n\n    // needed for testing\n    export function reset() {\n        sockets = {};\n        components = {}\n        clientIdsByTokens = {}\n    }\n\n    /*\n     * Api implementations, exposed functions\n     */\n\n    /**\n     * @param socketClientId the sockets client identifier\n     * @param url the uri to reach the socket\n     * @param channel the channel name/id\n     * @param onopen The function to be invoked when the web socket is opened.\n     * @param onmessage The function to be invoked when a message is received.\n     * @param onerror The function to be invoked when an error occurs.\n     * @param onclose The function to be invoked when the web socket is closed.\n     * @param behaviors functions which are invoked whenever a message is received\n     * @param autoConnect Whether or not to automatically open the socket. Defaults to <code>false</code>.\n     */\n    export function init(socketClientId: string,\n                         url: string,\n                         channel: string,\n                         onopen: Function,\n                         onmessage: Function,\n                         onerror: Function,\n                         onclose: Function,\n                         behaviors: any,\n                         autoConnect: boolean) {\n        onclose = resolveFunction(onclose);\n\n        if (!DQ.global().WebSocket) { // IE6-9.\n            onclose(-1, channel);\n            return;\n        }\n\n        let channelToken = url.substr(url.indexOf('?') + 1);\n\n        if (!components[socketClientId]) {\n            components[socketClientId] = {\n                'channelToken': channelToken,\n                'onopen': resolveFunction(onopen),\n                'onmessage' : resolveFunction(onmessage),\n                'onerror' : resolveFunction(onerror),\n                'onclose': onclose,\n                'behaviors': behaviors,\n                'autoconnect': autoConnect};\n            if (!clientIdsByTokens[channelToken]) {\n                clientIdsByTokens[channelToken] = [];\n            }\n            clientIdsByTokens[channelToken].push(socketClientId);\n            if (!sockets[channelToken]){\n                sockets[channelToken] = new Socket(channelToken,\n                    getBaseURL(url), channel);\n            }\n        }\n\n        if (autoConnect) {\n            (DQ.global()?.faces ?? DQ.global()?.jsf).push.open(socketClientId);\n        }\n    }\n\n    export function open(socketClientId: string) {\n        getSocket(components[socketClientId]?.channelToken).open();\n    }\n\n    export function close(socketClientId: string) {\n        getSocket(components[socketClientId].channelToken).close();\n    }\n\n    // Private helper classes\n    // Private classes functions ----------------------------------------------------------------------------------\n    /**\n     * Creates a reconnecting web socket. When the web socket successfully connects on first attempt, then it will\n     * automatically reconnect on timeout with cumulative intervals of 500ms with a maximum of 25 attempts (~3 minutes).\n     * The <code>onclose</code> function will be called with the error code of the last attempt.\n     * @constructor\n     * @param {string} channelToken the channel token associated with this websocket connection\n     * @param {string} url The URL of the web socket\n     * @param {string} channel The name of the web socket channel.\n     */\n\n    class Socket {\n\n        socket: WebSocket;\n        reconnectAttempts = 0;\n\n        constructor(private channelToken: string, private url: string, private channel: string) {\n        }\n\n        open() {\n            if (this.socket && this.socket.readyState == 1) {\n                return;\n            }\n            this.socket = new WebSocket(this.url);\n\n            this.bindCallbacks();\n        }\n\n        // noinspection JSUnusedLocalSymbols\n        onopen(event: any) {\n            if (!this.reconnectAttempts) {\n                let clientIds = clientIdsByTokens[this.channelToken];\n                for (let i = clientIds.length - 1; i >= 0; i--) {\n                    let socketClientId = clientIds[i];\n                    components[socketClientId]?.['onopen']?.(this.channel);\n                }\n            }\n            this.reconnectAttempts = 0;\n        }\n\n        onerror(event: any) {\n            let message = JSON.parse(event.data);\n            //TODO replace this with a more readable Stream code\n            for (let i = clientIdsByTokens[this.channelToken].length - 1; i >= 0; i--) {\n                let socketClientId = clientIdsByTokens[this.channelToken][i];\n                if (document.getElementById(socketClientId)) {\n                    try {\n                        components[socketClientId]?.['onerror']?.(message, this.channel, event);\n                    } catch (e) {\n                        //Ignore\n                    }\n                } else {\n                    clientIdsByTokens[this.channelToken].splice(i, 1);\n                }\n            }\n            if (clientIdsByTokens[this.channelToken].length == 0) {\n                // tag disappeared\n                this.close();\n            }\n        }\n\n        onmmessage(event: any) {\n            let message = JSON.parse(event.data);\n            for (let i = clientIdsByTokens[this.channelToken].length - 1; i >= 0; i--) {\n                let socketClientId = clientIdsByTokens[this.channelToken][i];\n                if (document.getElementById(socketClientId)) {\n                    try {\n                        components[socketClientId]?.['onmessage']?.(message, this.channel, event);\n                    } catch (e) {\n                        //Ignore\n                    }\n                    let behaviors = components?.[socketClientId]?.['behaviors'];\n                    let functions = behaviors?.[message];\n                    if (functions && functions.length) {\n                        for (let j = 0; j < functions.length; j++) {\n                            try {\n                                functions[j](null);\n                            } catch (e) {\n                                //Ignore\n                            }\n                        }\n                    }\n                } else {\n                    clientIdsByTokens[this.channelToken].splice(i, 1);\n                }\n            }\n            if (clientIdsByTokens[this.channelToken].length == 0) {\n                // tag disappeared\n                this.close();\n            }\n        }\n\n        onclose(event: any) {\n            if (!this.socket\n                || (event.code == 1000 && event.reason == REASON_EXPIRED)\n                || (event.code == 1008)\n                || (!this.reconnectAttempts)\n                || (this.reconnectAttempts >= MAX_RECONNECT_ATTEMPTS)) {\n                let clientIds = clientIdsByTokens[this.channelToken];\n                for (let i = clientIds.length - 1; i >= 0; i--) {\n                    let socketClientId = clientIds[i];\n                    components?.[socketClientId]?.['onclose']?.(event?.code, this?.channel, event);\n                }\n            } else {\n                setTimeout(this.open, RECONNECT_INTERVAL * this.reconnectAttempts++);\n            }\n        };\n\n        close() {\n            if (this.socket) {\n                let s = this.socket;\n                this.socket = null;\n                s.close();\n            }\n        }\n\n        /**\n         * bind the callbacks to the socket callbacks\n         */\n        private bindCallbacks() {\n            this.socket.onopen = (event: Event) => this.onopen(event);\n            this.socket.onmessage = (event: Event) => this.onmmessage(event);\n            this.socket.onclose = (event: Event) => this.onclose(event);\n            this.socket.onerror = (event: Event) => this.onerror(event);\n        }\n    }\n\n    // Private static functions ---------------------------------------------------------------------------------------\n\n    function getBaseURL(url: string) {\n        if (url.indexOf(\"://\") < 0) {\n            let base = DQ.global().location.hostname + \":\" + DQ.global().location.port;\n            return URL_PROTOCOL + base + url;\n        } else {\n            return url;\n        }\n    }\n\n    /**\n     * Get socket associated with given channelToken.\n     * @param channelToken The name of the web socket channelToken.\n     * @return Socket associated with given channelToken.\n     * @throws Error, when the channelToken is unknown, you may need to initialize\n     *                 it first via <code>init()</code> function.\n     */\n    function getSocket(channelToken: string): Socket {\n        let socket = sockets[channelToken];\n        if (socket) {\n            return socket;\n        } else {\n            throw new Error(\"Unknown channelToken: \" + channelToken);\n        }\n    }\n\n    function resolveFunction(fn: Function | string = () => {\n    }): Function {\n        return <Function>((typeof fn !== \"function\") && (fn = DQ.global()[fn]), fn);\n    }\n\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * [export const] constants\n */\n\nexport const XML_ATTR_NAMED_VIEWROOT = \"namedViewRoot\";\nexport const NAMED_VIEWROOT = \"namedViewRoot\";\n\nexport const P_AJAX_SOURCE = \"jakarta.faces.source\";\nexport const NAMING_CONTAINER_ID = \"myfaces.NamingContainerId\";\n\nexport const VIEW_ID = \"myfaces.viewId\";\nexport const P_VIEWSTATE = \"jakarta.faces.ViewState\";\nexport const P_CLIENT_WINDOW = \"jakarta.faces.ClientWindow\";\nexport const P_VIEWROOT = \"jakarta.faces.ViewRoot\";\nexport const P_VIEWHEAD = \"jakarta.faces.ViewHead\";\nexport const P_VIEWBODY = \"jakarta.faces.ViewBody\";\n\nexport const P_RESOURCE = \"jakarta.faces.Resource\";\n\n/*some useful definitions*/\n\nexport const EMPTY_FUNC = Object.freeze(() => {\n});\nexport const EMPTY_STR = \"\";\nexport const EMPTY_MAP = Object.freeze({});\n\nexport const HTML_VIEWSTATE = [\"<input type='hidden'\", \"name='\", P_VIEWSTATE, \"' value='' />\"].join(EMPTY_STR);\nexport const HTML_CLIENT_WINDOW = [\"<input type='hidden'\", \"' name='\", P_CLIENT_WINDOW, \"' value='' />\"].join(EMPTY_STR);\n\n\n/*internal identifiers for options*/\nexport const IDENT_ALL = \"@all\";\nexport const IDENT_NONE = \"@none\";\nexport const IDENT_THIS = \"@this\";\nexport const IDENT_FORM = \"@form\";\n\n\nexport const P_AJAX = \"jakarta.faces.partial.ajax\";\nexport const P_EXECUTE = \"jakarta.faces.partial.execute\";\nexport const P_RENDER = \"jakarta.faces.partial.render\";\n/*render override for viewbody or viewroot, in both cases an all is performed*/\nexport const P_RENDER_OVERRIDE = \"_myfaces.rendeOverride\";\nexport const P_EVT = \"jakarta.faces.partial.event\";\n\nexport const P_RESET_VALUES = \"jakarta.faces.partial.resetValues\";\nexport const P_WINDOW_ID = \"jakarta.faces.windowId\";\n\nexport const P_BEHAVIOR_EVENT = \"jakarta.faces.behavior.event\";\n\nexport const CTX_PARAM_RENDER = \"render\";\nexport const WINDOW_ID = \"windowId\";\n\n/* message types */\nexport const ERROR = \"error\";\nexport const EVENT = \"event\";\n\nexport const ON_ERROR = \"onerror\";\nexport const ON_EVENT = \"onevent\";\n\n/* event emitting stages */\nexport const BEGIN = \"begin\";\nexport const COMPLETE = \"complete\";\nexport const SUCCESS = \"success\";\n\nexport const SOURCE = \"source\";\nexport const STATUS = \"status\";\n\n\nexport const ERROR_NAME = \"error-name\";\nexport const ERROR_MESSAGE = \"error-message\";\n\n\nexport const RESPONSE_TEXT = \"responseText\";\nexport const RESPONSE_XML = \"responseXML\";\n\n/*ajax errors spec 14.4.2*/\nexport const HTTPERROR = \"httpError\";\nexport const EMPTY_RESPONSE = \"emptyResponse\";\nexport const MALFORMEDXML = \"malformedXML\";\nexport const SERVER_ERROR = \"serverError\";\nexport const CLIENT_ERROR = \"clientError\";\nexport const TIMEOUT_EVENT = \"timeout\";\n\nexport const CTX_OPTIONS_PARAMS = \"params\";\nexport const CTX_OPTIONS_DELAY = \"delay\";\nexport const DELAY_NONE = 'none';\nexport const CTX_OPTIONS_TIMEOUT = \"timeout\";\nexport const CTX_OPTIONS_RESET = \"resetValues\";\nexport const CTX_OPTIONS_EXECUTE = \"execute\";\n\nexport const CTX_PARAM_MF_INTERNAL = \"myfaces.internal\";\nexport const CTX_PARAM_SRC_FRM_ID = \"myfaces.source.formId\";\nexport const CTX_PARAM_SRC_CTL_ID = \"myfaces.source.controlId\";\nexport const CTX_PARAM_REQ_PASS_THR = \"myfaces.request.passThrough\";\nexport const CTX_PARAM_PPS = \"myfaces.request.pps\";\n\nexport const CONTENT_TYPE = \"Content-Type\";\nexport const HEAD_FACES_REQ = \"Faces-Request\";\nexport const REQ_ACCEPT = \"Accept\";\nexport const VAL_AJAX = \"partial/ajax\";\nexport const ENCODED_URL = \"jakarta.faces.encodedURL\";\nexport const REQ_TYPE_GET = \"GET\";\nexport const REQ_TYPE_POST = \"POST\";\nexport const STATE_EVT_BEGIN = \"begin\"; //TODO remove this\nexport const STATE_EVT_TIMEOUT = \"TIMEOUT_EVENT\";\nexport const STATE_EVT_COMPLETE = \"complete\"; //TODO remove this\nexport const URL_ENCODED = \"application/x-www-form-urlencoded\";\nexport const MULTIPART = \"multipart/form-data\";\nexport const NO_TIMEOUT = 0;\nexport const STD_ACCEPT = \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\";\n\nexport const HTML_TAG_HEAD = \"HEAD\";\nexport const HTML_TAG_FORM = \"FORM\";\nexport const HTML_TAG_BODY = \"BODY\";\nexport const HTML_TAG_LINK = \"LINK\";\nexport const HTML_TAG_SCRIPT = \"SCRIPT\";\nexport const HTML_TAG_STYLE = \"STYLE\";\n\n\nexport const SEL_VIEWSTATE_ELEM = \"[name='\" + P_VIEWSTATE + \"']\";\nexport const SEL_CLIENT_WINDOW_ELEM = \"[name='\" + P_CLIENT_WINDOW + \"']\";\nexport const SEL_RESPONSE_XML = \"responseXML\";\n\nexport const PHASE_PROCESS_RESPONSE = \"processResponse\";\n\n\nexport const ERR_NO_PARTIAL_RESPONSE = \"Partial response not set\";\n\nexport const MYFACES_OPTION_PPS = \"pps\";\n\nexport const ATTR_URL = \"url\";\nexport const ATTR_NAME = \"name\";\nexport const ATTR_VALUE = \"value\";\nexport const ATTR_ID = \"id\";\n\n/*partial response types*/\nexport const XML_TAG_PARTIAL_RESP = \"partial-response\";\n\n/*partial commands*/\nexport const XML_TAG_CHANGES = \"changes\";\nexport const XML_TAG_UPDATE = \"update\";\nexport const XML_TAG_DELETE = \"delete\";\nexport const XML_TAG_INSERT = \"insert\";\nexport const XML_TAG_EVAL = \"eval\";\nexport const XML_TAG_ERROR = \"error\";\nexport const XML_TAG_ATTRIBUTES = \"attributes\";\nexport const XML_TAG_EXTENSION = \"extension\";\nexport const XML_TAG_REDIRECT = \"redirect\";\nexport const XML_TAG_BEFORE = \"before\";\nexport const XML_TAG_AFTER = \"after\";\nexport const XML_TAG_ATTR = \"attribute\";\n\n\n/*other constants*/\n\nexport const UPDATE_FORMS = \"myfaces.updateForms\";\nexport const UPDATE_ELEMS = \"myfaces.updateElems\";\n\n//we want the head elements to be processed before we process the body\n//but after the inner html is done\nexport const DEFERRED_HEAD_INSERTS = \"myfaces.headElems\";\n\nexport const MYFACES = \"myfaces\";\n\nexport const MF_NONE = \"__mf_none__\";\n\nexport const REASON_EXPIRED = \"Expired\";\n\nexport const APPLIED_VST = \"myfaces.appliedViewState\";\nexport const APPLIED_CLIENT_WINDOW = \"myfaces.appliedClientWindow\";\n\nexport const RECONNECT_INTERVAL = 500;\nexport const MAX_RECONNECT_ATTEMPTS = 25;\n\nexport const UNKNOWN = \"UNKNOWN\";\n\n/**\n * helper to remap the namespaces variables for 2.3\n * from 2.3 to 4.0 every javax namespace has been changed\n * to faces\n * To take the compatibility layer out this method just has to be\n * changed to a simple value passthrough\n */\n\nexport function $faces(): FacesAPI {\n     return (window?.faces ?? window?.jsf) as FacesAPI;\n}\n\nexport function $nsp(inputNamespace?: any): any {\n     if((!inputNamespace) || !inputNamespace?.replace) {\n          return inputNamespace;\n     }\n     return (!!window?.faces) ? inputNamespace.replace(/javax\\.faces/gi,\"jakarta.faces\"): inputNamespace.replace(/jakarta\\.faces/gi, \"javax.faces\");\n}\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {EMPTY_STR, P_VIEWSTATE} from \"./Const\";\n\nexport interface IdValueHolder {\n\n    readonly id: string;\n    readonly value: string;\n\n}\n\n/**\n * a helper class to isolate the\n * view state and client window and other\n * future states which follow a similar pattern\n */\nexport class StateHolder implements IdValueHolder {\n\n    nameSpace: string;\n\n    constructor(public id: string, public value: string) {\n        let viewStatePos = id.indexOf(P_VIEWSTATE);\n        this.nameSpace = viewStatePos > 0 ? id.substr(0, viewStatePos - 1) : EMPTY_STR;\n    }\n\n    get hasNameSpace(): boolean {\n        return !!(this?.nameSpace ?? EMPTY_STR).length;\n    }\n}\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Messages {\n    MSG_TEST = \"Testmessage\";\n\n    /*Messages*/\n    /** @constant */\n    MSG_DEV_MODE = \"Note, this message is only sent, because project stage is development and no \" +\n        \"other error listeners are registered.\";\n    /** @constant */\n    MSG_AFFECTED_CLASS = \"Affected Class=\";\n    /** @constant */\n    MSG_AFFECTED_METHOD = \"Affected Method=\";\n    /** @constant */\n    MSG_ERROR_NAME = \"Error Name=\";\n    /** @constant */\n    MSG_ERROR_MESSAGE = \"Error Message=\";\n    /** @constant */\n    MSG_SERVER_ERROR_NAME = \"Server Error Name=\";\n\n    /** @constant */\n    MSG_ERROR_DESC = \"Error Description=\";\n    /** @constant */\n    MSG_ERROR_NO = \"Error Number=\";\n    /** @constant */\n    MSG_ERROR_LINENO = \"Error Line Number=\";\n\n    /*Errors and messages*/\n    /** @constant */\n    ERR_FORM = \"Sourceform could not be determined, either because element is not attached to a form or we have multiple forms with named elements of the same identifier or name, stopping the ajax processing\";\n    /** @constant */\n    ERR_VIEWSTATE = \"faces.viewState= param value not of type form!\";\n    /** @constant */\n    ERR_TRANSPORT = \"Transport type {0} does not exist\";\n    /** @constant */\n    ERR_EVT_PASS = \"an event must be passed down (either a an event object null or undefined) \";\n    /** @constant */\n    ERR_CONSTRUCT = \"Parts of the response couldn't be retrieved when constructing the event data= {0} \";\n    /** @constant */\n    ERR_MALFORMEDXML = \"The server response could not be parsed, the server has returned with a response which is not xml !\";\n    /** @constant */\n    ERR_SOURCE_FUNC = \"source cannot be a function (probably source and event were not defined or set to null\";\n    /** @constant */\n    ERR_EV_OR_UNKNOWN = \"An event object or unknown must be passed as second parameter\";\n    /** @constant */\n    ERR_SOURCE_NOSTR = \"source cannot be a string\";\n    /** @constant */\n    ERR_SOURCE_DEF_NULL = \"source must be defined or null\";\n\n    //_Lang.js\n    /** @constant */\n    ERR_MUST_STRING = \"{0}: {1} namespace must be of type String\";\n    /** @constant */\n    ERR_REF_OR_ID = \"{0}: {1} a reference node or identifier must be provided\";\n    /** @constant */\n    ERR_PARAM_GENERIC = \"{0}: parameter {1} must be of type {2}\";\n    /** @constant */\n    ERR_PARAM_STR = \"{0}: {1} param must be of type string\";\n    /** @constant */\n    ERR_PARAM_STR_RE = \"{0}: {1} param must be of type string or a regular expression\";\n    /** @constant */\n    ERR_PARAM_MIXMAPS = \"{0}: both a source as well as a destination map must be provided\";\n    /** @constant */\n    ERR_MUST_BE_PROVIDED = \"{0}: an {1} and a {2} must be provided\";\n    /** @constant */\n    ERR_MUST_BE_PROVIDED1 = \"{0}: {1} must be set\";\n\n    /** @constant */\n    ERR_REPLACE_EL = \"replaceElements called while evalNodes is not an array\";\n\n    /** @constant */\n    ERR_EMPTY_RESPONSE = \"{0}: The response cannot be null or empty!\";\n    /** @constant */\n    ERR_ITEM_ID_NOTFOUND = \"{0}: item with identifier {1} could not be found\";\n    /** @constant */\n    ERR_PPR_IDREQ = \"{0}: Error in PPR Insert, id must be present\";\n    /** @constant */\n    ERR_PPR_INSERTBEFID = \"{0}: Error in PPR Insert, before id or after id must be present\";\n    /** @constant */\n    ERR_PPR_INSERTBEFID_1 = \"{0}: Error in PPR Insert, before  node of id {1} does not exist in document\";\n    /** @constant */\n    ERR_PPR_INSERTBEFID_2 = \"{0}: Error in PPR Insert, after  node of id {1} does not exist in document\";\n\n    /** @constant */\n    ERR_PPR_DELID = \"{0}: Error in delete, id not in xml markup\";\n    /** @constant */\n    ERR_PPR_UNKNOWNCID = \"{0}:  Unknown Html-Component-ID= {1}\";\n\n    /** @constant */\n    ERR_NO_VIEWROOTATTR = \"{0}: Changing of ViewRoot attributes is not supported\";\n    /** @constant */\n    ERR_NO_HEADATTR = \"{0}: Changing of Head attributes is not supported\";\n    /** @constant */\n    ERR_RED_URL = \"{0}: Redirect without url\";\n\n    /** @constant */\n    ERR_REQ_FAILED_UNKNOWN = \"Request failed with unknown status\";\n\n    /** @constant */\n    ERR_REQU_FAILED = \"Request failed with status {0} and reason {1}\";\n\n    /** @constant */\n    UNKNOWN = \"UNKNOWN\";\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Config, Lang, XMLQuery} from \"mona-dish\";\n\nimport {DQ} from \"mona-dish\";\nimport {\n    ATTR_URL,\n    EMPTY_RESPONSE,\n    EMPTY_STR, ERR_NO_PARTIAL_RESPONSE, MALFORMEDXML,\n    ON_ERROR,\n    ON_EVENT,\n    PHASE_PROCESS_RESPONSE,\n    XML_TAG_PARTIAL_RESP\n} from \"../core/Const\";\nimport {ExtLang} from \"./Lang\";\n\n\n/**\n * a set of internal code assertions\n * which raise an error\n *\n */\nexport module Assertions {\n\n\n\n    export function assertRequestIntegrity(options: Config, elem: DQ): void | never {\n        /*assert if the onerror is set and once if it is set it must be of type function*/\n        assertFunction(options.getIf(ON_ERROR).value);\n        /*assert if the onevent is set and once if it is set it must be of type function*/\n        assertFunction(options.getIf(ON_EVENT).value);\n        //improve the error messages if an empty elem is passed\n        //Assertions.assertElementExists(elem);\n        assert(elem.isPresent(), ExtLang.getMessage(\"ERR_MUST_BE_PROVIDED1\", \"{0}: source  must be provided or exist\", \"source element id\"), \"faces.ajax.request\", \"ArgNotSet\",  )\n    }\n\n    export function assertUrlExists(node: XMLQuery): void | never {\n        if (node.attr(ATTR_URL).isAbsent()) {\n            throw Assertions.raiseError(new Error(), ExtLang.getMessage(\"ERR_RED_URL\", null, \"processRedirect\"), \"processRedirect\");\n        }\n    }\n\n    /**\n     * checks the xml for various issues which can occur\n     * and prevent a proper processing\n     */\n    export function assertValidXMLResponse(responseXML: XMLQuery) : void | never  {\n        assert(!responseXML.isAbsent(), EMPTY_RESPONSE, PHASE_PROCESS_RESPONSE);\n        assert(!responseXML.isXMLParserError(),  responseXML.parserErrorText(EMPTY_STR), PHASE_PROCESS_RESPONSE);\n        assert(responseXML.querySelectorAll(XML_TAG_PARTIAL_RESP).isPresent(), ERR_NO_PARTIAL_RESPONSE, PHASE_PROCESS_RESPONSE);\n    }\n\n    /**\n     * internal helper which raises an error in the\n     * format we need for further processing\n     *\n     * @param error\n     * @param message the message\n     * @param caller\n     * @param title the title of the error (optional)\n     * @param name the name of the error (optional)\n     */\n    export function raiseError(error: any, message: string, caller ?: string, title ?: string, name ?: string): Error {\n\n        let finalTitle = title ?? MALFORMEDXML;\n        let finalName = name ?? MALFORMEDXML;\n        let finalMessage = message ?? EMPTY_STR;\n\n        //TODO clean up the messy makeException, this is a perfect case for encapsulation and sane defaults\n        return ExtLang.makeException(error, finalTitle, finalName, \"Response\", caller || (((<any>arguments).caller) ? (<any>arguments).caller.toString() : \"_raiseError\"), finalMessage);\n    }\n\n    /*\n     * using the new typescript 3.7 compiler assertion functionality to improve compiler hinting\n     * we are not fully there yet, but soon\n     */\n\n    export function assert(value: any, msg = EMPTY_STR, caller=EMPTY_STR, title=\"Assertion Error\"): asserts value {\n        if(!value) {\n            throw Assertions.raiseError(new Error(), msg ,caller, title);\n        }\n    }\n\n\n    export function assertType(value: any, theType: any, msg = EMPTY_STR, caller=EMPTY_STR, title=\"Type Assertion Error\"): asserts value {\n        if((!!value) && !Lang.assertType(value,theType)) {\n            throw Assertions.raiseError(new Error(), msg ,caller, title);\n        }\n    }\n\n    export function assertFunction(value: any, msg = EMPTY_STR, caller=EMPTY_STR, title=\"Assertion Error\"): asserts value is Function {\n        assertType(value, \"function\", msg, caller, title);\n    }\n\n    export function assertDelay(value: any) {\n        if(!(value >= 0)) { // >= 0 abbreviation which covers all cases of non positive values,\n            // including NaN and non numeric strings, no type equality is deliberate here,\n            throw new Error(\"Invalid delay value: \" + value);\n        }\n    }\n}\n\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asynchronous queue member for our asynchronous queue\n * Ever object in the asynchronous queue needs to implement this interface\n *\n * the usage should be similar as Promise. from the outside.\n * but with a dedicated start point. The problem why we cannot use\n * promises here, is mostly related to the needed cancel functionality\n * and that the queue expects a runnable as entry.\n *\n * from the implementation side it is mostly registering callbacks\n * and calling them at the appropriate time.\n */\nexport interface IAsyncRunnable<T> {\n    /**\n     * starts the runnable\n     */\n    start();\n\n    /**\n     * cancel the current ongoing op if possible\n     */\n    cancel();\n\n    /**\n     * callback for then functionality\n     * triggered when the async run is complete\n     *\n     * the async runnable must register the passed function\n     * and then triggers all the registered then functions\n     * when it is complete\n     *\n     * @param func the then functor\n     */\n    then(func: (data: any) => any): IAsyncRunnable<T>;\n\n    /**\n     * callback for catch functionality\n     * triggered when the async run is complete\n     *\n     * the async runnable must register the passed function\n     * and then triggers all the registered catch handlers\n     * when an error has occurred\n     *\n     * @param func\n     */\n    catch(func: (data: any) => any): IAsyncRunnable<T>;\n\n\n    /**\n     * finally called when all then and catches are performed\n     * same this is a register function\n     * and once the finally time for the promise has\n     * come the finally functions must be performed\n     */\n    finally(func: () => void): IAsyncRunnable<T>;\n}\n\n\n/**\n * pretty much the same as cancellable Promise, but given\n * we do not have that on browser level yet this is sort\n * of a non - intrusive Shim!\n */\nexport abstract class AsyncRunnable<T> implements IAsyncRunnable<T>{\n    /**\n     * helper support so that we do not have to drag in Promise shims\n     */\n    private catchFunctions: Array<Function> = [];\n    private thenFunctions: Array<Function> = [];\n\n    /**\n     * cancel the run of the runnable (which then depending on the implementation\n     * either triggers indirectly resolve or reject)\n     */\n    abstract cancel(): void;\n\n    /**\n     * extended functionality start to trigger the runnable\n     */\n    abstract start(): void;\n\n    /**\n     * resolve handler function which calls the then chain\n     * and after that finally\n     * @param data\n     */\n    resolve(data: any) {\n        this.thenFunctions.reduce((inputVal: any, thenFunc: any) => {\n            return thenFunc(inputVal);\n        }, data)\n    }\n\n    /**\n     * reject handler function which triggers the catch chain\n     * @param data\n     */\n    reject(data: any) {\n        this.catchFunctions.reduce((inputVal: any, catchFunc: any) => {\n            return catchFunc(inputVal);\n        }, data);\n    }\n\n    /**\n     * register a catch functor\n     * @param func the functor for the catch monad\n     */\n    catch(func: (data: any) => any): IAsyncRunnable<T> {\n        this.catchFunctions.push(func);\n        return this;\n    }\n\n    /**\n     * registers a finally functor\n     * @param func the functor for the finally handling chanin\n     */\n    finally(func: () => void): IAsyncRunnable<T> {\n        // no ie11 support we probably are going to revert to shims for that one\n        this.catchFunctions.push(func);\n        this.thenFunctions.push(func);\n        return this;\n    }\n\n    /**\n     * @param func then functor similar to promise\n     */\n    then(func: (data: any) => any): IAsyncRunnable<T> {\n        this.thenFunctions.push(func);\n        return this;\n    }\n}\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Config, IValueHolder, Optional, DomQuery, DQ, Es2019Array} from \"mona-dish\";\nimport {$nsp, P_WINDOW_ID} from \"../core/Const\";\n\n\n/**\n * detects whether a source is a faces.js request\n *\n * @param source the source string for the faces.js request\n * @return true if a faces.js loading pattern is detected\n * @constructor\n */\nconst IS_FACES_SOURCE = (source?: string): boolean => {\n    //spec version smaller 4 we have to deal with the jsf namespace\n\n    return source && !!(source?.search(/\\/jakarta\\.faces\\.resource.*\\/faces\\.js.*/) != -1 ||\n        source?.search(/\\/faces-development\\.js.*/) != -1 ||\n        source?.search(/\\/faces-uncompressed\\.js.*/) != -1 ||\n        source?.search(/\\/faces[^.]*\\.js.*ln=jakarta.faces.*/gi) != -1 ||\n        //fallback without check for jsf, that way we allow both bookmarks\n        source?.search(/\\/javax\\.faces\\.resource.*\\/jsf\\.js.*/) != -1 ||\n            source?.search(/\\/jsf-development\\.js.*/) != -1 ||\n            source?.search(/\\/jsf-uncompressed\\.js.*/) != -1 ||\n            source?.search(/\\/jsf[^.]*\\.js.*ln=javax.faces.*/gi) != -1);\n}\n\n/**\n * namespace myfaces\\.testscripts can be used as extension point for internal\n * tests, those will be handled similarly to faces.js, in regard\n * to reload blocking on ajax requests\n *\n * Note: atm not used, used to be used in the old implementation\n * but still is reserved for now\n *\n * @param source the source to check\n * @constructor\n */\nconst IS_INTERNAL_SOURCE = (source: string): boolean => {\n    return source.search(/\\/faces[^.]*\\.js.*ln=myfaces.testscripts.*/gi) != -1 || source.search(/\\/jsf[^.]*\\.js.*ln=myfaces.testscripts.*/gi) != -1;\n}\n\n\nconst ATTR_SRC = 'src';\n\n/**\n * Extension which adds implementation specific\n * meta-data to our dom query\n *\n * Usage\n * el = new ExtDQ(oldReference)\n * nonce = el.nonce\n * windowId = el.getWindowId\n */\nexport class ExtDomQuery extends DQ {\n\n    static get windowId() {\n        return new ExtDomQuery(document.body).windowId;\n    }\n\n    static get nonce(): string {\n        return new ExtDomQuery(document.body).nonce;\n    }\n\n    get windowId(): string | null {\n\n        const fetchWindowIdFromURL = function (): string | null {\n            let href = window.location.href;\n            let windowId = \"windowId\";\n            let regex = new RegExp(\"[\\\\?&]\" + windowId + \"=([^&#\\\\;]*)\");\n            let results = regex.exec(href);\n            //initial trial over the url and a regexp\n            if (results != null) return results[1];\n            return null;\n        };\n\n        //byId ($)\n        if (this.value.isPresent()) {\n            let result = this.querySelectorAll(\"form input[name='\" + P_WINDOW_ID + \"']\");\n            if (result.length > 1) {\n                throw Error(\"Multiple different windowIds found in document\");\n            }\n\n            return (result.isPresent()) ? (<HTMLInputElement>result.getAsElem(0).value).value : fetchWindowIdFromURL();\n        } else {\n            return fetchWindowIdFromURL();\n        }\n    }\n\n    /*\n    * determines the faces.js nonce and adds them to the namespace\n    * this is done once and only lazily\n    */\n    get nonce(): string | null {\n        //already processed\n        let myfacesConfig = new ExtConfig(window.myfaces);\n        let nonce: IValueHolder<string> = myfacesConfig.getIf(\"config\", \"cspMeta\", \"nonce\");\n        if (nonce.value) {\n            return <string>nonce.value;\n        }\n\n        let curScript = new DQ(document.currentScript);\n        //since our baseline atm is ie11 we cannot use document.currentScript globally\n        if (!!this.extractNonce(curScript)) {\n            // fast-path for modern browsers\n            return this.extractNonce(curScript);\n        }\n        // fallback if the currentScript method fails, we just search the jsf tags for nonce, this is\n        // the last possibility\n        let nonceScript = Optional.fromNullable(DQ\n            .querySelectorAll(\"script[src], link[src]\").asArray\n            .filter((item) => this.extractNonce(item)  && item.attr(ATTR_SRC) != null)\n            .filter(item => IS_FACES_SOURCE(item.attr(ATTR_SRC).value))?.[0]);\n\n        if (nonceScript.isPresent()) {\n            return this.extractNonce(nonceScript.value);\n        }\n        return null;\n    }\n\n    static searchJsfJsFor(item: RegExp): Optional<String> {\n        return new ExtDomQuery(document).searchJsfJsFor(item);\n    }\n\n    /**\n     * searches the embedded faces.js for items like separator char etc.\n     * expects a match as variable under position 1 in the result match\n     * @param regExp\n     */\n    searchJsfJsFor(regExp: RegExp): Optional<string> {\n        //perfect application for lazy stream\n        return Optional.fromNullable(DQ.querySelectorAll(\"script[src], link[src]\").asArray\n            .filter(item => IS_FACES_SOURCE(item.attr(ATTR_SRC).value))\n            .map(item => item.attr(ATTR_SRC).value.match(regExp))\n            .filter(item => item != null && item.length > 1)\n            .map((result: string[]) => {\n                return decodeURIComponent(result[1]);\n            })?.[0]);\n    }\n\n    globalEval(code: string, nonce ?: string): DQ {\n        return new ExtDomQuery(super.globalEval(code, nonce ?? this.nonce));\n    }\n\n    // called from base class runScripts, do not delete\n    // noinspection JSUnusedGlobalSymbols\n    globalEvalSticky(code: string, nonce ?: string): DQ {\n        return new ExtDomQuery(super.globalEvalSticky(code, nonce ?? this.nonce));\n    }\n\n    /**\n     * decorated run scripts which takes our jsf extensions into consideration\n     * (standard DomQuery will let you pass anything)\n     * @param sticky if set to true the internally generated element for the script is left in the dom\n     * @param whiteListed\n     */\n    runScripts(sticky = false, whiteListed?: (src: string) => boolean): DomQuery {\n        const whitelistFunc = (src: string): boolean => {\n            return (whiteListed?.(src) ?? true) && !IS_FACES_SOURCE(src) && !IS_INTERNAL_SOURCE(src);\n        };\n        return super.runScripts(sticky, whitelistFunc);\n    }\n\n    /**\n     * adds the elements in this ExtDomQuery to the head\n     *\n     * @param suppressDoubleIncludes checks for existing elements in the head before running the insert\n     */\n    runHeadInserts(suppressDoubleIncludes = true): void {\n        let head = ExtDomQuery.byId(document.head);\n        //automated nonce handling\n        let processedScripts = [];\n\n        // the idea is only to run head inserts on resources\n        // which do not exist already, that way\n        // we can avoid double includes on subsequent resource\n        // requests.\n        function resourceIsNew(element: DomQuery) {\n            if(!suppressDoubleIncludes) {\n                return true;\n            }\n            const tagName = element.tagName.value;\n            if(!tagName) {\n                // text node they do not have tag names, so we can process them as they are without\n                // any further ado\n                return true;\n            }\n            let reference = element.attr(\"href\")\n                .orElseLazy(() => element.attr(\"src\").value)\n                .orElseLazy(() => element.attr(\"rel\").value);\n\n            if (!reference.isPresent()) {\n                return true;\n            }\n            return !head.querySelectorAll(`${tagName}[href='${reference.value}']`).length &&\n                !head.querySelectorAll(`${tagName}[src='${reference.value}']`).length &&\n                !head.querySelectorAll(`${tagName}[rel='${reference.value}']`).length;\n        }\n\n        this\n            .filter(resourceIsNew)\n            .each(element => {\n                if(element.tagName.value != \"SCRIPT\") {\n                    //we need to run runScripts properly to deal with the rest\n                    new ExtDomQuery(...processedScripts).runScripts(true);\n                    processedScripts = [];\n                    head.append(element);\n                } else {\n                    processedScripts.push(element);\n                }\n            });\n        new ExtDomQuery(...processedScripts).runScripts(true);\n    }\n\n\n    /**\n     * byId producer\n     *\n     * @param selector id\n     * @param deep whether the search should go into embedded shadow dom elements\n     * @return a DomQuery containing the found elements\n     */\n    static byId(selector: string | DomQuery | Element, deep = false): ExtDomQuery {\n        const ret = DomQuery.byId(selector, deep);\n        return new ExtDomQuery(ret);\n    }\n\n    private extractNonce(curScript: DomQuery) {\n        return (curScript.getAsElem(0).value as HTMLElement)?.nonce ?? curScript.attr(\"nonce\").value;\n    }\n\n    filter(func: (item: DomQuery) => boolean): ExtDomQuery {\n        return new ExtDomQuery(super.filter(func));\n    }\n}\n\nexport const ExtDQ = ExtDomQuery;\n\n/**\n * in order to reduce the number of interception points for the fallbacks we add\n * the namespace remapping straight to our config accessors\n */\nexport class ExtConfig extends  Config {\n\n    $nspEnabled = true;\n\n    constructor(root: any) {\n        super(root);\n    }\n\n    assignIf(condition: boolean, ...accessPath): IValueHolder<any> {\n        const accessPathMapped = this.remap(accessPath);\n        return super.assignIf(condition, ...accessPathMapped);\n    }\n\n    assign(...accessPath): IValueHolder<any> {\n        const accessPathMapped = this.remap(accessPath);\n        return super.assign(...accessPathMapped);\n    }\n\n    append(...accessPath): IValueHolder<any> {\n        return super.append(...accessPath);\n    }\n\n    appendIf(condition: boolean, ...accessPath): IValueHolder<any> {\n        const accessPathMapped = this.remap(accessPath);\n        return super.appendIf(condition, ...accessPathMapped);\n    }\n\n    getIf(...accessPath): Config {\n        const accessPathMapped = this.remap(accessPath);\n        return super.getIf(...accessPathMapped);\n    }\n\n    get(defaultVal: any): Config {\n        return super.get($nsp(defaultVal));\n    }\n\n    delete(key: string): Config {\n        return super.delete($nsp(key));\n    }\n\n    /**\n     * creates a config from an initial value or null\n     * @param value\n     */\n    static fromNullable<T>(value?: T | null): Config {\n        return new ExtConfig(value);\n    }\n\n    protected getClass(): any {\n        return ExtConfig;\n    }\n\n    /**\n     * shallow copy getter, copies only the first level, references the deeper nodes\n     * in a shared manner\n     */\n    protected shallowCopy$(): Config {\n        const ret = super.shallowCopy$();\n        return new ExtConfig(ret);\n    }\n\n    /**\n     * deep copy, copies all config nodes\n     */\n    get deepCopy(): Config {\n        return new ExtConfig(super.deepCopy$());\n    }\n\n    /**\n     * helper to remap the namespaces of an array of access paths\n     * @param accessPath the access paths to be remapped\n     * @private returns an array of access paths with version remapped namespaces\n     */\n    private remap(accessPath: string[]): string[] {\n        if(!this.$nspEnabled) {\n            return accessPath;\n        }\n        return new Es2019Array(...accessPath).map(key => $nsp(key));\n    }\n}","import {Config, DomQuery, DQ, Es2019Array} from \"mona-dish\";\nimport {ExtDomQuery} from \"./ExtDomQuery\";\nimport {$faces, EMPTY_STR} from \"../core/Const\";\n\n/*\n * various routines for encoding and decoding url parameters\n * into configs and vice versa\n */\n\n\n/**\n * encodes a given form data into a url encoded string\n * @param formData the form data config object\n * @param paramsMapper the params mapper\n * @param defaultStr a default string if nothing comes out of it\n */\nexport function encodeFormData(formData: Config,\n                               paramsMapper = (inStr, inVal) => [inStr, inVal],\n                               defaultStr = EMPTY_STR): string {\n    if (formData.isAbsent()) {\n        return defaultStr;\n    }\n    const assocValues = formData.value;\n\n    const expandValueArrAndRename = key => assocValues[key].map(val => paramsMapper(key, val));\n    const isPropertyKey = key => assocValues.hasOwnProperty(key);\n    const isNotFile = ([, value]) => !(value instanceof ExtDomQuery.global().File);\n    const mapIntoUrlParam = keyVal => `${encodeURIComponent(keyVal[0])}=${encodeURIComponent(keyVal[1])}`;\n\n    return new Es2019Array(...Object.keys(assocValues))\n        .filter(isPropertyKey)\n        .flatMap(expandValueArrAndRename)\n        .filter(isNotFile)\n        .map(mapIntoUrlParam)\n        .join(\"&\");\n}\n\n/**\n * splits and decodes encoded values into strings containing of key=value\n * @param encoded encoded string\n */\nexport function decodeEncodedValues(encoded: string): string[][] {\n    const filterBlanks = item => !!(item || '').replace(/\\s+/g, '');\n    const splitKeyValuePair = line => {\n        let index = line.indexOf(\"=\");\n        if (index == -1) {\n            return [line];\n        }\n        return [line.substring(0, index), line.substring(index + 1)];\n    };\n\n    let requestParamEntries = decodeURIComponent(encoded).split(/&/gi);\n    return requestParamEntries.filter(filterBlanks).map(splitKeyValuePair);\n}\n\n\n/**\n * gets all the input files and their corresponding file objects\n * @param dataSource\n */\nexport function resolveFiles(dataSource: DQ): [string, File][] {\n\n    const expandFilesArr = ([key, files]) => {\n        return [...files].map(file => [key, file]);\n    }\n    const remapFileInput = fileInput => {\n        return [fileInput.name.value || fileInput.id.value, fileInput.filesFromElem(0)];\n    }\n\n    const files = dataSource\n        .querySelectorAllDeep(\"input[type='file']\")\n        .asArray;\n\n    const ret = files\n        .map(remapFileInput)\n        .flatMap(expandFilesArr);\n\n    return ret as any;\n}\n\n\nexport function fixEmptyParameters(keyVal: any[]): [string, any] {\n    return (keyVal.length < 3 ? [keyVal?.[0] ?? [], keyVal?.[1] ?? []] : keyVal) as [string, any];\n}\n\n/**\n * returns the decoded viewState from parentItem\n * @param parentItem\n */\nfunction resolveViewState(parentItem: DomQuery): string[][] | [string, File][] {\n    const viewStateStr = $faces().getViewState(parentItem.getAsElem(0).value);\n\n    // we now need to decode it and then merge it into the target buf\n    // which hosts already our overrides (aka do not override what is already there(\n    // after that we need to deal with form elements on a separate level\n    return decodeEncodedValues(viewStateStr);\n}\n\n/**\n * gets all the inputs under the form parentItem\n * as array\n * @param parentItem\n */\nexport function getFormInputsAsArr(parentItem: DomQuery): string[][] | [string, File][] {\n    const standardInputs: any = resolveViewState(parentItem);\n    const fileInputs = resolveFiles(parentItem);\n    return standardInputs.concat(fileInputs)\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {DomQuery, DQ, DQ$} from \"mona-dish\";\nimport {$faces, $nsp, HTML_CLIENT_WINDOW, HTML_VIEWSTATE, P_CLIENT_WINDOW, P_VIEWSTATE} from \"../core/Const\";\n\n/**\n * Builder for hidden inputs.\n * ATM only ViewState and Client window\n * are supported (per spec)\n *\n * Improves readability in the response processor!\n */\nexport class HiddenInputBuilder {\n    private namingContainerId?: string;\n    private parent?: DomQuery;\n    private namedViewRoot: boolean = false;\n    private readonly name: string;\n    private readonly template: string;\n\n    constructor(private selector: string) {\n        const isViewState = selector.indexOf($nsp(P_VIEWSTATE)) != -1;\n        this.name = isViewState ? P_VIEWSTATE : P_CLIENT_WINDOW\n        this.template = isViewState ? HTML_VIEWSTATE : HTML_CLIENT_WINDOW\n    }\n\n    withNamingContainerId(namingContainer: string): HiddenInputBuilder {\n        this.namingContainerId = namingContainer;\n        return this;\n    }\n\n    withParent(parent: DomQuery): HiddenInputBuilder {\n        this.parent = parent;\n        return this;\n    }\n\n    withNamedViewRoot(namedViewRoot: boolean): HiddenInputBuilder {\n        this.namedViewRoot = namedViewRoot;\n        return this;\n    }\n\n\n    build(): DomQuery {\n        const SEP = $faces().separatorchar;\n\n        let existingStates = DQ$(`[name*='${$nsp(this.name)}']`);\n        let cnt = existingStates.asArray.map(state => {\n            let ident: string = state.id.orElse(\"-1\").value;\n            ident = ident.substring(ident.lastIndexOf(SEP)+1);\n            return parseInt(ident);\n        })\n            .filter(item => {\n                return !isNaN(item);\n            })\n            .reduce((item1, item2) => {\n                return Math.max(item1, item2);\n            }, -1);\n        //the maximum  new ident is the current max + 1\n        cnt++;\n\n\n        const newElement = DQ.fromMarkup($nsp(this.template));\n        newElement.id.value = ((this.namingContainerId?.length) ?\n            [this.namingContainerId,  $nsp(this.name),  cnt]:\n            [$nsp(this.name),  cnt]).join(SEP);\n\n        //name must be prefixed with the naming container id as well according to the jsdocs\n        if(this.namedViewRoot) {\n            newElement.name.value = (this.namingContainerId?.length) ?\n                [this.namingContainerId,  $nsp(this.name)].join(SEP): $nsp(this.name);\n        } else {\n            newElement.name.value = $nsp(this.name);\n        }\n\n\n        this?.parent?.append(newElement);\n        return newElement;\n    }\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {Lang as LangBase, Config, Optional, DomQuery, DQ} from \"mona-dish\";\nimport {Messages} from \"../i18n/Messages\";\nimport {EMPTY_STR, HTML_TAG_FORM} from \"../core/Const\";\nimport {getEventTarget} from \"../xhrCore/RequestDataResolver\";\nimport {Es2019Array} from \"mona-dish\";\n\n\nexport module ExtLang {\n\n    let installedLocale: Messages;\n    let nameSpace = \"impl/util/Lang/\";\n\n    export function getLanguage(): string {\n        //TODO global config override\n\n        let language: string = (<any>navigator).languages?.[0] ?? navigator?.language;\n        language = language.split(\"-\")[0];\n        return language;\n    }\n\n    //should be in lang, but for now here to avoid recursive imports, not sure if typescript still has a problem with those\n    /**\n     * helper function to safely resolve anything\n     * this is not an elvis operator, it resolves\n     * a value without exception in a tree and if\n     * it is not resolvable then an optional of\n     * a default value is restored or Optional\\.empty\n     * if none is given\n     *\n     * usage\n     * <code>\n     *     let var: Optional<string> = saveResolve(() => a.b.c.d.e, \"foobaz\")\n     * </code>\n     *\n     * @param resolverProducer a lambda which can produce the value\n     * @param defaultValue an optional default value if the producer fails to produce anything\n     * @returns an Optional of the produced value\n     */\n    export function failSaveResolve<T>(resolverProducer: () => T, defaultValue: T = null): Optional<T> {\n        return LangBase.saveResolve(resolverProducer, defaultValue);\n    }\n\n    /**\n     * under some conditions it makes sense to swallow errors and return a default value in the error case\n     * classical example the optional resolution of values in a chain (thankfully now covered by Typescript itself)\n     * another example which we have in our system is that some operations fail only under test due to test framework\n     * limitations while they cannot fail in the real world.\n     *\n     * @param resolverProducer a producer function which produces a value in the non error case\n     * @param defaultValue the default value in case of a fail of the function\n     */\n    export function failSaveExecute<T>(resolverProducer: () => any, defaultValue: T = null): void {\n        LangBase.saveResolve(resolverProducer, defaultValue);\n    }\n\n    /**\n     * returns a given localized message upon a given key\n     * basic java log like templating functionality is included\n     *\n     * @param  key the key for the message\n     * @param  defaultMessage optional default message if none was found\n     *\n     * Additionally, you can pass additional arguments, which are used\n     * in the same way java log templates use the params\n     *\n     * @param templateParams the param list to be filled in\n     */\n    export function getMessage(key: string, defaultMessage?: string, ...templateParams: Array<string>): string {\n        installedLocale = installedLocale ?? new Messages();\n\n        let msg = installedLocale[key] ?? defaultMessage ?? key;\n        templateParams.forEach((param, cnt) => {\n            msg = msg.replace(new RegExp([\"\\\\{\", cnt, \"\\\\}\"].join(EMPTY_STR), \"g\"), param);\n        })\n\n\n        return msg;\n    }\n\n    /**\n     * transforms a key value pair into a string\n     * @param key the key\n     * @param val the value\n     * @param delimiter the delimiter\n     */\n    export function keyValToStr(key: string, val: string, delimiter: string = \"\\n\") {\n        return [key, val].join(delimiter);\n    }\n\n    /**\n     * creates an exception with additional internal parameters\n     * for extra information\n     *\n     * @param error\n     * @param  title the exception title\n     * @param  name  the exception name\n     * @param  callerCls the caller class\n     * @param  callFunc the caller function\n     * @param  message the message for the exception\n     */\n    export function makeException(error: Error, title: string, name: string, callerCls: string, callFunc: string, message: string): Error {\n\n        return new Error(message + (callerCls ?? nameSpace) + callFunc ?? (EMPTY_STR + (<any>arguments).caller.toString()));\n\n    }\n\n    /**\n     * fetches a global config entry\n     * @param  configName the name of the configuration entry\n     * @param  defaultValue\n     *\n     * @return either the config entry or if none is given the default value\n     */\n    export function getGlobalConfig(configName: string, defaultValue: any): any {\n        /**\n         * note we could use exists but this is a heavy operation, since the config name usually\n         * given this function here is called very often\n         * is a single entry without . in between we can do the lighter shortcut\n         */\n        return window?.myfaces?.config?.[configName] ?? defaultValue;\n    }\n\n    /**\n     * fetches the form in a fuzzy manner depending\n     * on an element or event target.\n     *\n     * The idea is that according to the jsf spec\n     * the enclosing form of the issuing element needs to be fetched.\n     *\n     * This is fine, but since then html5 came into the picture with the form attribute the element\n     * can be anywhere referencing its parent form.\n     *\n     * Also, theoretically you can have the case of an issuing element enclosing a set of forms\n     * (not really often used, but theoretically it could be input button allows to embed html for instance)\n     *\n     * So the idea is not to limit the issuing form determination to the spec case\n     * but also cover the theoretical and html5 corner case.\n     *\n     * @param elem\n     * @param event\n     */\n    export function getForm(elem: Element, event ?: Event): DQ | never {\n\n        let queryElem = new DQ(elem);\n        let eventTarget = (event) ?  new DQ(getEventTarget(event)) : DomQuery.absent;\n\n        if (queryElem.isTag(HTML_TAG_FORM)) {\n            return queryElem;\n        }\n\n        //html 5 for handling\n        if (queryElem.attr(HTML_TAG_FORM).isPresent()) {\n            let formId = queryElem.attr(HTML_TAG_FORM).value;\n            let foundForm = DQ.byId(formId, true);\n            if (foundForm.isPresent()) {\n                return foundForm;\n            }\n        }\n\n        let form = queryElem.firstParent(HTML_TAG_FORM)\n            .orElseLazy(() => queryElem.byTagName(HTML_TAG_FORM, true))\n            .orElseLazy(() => eventTarget.firstParent(HTML_TAG_FORM))\n            .orElseLazy(() => eventTarget.byTagName(HTML_TAG_FORM))\n            .first();\n\n        assertFormExists(form);\n\n        return form;\n    }\n\n    /**\n     * gets the local or global options with local ones having higher priority\n     * if no local or global one was found then the default value is given back\n     *\n     * @param  configName the name of the configuration entry\n     * @param  localOptions the local options root for the configuration myfaces as default marker is added\n     * implicitly\n     *\n     * @param  defaultValue\n     *\n     * @return either the config entry or if none is given the default value\n     */\n    export function getLocalOrGlobalConfig(localOptions: Config, configName: string, defaultValue: any): any {\n        return localOptions.value?.myfaces?.config?.[configName] ??\n            window?.myfaces?.config?.[configName] ??\n            defaultValue;\n    }\n\n    /**\n     * expands an associative array into an array of key value tuples\n     * @param value\n     */\n    export function ofAssoc(value: {[key: string]: any}) {\n        return new Es2019Array(...Object.keys(value))\n            .map(key => [key, value[key]]);\n    }\n\n    export function collectAssoc(target: any, item: any) {\n        target[item[0]] = item[1];\n        return target;\n    }\n\n    /**\n     * The active timeout for the \"debounce\".\n     * Since we only use it in the XhrController\n     * we can use a local module variable here\n     */\n    let activeTimeouts = {};\n\n\n\n\n    /**\n     * a simple debounce function\n     * which waits until a timeout is reached and\n     * if something comes in in between debounces\n     *\n     * @param runnable a runnable which should go under debounce control\n     * @param timeout a timeout for the debounce window\n     */\n    export function debounce(key, runnable, timeout) {\n        function clearActiveTimeout() {\n            clearTimeout(activeTimeouts[key]);\n            delete activeTimeouts[key];\n        }\n\n        if (!!(activeTimeouts?.[key])) {\n            clearActiveTimeout();\n        }\n        if (timeout > 0) {\n            activeTimeouts[key] = setTimeout(() => {\n                try {\n                    runnable();\n                } finally {\n                    clearActiveTimeout();\n                }\n            }, timeout);\n        } else {\n            runnable();\n        }\n    }\n\n\n    /**\n     * assert that the form exists and throw an exception in the case it does not\n     *\n     * @param form the form to check for\n     */\n    function assertFormExists(form: DomQuery): void | never {\n        if (form.isAbsent()) {\n            throw makeException(new Error(), null, null, \"Impl\", \"getForm\", getMessage(\"ERR_FORM\"));\n        }\n    }\n\n\n}","import {IAsyncRunnable} from \"./AsyncRunnable\";\nimport {ExtLang} from \"./Lang\";\nimport debounce = ExtLang.debounce;\n\n/**\n * A simple XHR queue controller\n * following the async op -> next pattern\n * Faces enforces for the XHR handling\n */\nexport class XhrQueueController<T extends IAsyncRunnable<any>> {\n    queue = [];\n    taskRunning = false;\n\n    constructor() {\n    }\n\n    /**\n     * executes or enqueues an element\n     * @param runnable the runnable (request) to be enqueued\n     * @param timeOut timeout if > 0 which defers the execution\n     * until the debounce window for the timeout is closed.\n     */\n    enqueue(runnable: T, timeOut: number = 0) {\n        debounce(\"xhrQueue\", () => {\n            const requestHandler = this.enrichRunnable(runnable);\n            if (!this.taskRunning) {\n                this.signalTaskRunning();\n                requestHandler.start();\n            } else {\n                this.queue.push(requestHandler);\n            }\n        }, timeOut);\n    }\n\n    /**\n     * trigger the next element in the queue\n     * to be started!\n     */\n    next() {\n        this.updateTaskRunning();\n        const next = this.queue.shift();\n        next?.start();\n    }\n\n    /**\n     * clears and resets the queue\n     */\n    clear() {\n        this.queue.length = 0;\n        this.updateTaskRunning();\n    }\n\n    /**\n     * true if queue is empty\n     */\n    get isEmpty(): boolean {\n        return !this.queue.length;\n    }\n\n    /**\n     * Enriches the incoming async asyncRunnable\n     * with the error and next handling\n     * (aka: asyncRunnable is done -> next\n     *                   error -> clear queue\n     * @param asyncRunnable the async runnable which needs enrichment\n     * @private\n     */\n    private enrichRunnable(asyncRunnable: T) {\n        /**\n         * we can use the Promise pattern asyncrunnable uses\n         * to trigger queue control callbacks of next element\n         * and clear the queue (theoretically this\n         * would work with any promise)\n         */\n        return asyncRunnable\n            .then(() => this.next())\n            .catch(() => this.clear());\n    }\n\n\n    /**\n     * alerts the queue that a task is running\n     *\n     * @private\n     */\n    private signalTaskRunning() {\n        this.taskRunning = true;\n    }\n\n    /**\n     * updates the task running status according to the current queue\n     * @private\n     */\n    private updateTaskRunning() {\n        this.taskRunning = !this.isEmpty;\n    }\n\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    EMPTY_STR, ERROR,\n    ERROR_MESSAGE,\n    ERROR_NAME,\n    RESPONSE_TEXT,\n    RESPONSE_XML, SERVER_ERROR,\n    SOURCE,\n    STATUS,\n    UNKNOWN\n} from \"../core/Const\";\nimport {Config} from \"mona-dish\";\n\nimport {EventData} from \"./EventData\";\nimport {ExtLang} from \"../util/Lang\";\nimport getMessage = ExtLang.getMessage;\n\n\nexport enum ErrorType {\n    SERVER_ERROR = \"serverError\",\n    HTTP_ERROR = \"httpError\",\n    CLIENT_ERROR = \"clientErrror\",\n    TIMEOUT = \"timeout\"\n}\n\n/**\n * the spec has a problem of having the error\n * object somewhat underspecified, there is no clear\n * description of the required contents.\n * I want to streamline it with mojarra here\n * hence we are going to move\n * everything into the same attributes,\n * I will add deprecated myfaces backwards compatibility attributes as well\n */\nexport class ErrorData extends EventData implements IErrorData {\n\n    type: string = \"error\";\n    source: HTMLElement;\n    sourceId: string;\n    errorName: string;\n    errorMessage: string;\n\n    responseText: string;\n    responseXML: any;\n\n    status: string;\n    typeDetails: ErrorType;\n\n    serverErrorName: string;\n    serverErrorMessage: string;\n    message: string;\n\n    constructor(source: string, errorName: string, errorMessage: string, responseText: string = null, responseXML: any = null, responseCode: string = \"200\", status: string = \"\", type = ErrorType.CLIENT_ERROR) {\n        super();\n        this.source = document.getElementById(source);\n        this.sourceId = source;\n        this.type = ERROR;\n        this.errorName = errorName;\n        //tck requires that the type is prefixed to the message itself (jsdoc also) in case of a server error\n        this.message = this.errorMessage = (type == SERVER_ERROR) ? type + \": \" + errorMessage : errorMessage;\n        this.responseCode = responseCode;\n        this.responseText = responseText;\n        this.status = status;\n        this.typeDetails = type;\n\n        if (type == ErrorType.SERVER_ERROR) {\n            this.serverErrorName = this.errorName;\n            this.serverErrorMessage = this.errorMessage;\n        }\n    }\n\n    static fromClient(e: Error): ErrorData {\n        return new ErrorData((e as any)?.source ?? \"client\", e?.name ?? EMPTY_STR, e?.message ?? EMPTY_STR, e?.stack ?? EMPTY_STR);\n    }\n\n    static fromHttpConnection(source: any, name: string, message: string, responseText, responseCode: number, status: string = EMPTY_STR): ErrorData {\n        return new ErrorData(source, name, message, responseText, responseCode, `${responseCode}`, status, ErrorType.HTTP_ERROR);\n    }\n\n    static fromGeneric(context: Config, errorCode: number, errorType: ErrorType = ErrorType.SERVER_ERROR): ErrorData {\n\n        let getMsg = this.getMsg;\n\n        let source = getMsg(context, SOURCE);\n        let errorName = getMsg(context, ERROR_NAME);\n        let errorMessage = getMsg(context, ERROR_MESSAGE);\n        let status = getMsg(context, STATUS);\n        let responseText = getMsg(context, RESPONSE_TEXT);\n        let responseXML = getMsg(context, RESPONSE_XML);\n\n\n        return new ErrorData(source, errorName, errorMessage, responseText, responseXML, errorCode + EMPTY_STR, status, errorType);\n    }\n\n    private static getMsg(context, param) {\n        return getMessage(context.getIf(param).orElse(EMPTY_STR).value);\n    }\n\n    static fromServerError(context: Config): ErrorData {\n        return this.fromGeneric(context, -1);\n    }\n\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Config, DQ} from \"mona-dish\";\nimport {BEGIN, CTX_PARAM_REQ_PASS_THR, EVENT, P_AJAX_SOURCE, SOURCE} from \"../core/Const\";\n\nexport class EventData implements IEventData{\n    type: string;\n    status: string;\n    source: any;\n    responseCode: string;\n    responseText: string;\n    responseXML: Document;\n\n    static createFromRequest(request: XMLHttpRequest, context: Config, /*event name*/ name: string): EventData {\n\n        let eventData = new EventData();\n\n        eventData.type = EVENT;\n        eventData.status = name;\n\n        let sourceId: string = context.getIf(SOURCE)\n            .orElseLazy(() => context.getIf(P_AJAX_SOURCE).value)\n            .orElseLazy(() => context.getIf(CTX_PARAM_REQ_PASS_THR, P_AJAX_SOURCE).value)\n            .value;\n        if (sourceId) {\n            eventData.source = DQ.byId(sourceId, true).first().value.value;\n        }\n\n        if (name !== BEGIN) {\n            eventData.responseCode = request?.status?.toString();\n            eventData.responseText = request?.responseText;\n            eventData.responseXML = request?.responseXML;\n        }\n        return eventData;\n    }\n}\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Config, DomQuery, DQ} from \"mona-dish\";\nimport {\n    $faces,\n    $nsp,\n    CTX_OPTIONS_DELAY,\n    CTX_OPTIONS_TIMEOUT,\n    DELAY_NONE,\n    EMPTY_FUNC,\n    EMPTY_STR,\n    ENCODED_URL, NAMED_VIEWROOT, NAMING_CONTAINER_ID,\n    P_VIEWSTATE,\n    REQ_TYPE_GET,\n    REQ_TYPE_POST\n} from \"../core/Const\";\nimport {XhrFormData} from \"./XhrFormData\";\nimport {ExtLang} from \"../util/Lang\";\nimport {ExtConfig, ExtDomQuery} from \"../util/ExtDomQuery\";\nimport {Assertions} from \"../util/Assertions\";\n\n\n/**\n * Resolver functions for various aspects of the request data\n *\n * stateless because it might be called from various\n * parts of the response classes\n */\n\n/**\n * resolves the event handlers lazily\n * so that if some decoration happens in between we can deal with it\n *\n * @param requestContext\n * @param responseContext\n * @param funcName\n */\nexport function resolveHandlerFunc(requestContext: Config, responseContext: Config, funcName: string) {\n    responseContext = responseContext || new Config({});\n    return responseContext.getIf(funcName)\n        .orElseLazy(() =>requestContext.getIf(funcName).value)\n        .orElse(EMPTY_FUNC).value;\n}\n\nexport function resolveTargetUrl(srcFormElement: HTMLFormElement) {\n    return (typeof srcFormElement.elements[ENCODED_URL] == 'undefined') ?\n        srcFormElement.action :\n        srcFormElement.elements[ENCODED_URL].value;\n}\n\nexport function resolveFinalUrl(sourceForm: DomQuery, formData: XhrFormData, ajaxType = REQ_TYPE_POST) {\n    let targetUrl = resolveTargetUrl(<HTMLFormElement>sourceForm.getAsElem(0).value);\n\n    return targetUrl + (ajaxType == REQ_TYPE_GET ? \"?\" + formData.toString() : EMPTY_STR);\n}\n\n/**\n * form resolution the same way our old implementation did\n * it is either the id or the parent form of the element or an embedded form\n * of the element\n *\n * @param elem\n * @param event\n */\nexport function resolveForm(elem: DQ, event: Event): DQ {\n    return ExtLang.getForm(elem.getAsElem(0).value, event);\n}\n\nexport function resolveViewId(form: DQ): string {\n    const viewState = form.querySelectorAll(`input[type='hidden'][name*='${$nsp(P_VIEWSTATE)}']`).id.orElse(\"\").value;\n    const divider = $faces().separatorchar;\n    const viewId = viewState.split(divider, 2)[0];\n    const viewStateViewId = viewId.indexOf($nsp(P_VIEWSTATE)) === -1 ? viewId : \"\";\n    // myfaces specific, we in non portlet environments prepend the viewId\n    // even without being in a naming container, the other components ignore that\n    return form.id.value.indexOf(viewStateViewId) === 0 ? viewStateViewId : \"\";\n}\n\nexport function resolveViewRootId(form: DQ): string {\n    const viewState = form.querySelectorAll(`input[type='hidden'][name*='${$nsp(P_VIEWSTATE)}']`).attr(\"name\").orElse(\"\").value;\n    const divider = $faces().separatorchar;\n    const viewId = viewState.split(divider, 2)[0];\n    //different to the identifier the form id is never prepended to the viewstate\n    return viewId.indexOf($nsp(P_VIEWSTATE)) === -1 ? viewId : \"\";\n}\n\n/**\n * as per jsdoc before the request it must be ensured that every post argument\n * is prefixed with the naming container id (there is an exception in mojarra with\n * the element=element param, which we have to follow here as well.\n * (inputs are prefixed by name anyway normally this only affects our standard parameters)\n * @private\n */\nexport function resoveNamingContainerMapper(internalContext: Config): (key: string, value: any) => [string, any] {\n    const isNamedViewRoot = internalContext.getIf(NAMED_VIEWROOT).isPresent();\n    if(!isNamedViewRoot) {\n        return (key, value) => [key, value];\n    }\n    const partialId = internalContext.getIf(NAMING_CONTAINER_ID).value;\n    const SEP = $faces().separatorchar;\n    const prefix = partialId + SEP;\n    return (key: string, value: any) => (key.indexOf(prefix) == 0) ? [key, value] : [prefix + key, value];\n}\n\nexport function resolveTimeout(options: Config): number {\n    let getCfg = ExtLang.getLocalOrGlobalConfig;\n    return options.getIf(CTX_OPTIONS_TIMEOUT).value ?? getCfg(options.value, CTX_OPTIONS_TIMEOUT, 0);\n}\n\n/**\n * resolve the delay from the options and/or the request context and or the configuration\n *\n * @param options ... the options object, in most cases it will host the delay value\n */\nexport function resolveDelay(options: Config): number {\n    // null, 'none', or undefined will automatically be mapped to 0 aka no delay\n    // the config delay will be dropped not needed anymore, it does not really\n    // make sense anymore now that it is part of a local spec\n    let ret = options.getIf(CTX_OPTIONS_DELAY).orElse(0).value;\n    // if delay === none, no delay must be used, aka delay 0\n    ret = (DELAY_NONE === ret) ? 0 : ret;\n    // negative, or invalid values will automatically get a js exception\n    Assertions.assertDelay(ret);\n    return ret;\n}\n\n/**\n * resolves the window-id from various sources\n *\n * @param options\n */\nexport function resolveWindowId(options: Config) {\n    return options?.value?.windowId ?? ExtDomQuery.windowId;\n}\n\n/**\n * cross port from the dojo lib\n * browser save event resolution\n * @param evt the event object\n * (with a fallback for ie events if none is present)\n * @deprecated soon will be removed\n */\nexport function getEventTarget(evt: Event): Element {\n    // ie6 and 7 fallback\n    let finalEvent = evt;\n    /*\n     * evt source is defined in the jsf events\n     * seems like some component authors use our code,\n     * so we add it here see also\n     * https://issues.apache.org/jira/browse/MYFACES-2458\n     * not entirely a bug but makes sense to add this\n     * behavior. I don´t use it that way but nevertheless it\n     * does not break anything so why not\n     */\n    let t = finalEvent?.srcElement ?? finalEvent?.target ?? (<any>finalEvent)?.source;\n    while ((t) && (t.nodeType != 1)) {\n        t = t.parentNode;\n    }\n    return t;\n}\n\n/**\n * resolves a bunch of default values\n * which can be further processed from the given\n * call parameters of faces.ajax.request\n *\n * @param event\n * @param opts\n * @param el\n */\nexport function resolveDefaults(event: Event, opts: Options | [[string, any]] , el: Element | string = null): any {\n    //deep copy the options, so that further transformations to not backfire into the callers\n    const elem = DQ.byId(el || <Element>event.target, true);\n    const options = new ExtConfig(opts).deepCopy as ExtConfig;\n    return {\n        options: options,\n        elem: elem,\n        elementId: elem.id.value,\n        windowId: resolveWindowId(options),\n        isResetValues: true === options.value?.resetValues\n    };\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Config, Optional, XMLQuery} from \"mona-dish\";\n\nimport {Assertions} from \"../util/Assertions\";\nimport {DQ} from \"mona-dish\";\nimport {\n    $nsp,\n    CTX_PARAM_MF_INTERNAL,\n    CTX_PARAM_SRC_CTL_ID,\n    CTX_PARAM_SRC_FRM_ID,\n    SEL_RESPONSE_XML,\n    SOURCE,\n    HTML_TAG_FORM,\n    UPDATE_ELEMS,\n    UPDATE_FORMS,\n    DEFERRED_HEAD_INSERTS\n} from \"../core/Const\";\nimport {ExtConfig} from \"../util/ExtDomQuery\";\n\n/**\n * Resolver functions for various aspects of the response data\n *\n * stateless because it might be called from various\n * parts of the response classes\n */\n\n/**\n * fetches the response XML\n * as XML Query object\n *\n * @param request the request hosting the responseXML\n *\n * Throws an error in case of non-existent or wrong xml data\n *\n */\nexport function resolveResponseXML(request: Config): XMLQuery {\n    let ret = new XMLQuery($nsp(request.getIf(SEL_RESPONSE_XML).value));\n    Assertions.assertValidXMLResponse(ret);\n\n    return ret;\n}\n\n/**\n * Splits the incoming pass-through context apart\n * in an internal and an external normalized context\n * the internal one is just for our internal processing\n *\n * @param context the root context as associative array\n */\nexport function resolveContexts(context: { [p: string]: any }): any {\n    /**\n     * we split the context apart into the external one and\n     * some internal values\n     */\n    let externalContext = ExtConfig.fromNullable(context);\n    let internalContext = externalContext.getIf(CTX_PARAM_MF_INTERNAL);\n    if (!internalContext.isPresent()) {\n        internalContext = ExtConfig.fromNullable({});\n    }\n\n    /**\n     * prepare storage for some deferred operations\n     */\n    internalContext.assign(DEFERRED_HEAD_INSERTS).value = [];\n    internalContext.assign(UPDATE_FORMS).value = [];\n    internalContext.assign(UPDATE_ELEMS).value = [];\n    return {externalContext, internalContext};\n}\n\n/**\n * fetches the source element out of our contexts\n *\n * @param context the external context which should host the source id\n * @param internalContext internal pass-through fall back\n *\n */\nexport function resolveSourceElement(context: Config, internalContext: Config): DQ {\n    let elemId = resolveSourceElementId(context, internalContext);\n    return DQ.byId(elemId.value, true);\n}\n\n/**\n * fetches the source form if it still exists\n * also embedded forms and parent forms are taken into consideration\n * as fallbacks\n *\n * @param internalContext\n * @param elem\n */\nexport function resolveSourceForm(internalContext: Config, elem: DQ): DQ {\n    let sourceFormId = internalContext.getIf(CTX_PARAM_SRC_FRM_ID);\n    let sourceForm = new DQ(sourceFormId.isPresent() ? document.forms[sourceFormId.value] : null);\n\n    sourceForm = sourceForm.orElseLazy(() => elem.firstParent(HTML_TAG_FORM))\n        .orElseLazy(() => elem.querySelectorAll(HTML_TAG_FORM))\n        .orElseLazy(() => DQ.querySelectorAll(HTML_TAG_FORM));\n\n    return sourceForm;\n}\n\nfunction resolveSourceElementId(context: Config, internalContext: Config): Optional<string> {\n    //?internal context?? used to be external one\n    return internalContext.getIf(CTX_PARAM_SRC_CTL_ID)\n        .orElseLazy(() => context.getIf(SOURCE, \"id\").value);\n}\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DQ, XMLQuery} from \"mona-dish\";\nimport {ResponseProcessor} from \"./ResponseProcessor\";\n\nimport {IResponseProcessor} from \"./IResponseProcessor\";\nimport {\n    $nsp,\n    XML_TAG_ATTRIBUTES,\n    XML_TAG_CHANGES,\n    XML_TAG_DELETE,\n    XML_TAG_ERROR,\n    XML_TAG_EVAL,\n    XML_TAG_EXTENSION,\n    XML_TAG_INSERT,\n    XML_TAG_REDIRECT,\n    XML_TAG_UPDATE, P_RESOURCE,\n    P_VIEWBODY,\n    P_VIEWHEAD,\n    P_VIEWROOT,\n    NAMING_CONTAINER_ID,\n    XML_TAG_PARTIAL_RESP,\n    RESPONSE_XML,\n    XML_TAG_AFTER,\n    XML_TAG_BEFORE, NAMED_VIEWROOT, XML_ATTR_NAMED_VIEWROOT, P_VIEWSTATE, $faces\n} from \"../core/Const\";\nimport {resolveContexts, resolveResponseXML} from \"./ResonseDataResolver\";\nimport {ExtConfig} from \"../util/ExtDomQuery\";\n\n\n\nexport module Response {\n\n\n    /**\n     * Standardized faces.ts response\n     * this one is called straight from faces.ts.response\n     *\n     * The processing follows the spec by going for the responseXML\n     * and processing its tags\n     *\n     * @param {XMLHttpRequest} request (xhrRequest) - xhr request object\n     * @param context {Context} context (Map) - AJAX context\n     *\n     */\n    export function processResponse(request: XMLHttpRequest, context: Context) {\n\n        let req = ExtConfig.fromNullable(request);\n        let {externalContext, internalContext} = resolveContexts(context);\n        let responseXML: XMLQuery = resolveResponseXML(req);\n        let responseProcessor = new ResponseProcessor(req, externalContext, internalContext);\n\n        internalContext.assign(RESPONSE_XML).value = responseXML;\n\n        // we now process the partial tags, or in none given raise an error\n        responseXML.querySelectorAll(XML_TAG_PARTIAL_RESP)\n            .each(item => processPartialTag(<XMLQuery>item, responseProcessor, internalContext));\n\n        // We now process the viewStates, client windows and the elements to be evaluated are delayed.\n        // The reason for this is that often it is better\n        // to wait until the document has caught up before\n        // doing any evaluations even on embedded scripts.\n        // Usually this does not matter, the client window comes in almost last always anyway\n        // we maybe drop this deferred assignment in the future, but myfaces did it until now.\n        responseProcessor.updateNamedViewRootState();\n        responseProcessor.fixViewStates();\n        responseProcessor.fixClientWindow();\n        responseProcessor.globalEval();\n\n        responseProcessor.done();\n    }\n\n    /**\n     * highest node partial-response from there the main operations are triggered\n     */\n    function processPartialTag(node: XMLQuery, responseProcessor: IResponseProcessor, internalContext) {\n\n\n        /*\n        https://javaee.github.io/javaserverfaces/docs/2.2/javadocs/web-partialresponse.html#ns_xsd\n        The \"partial-response\" element is the root of the partial response information hierarchy,\n        and contains nested elements for all possible elements that can exist in the response.\n        This element must have an \"id\" attribute whose value is the return from calling getContainerClientId()\n        on the UIViewRoot to which this response pertains.\n         */\n        // we can determine whether we are in a naming container scenario by checking whether the passed view id is present in the page\n        // under or in body as identifier\n\n        let partialId:string = node?.id?.value;\n        internalContext.assignIf(!!partialId, NAMING_CONTAINER_ID).value = partialId; // second case mojarra\n\n        // there must be at least one container viewstate element resembling the viewroot that we know\n        // this is named\n        responseProcessor.updateNamedViewRootState();\n\n        const SEL_SUB_TAGS = [XML_TAG_ERROR, XML_TAG_REDIRECT, XML_TAG_CHANGES].join(\",\");\n\n        // now we can process the main operations\n        node.querySelectorAll(SEL_SUB_TAGS).each((node: XMLQuery) => {\n            switch (node.tagName.value) {\n                case XML_TAG_ERROR:\n                    responseProcessor.error(node);\n                    break;\n                case XML_TAG_REDIRECT:\n                    responseProcessor.redirect(node);\n                    break;\n                case XML_TAG_CHANGES:\n                    processChangesTag(node, responseProcessor);\n                    break;\n            }\n        });\n    }\n\n    let processInsert = function (responseProcessor: IResponseProcessor, node: XMLQuery) {\n        // path1 insert after as child tags\n        if(node.querySelectorAll([XML_TAG_BEFORE, XML_TAG_AFTER].join(\",\")).length) {\n            responseProcessor.insertWithSubTags(node);\n        } else { // insert before after with id\n            responseProcessor.insert(node);\n        }\n\n    };\n\n    /**\n     * next level changes tag\n     *\n     * @param node\n     * @param responseProcessor\n     */\n    function processChangesTag(node: XMLQuery, responseProcessor: IResponseProcessor): boolean {\n        const ALLOWED_TAGS = [XML_TAG_UPDATE, XML_TAG_EVAL, XML_TAG_INSERT, XML_TAG_DELETE, XML_TAG_ATTRIBUTES, XML_TAG_EXTENSION].join(\", \");\n        node.querySelectorAll(ALLOWED_TAGS).each(\n            (node: XMLQuery) => {\n                switch (node.tagName.value) {\n                    case XML_TAG_UPDATE:\n                        processUpdateTag(node, responseProcessor);\n                        break;\n\n                    case XML_TAG_EVAL:\n                        responseProcessor.eval(node);\n                        break;\n\n                    case XML_TAG_INSERT:\n                        processInsert(responseProcessor, node);\n                        break;\n\n                    case XML_TAG_DELETE:\n                        responseProcessor.delete(node);\n                        break;\n\n                    case XML_TAG_ATTRIBUTES:\n                        responseProcessor.attributes(node);\n                        break;\n\n                    case XML_TAG_EXTENSION:\n                        break;\n                }\n            }\n        );\n        return true;\n    }\n\n    /**\n     * checks and stores a state update for delayed processing\n     *\n     * @param responseProcessor the response processor to perform the store operation\n     * @param node the xml node to check for the state\n     *\n     * @private\n     */\n    function storeState(responseProcessor: IResponseProcessor, node: XMLQuery) {\n        return responseProcessor.processViewState(node) || responseProcessor.processClientWindow(node);\n    }\n\n    /**\n     * branch tag update. drill further down into the updates\n     * special case viewState in that case it is a leaf\n     * and the viewState must be processed\n     *\n     * @param node\n     * @param responseProcessor\n     */\n    function processUpdateTag(node: XMLQuery, responseProcessor: IResponseProcessor) {\n        // early state storing, if no state we perform a normal update cycle\n        if (!storeState(responseProcessor, node)) {\n            handleElementUpdate(node, responseProcessor);\n        }\n    }\n\n    /**\n     * element update\n     *\n     * @param node\n     * @param responseProcessor\n     */\n    function handleElementUpdate(node: XMLQuery, responseProcessor: IResponseProcessor) {\n        let cdataBlock = node.cDATAAsString;\n        switch (node.id.value) {\n            case $nsp(P_VIEWROOT) :\n                responseProcessor.replaceViewRoot(DQ.fromMarkup(cdataBlock.substring(cdataBlock.indexOf(\"<html\"))));\n                break;\n\n            case $nsp(P_VIEWHEAD):\n                responseProcessor.replaceHead(DQ.fromMarkup(cdataBlock));\n                break;\n\n            case $nsp(P_VIEWBODY):\n                responseProcessor.replaceBody(DQ.fromMarkup(cdataBlock));\n                break;\n\n            case $nsp(P_RESOURCE):\n                responseProcessor.addToHead(DQ.fromMarkup(cdataBlock))\n                break;\n\n            default:// htmlItem replacement\n                responseProcessor.update(node, cdataBlock);\n                break;\n        }\n    }\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Config, DomQuery, DQ, DQ$, Lang, XMLQuery} from \"mona-dish\";\nimport {Implementation} from \"../AjaxImpl\";\nimport {Assertions} from \"../util/Assertions\";\nimport {IResponseProcessor} from \"./IResponseProcessor\";\nimport {ErrorData} from \"./ErrorData\";\nimport {StateHolder} from \"../core/ImplTypes\";\nimport {EventData} from \"./EventData\";\n\nimport {\n    $faces,\n    $nsp,\n    APPLIED_CLIENT_WINDOW,\n    APPLIED_VST,\n    ATTR_ID,\n    ATTR_NAME,\n    ATTR_URL,\n    ATTR_VALUE,\n    DEFERRED_HEAD_INSERTS,\n    EMPTY_FUNC,\n    EMPTY_STR,\n    ERROR_MESSAGE,\n    ERROR_NAME,\n    HTML_TAG_BODY,\n    HTML_TAG_FORM,\n    HTML_TAG_HEAD,\n    HTML_TAG_LINK,\n    HTML_TAG_SCRIPT,\n    HTML_TAG_STYLE, IDENT_ALL, IDENT_NONE, NAMED_VIEWROOT,\n    ON_ERROR,\n    ON_EVENT,\n    P_CLIENT_WINDOW,\n    P_EXECUTE,\n    P_AJAX_SOURCE,\n    P_RENDER,\n    P_RENDER_OVERRIDE,\n    P_VIEWSTATE,\n    NAMING_CONTAINER_ID,\n    RESPONSE_XML,\n    SEL_CLIENT_WINDOW_ELEM,\n    SEL_VIEWSTATE_ELEM,\n    SOURCE,\n    SUCCESS,\n    UPDATE_ELEMS,\n    UPDATE_FORMS,\n    XML_TAG_AFTER,\n    XML_TAG_ATTR,\n    XML_TAG_BEFORE\n} from \"../core/Const\";\nimport {ExtConfig, ExtDomQuery} from \"../util/ExtDomQuery\";\nimport {HiddenInputBuilder} from \"../util/HiddenInputBuilder\";\nimport trim = Lang.trim;\nimport {ExtLang} from \"../util/Lang\";\nimport ofAssoc = ExtLang.ofAssoc;\n\n\n/**\n * Response processor\n *\n * Each  XML tag is either a node or a leaf\n * or both\n *\n * the processor provides a set of operations\n * which are executed on a single leaf node per operation\n * and present the core functionality of our response\n *\n * Note the response processor is stateful hence we bundle it in a class\n * to reduce code we keep references tot contexts in place\n */\nexport class ResponseProcessor implements IResponseProcessor {\n\n    constructor(private request: Config, private externalContext: Config, private internalContext: Config) {\n    }\n\n    /**\n     * head replacement\n     * @param shadowDocument incoming shadow head data (aka cdata as xml reference or dom element)\n     * the data incoming must represent the html representation of the head itself one way or the other\n     */\n    replaceHead(shadowDocument: XMLQuery | DQ) {\n        const shadowHead = shadowDocument.querySelectorAll(HTML_TAG_HEAD);\n        if (!shadowHead.isPresent()) {\n            return;\n        }\n        const head = ExtDomQuery.querySelectorAll(HTML_TAG_HEAD);\n        // full replace we delete everything\n        head.childNodes.delete();\n        this.addToHead(shadowHead);\n        //we copy the attributes as well (just in case myfaces introduces the id in head)\n        head.copyAttrs(shadowHead);\n    }\n\n    addToHead(shadowHead: XMLQuery | DQ) {\n        const mappedHeadData = new ExtDomQuery(shadowHead);\n        const scriptTags = [HTML_TAG_SCRIPT];\n        const nonExecutables = mappedHeadData.filter(item => scriptTags.indexOf(item.tagName.orElse(\"\").value) == -1);\n        nonExecutables.runHeadInserts(true);\n\n        //incoming either the outer head tag or its children\n        const nodesToAdd = (shadowHead.tagName.value === \"HEAD\") ? shadowHead.childNodes : shadowHead;\n        // this is stored for \"post\" processing\n        // after the rest of the \"physical build up\", head before body\n        const scriptElements = new DomQuery(...nodesToAdd.asArray\n            .filter(item => scriptTags.indexOf(item.tagName.orElse(\"\").value) != -1));\n\n        this.addToHeadDeferred(scriptElements);\n    }\n\n    addToHeadDeferred(newElements: XMLQuery | DQ) {\n        this.internalContext.assign(DEFERRED_HEAD_INSERTS).value.push(newElements);\n    }\n\n    /**\n     * replaces the body in the expected manner\n     * which means the entire body content is refreshed\n     * however also the body attributes must be transferred\n     * keeping event handlers etc... in place\n     *\n     * @param shadowDocument .. an incoming shadow document hosting the new nodes\n     */\n    replaceBody(shadowDocument: XMLQuery | DQ) {\n\n        const shadowBody = shadowDocument.querySelectorAll(HTML_TAG_BODY);\n        if (!shadowBody.isPresent()) {\n            return;\n        }\n\n        const shadowInnerHTML: string = <string>shadowBody.innerHTML;\n        const resultingBody = <DQ>ExtDomQuery.querySelectorAll(HTML_TAG_BODY);\n        const updateForms = resultingBody.querySelectorAll(HTML_TAG_FORM);\n\n        // main difference, we cannot replace the body itself, but only its content\n        // we need a separate step for post-processing the incoming\n        // attributes, like classes, styles etc...\n        (resultingBody.html(shadowInnerHTML) as DQ).copyAttrs(shadowBody);\n        this.externalContext.assign($nsp(P_RENDER_OVERRIDE)).value = \"@all\";\n        this.storeForPostProcessing(updateForms, resultingBody);\n    }\n\n    /**\n     * Leaf Tag eval... process whatever is in the eval cdata block\n     *\n     * @param node the node to eval\n     */\n    eval(node: XMLQuery) {\n        ExtDomQuery.globalEval(node.cDATAAsString);\n    }\n\n    /**\n     * processes an incoming error from the response\n     * which is hosted under the &lt;error&gt; tag\n     * @param node the node hosting the error in our response xml\n     * @param node the node in the xml hosting the error message\n     */\n    error(node: XMLQuery) {\n        /**\n         * <error>\n         *      <error-name>String</error-name>\n         *      <error-message><![CDATA[message]]></error-message>\n         * <error>\n         */\n\n        const mergedErrorData = new ExtConfig({});\n        mergedErrorData.assign(SOURCE).value = this.externalContext.getIf(P_AJAX_SOURCE).get(0).value;\n        mergedErrorData.assign(ERROR_NAME).value = node.querySelectorAll(ERROR_NAME).textContent(EMPTY_STR);\n        mergedErrorData.assign(ERROR_MESSAGE).value = node.querySelectorAll(ERROR_MESSAGE).cDATAAsString;\n\n        const hasResponseXML = this.internalContext.get(RESPONSE_XML).isPresent();\n\n        //we now store the response xml also in the error data for further details\n        mergedErrorData.assignIf(hasResponseXML, RESPONSE_XML).value = this.internalContext.getIf(RESPONSE_XML).value.get(0).value;\n\n        // error post-processing and enrichment (standard messages from keys)\n        const errorData = ErrorData.fromServerError(mergedErrorData);\n\n        // we now trigger an internally stored onError function which might be an attached to the context\n        // either we do not have an internal on error, or an on error has been based via params from the outside.\n        // In both cases they are attached to our contexts\n\n        this.triggerOnError(errorData);\n        Implementation.sendError(errorData);\n    }\n\n    /**\n     * process the redirect operation\n     *\n     * @param node\n     */\n    redirect(node: XMLQuery) {\n        Assertions.assertUrlExists(node);\n\n        const redirectUrl = trim(node.attr(ATTR_URL).value);\n        if (redirectUrl != EMPTY_STR) {\n            window.location.href = redirectUrl;\n        }\n    }\n\n    /**\n     * processes the update operation and updates the node with the cdata block\n     * @param node the xml response node hosting the update info\n     * @param cdataBlock the cdata block with the new html code\n     */\n    update(node: XMLQuery, cdataBlock: string) {\n        const result = ExtDomQuery.byId(node.id.value, true).outerHTML(cdataBlock, false, false);\n        const sourceForm = result?.firstParent(HTML_TAG_FORM).orElseLazy(() => result.byTagName(HTML_TAG_FORM, true));\n        if (sourceForm) {\n            this.storeForPostProcessing(sourceForm, result);\n        }\n    }\n\n    /**\n     * Delete handler, simply deletes the node referenced by the xml data\n     * @param node\n     */\n    delete(node: XMLQuery) {\n        DQ.byId(node.id.value, true).delete();\n    }\n\n    /**\n     * attributes leaf tag... process the attributes\n     *\n     * @param node\n     */\n    attributes(node: XMLQuery) {\n        const elem = DQ.byId(node.id.value, true);\n\n        node.byTagName(XML_TAG_ATTR).each((item: XMLQuery) => {\n            elem.attr(item.attr(ATTR_NAME).value).value = item.attr(ATTR_VALUE).value;\n        });\n    }\n\n    /**\n     * @param shadowDocument a shadow document which is needed for further processing\n     */\n    replaceViewRoot(shadowDocument: XMLQuery) {\n        this.replaceHead(shadowDocument);\n        this.replaceBody(shadowDocument);\n    }\n\n    /**\n     * Insert handling, either before or after\n     *\n     * @param node\n     */\n    insert(node: XMLQuery) {\n        //let insertId = node.id; //not used atm\n\n        const before = node.attr(XML_TAG_BEFORE);\n        const after = node.attr(XML_TAG_AFTER);\n        const insertNodes = DQ.fromMarkup(<any>node.cDATAAsString);\n\n        if (before.isPresent()) {\n            DQ.byId(before.value, true).insertBefore(insertNodes);\n            this.internalContext.assign(UPDATE_ELEMS).value.push(insertNodes);\n        }\n        if (after.isPresent()) {\n            const domQuery = DQ.byId(after.value, true);\n            domQuery.insertAfter(insertNodes);\n\n            this.internalContext.assign(UPDATE_ELEMS).value.push(insertNodes);\n        }\n    }\n\n    /**\n     * Handler for the case &lt;insert <&lt; before id=\"...\n     *\n     * @param node the node hosting the insert data\n     */\n    insertWithSubTags(node: XMLQuery) {\n        const before = node.querySelectorAll(XML_TAG_BEFORE);\n        const after = node.querySelectorAll(XML_TAG_AFTER);\n\n        before.each(item => {\n            const insertId = item.attr(ATTR_ID);\n            const insertNodes = DQ.fromMarkup(<any>item.cDATAAsString);\n            if (insertId.isPresent()) {\n                DQ.byId(insertId.value, true).insertBefore(insertNodes);\n                this.internalContext.assign(UPDATE_ELEMS).value.push(insertNodes);\n            }\n        });\n\n        after.each(item => {\n            const insertId = item.attr(ATTR_ID);\n            const insertNodes = DQ.fromMarkup(<any>item.cDATAAsString);\n            if (insertId.isPresent()) {\n                DQ.byId(insertId.value, true).insertAfter(insertNodes);\n                this.internalContext.assign(UPDATE_ELEMS).value.push(insertNodes);\n            }\n        });\n    }\n\n    /**\n     * Process the viewState update, update the affected\n     * forms with their respective new viewState values\n     *\n     */\n    processViewState(node: XMLQuery): boolean {\n        if (ResponseProcessor.isViewStateNode(node)) {\n            const state = node.cDATAAsString;\n            this.internalContext.assign(APPLIED_VST, node.id.value).value = new StateHolder($nsp(node.id.value), state);\n            return true;\n        }\n        return false;\n    }\n\n    processClientWindow(node: XMLQuery): boolean {\n        if (ResponseProcessor.isClientWindowNode(node)) {\n            const state = node.cDATAAsString;\n            this.internalContext.assign(APPLIED_CLIENT_WINDOW, node.id.value).value = new StateHolder($nsp(node.id.value), state);\n            return true;\n        }\n    }\n\n    /**\n     * generic global eval which runs the embedded css and scripts\n     */\n    globalEval() {\n        //  phase one, if we have head inserts, we build up those before going into the script eval phase\n        let insertHeadElems = new ExtDomQuery(...this.internalContext.getIf(DEFERRED_HEAD_INSERTS).value);\n        insertHeadElems.runHeadInserts(true);\n\n        // phase 2 we run a script eval on all updated elements in the body\n        let updateElems = new ExtDomQuery(...this.internalContext.getIf(UPDATE_ELEMS).value);\n        updateElems.runCss();\n        // phase 3, we do the same for the css\n        updateElems.runScripts();\n    }\n\n    /**\n     * Postprocessing view state fixing\n     * this appends basically the incoming view states to the forms.\n     * It is called from outside after all forms have been processed basically\n     * as last lifecycle step, before going into the next request.\n     */\n    fixViewStates() {\n        ofAssoc(this.internalContext.getIf(APPLIED_VST).orElse({}).value)\n            .forEach(([, value]) => {\n                const namingContainerId = this.internalContext.getIf(NAMING_CONTAINER_ID);\n                const namedViewRoot = !!this.internalContext.getIf(NAMED_VIEWROOT).value\n                const affectedForms = this.getContainerForms(namingContainerId)\n                    .filter(affectedForm => this.isInExecuteOrRender(affectedForm));\n\n                this.appendViewStateToForms(affectedForms, namedViewRoot, value.value, namingContainerId.orElse(\"\").value);\n            })\n    }\n\n\n\n    /**\n     * same as with view states before applies the incoming client windows as last step after the rest of the processing\n     * is done.\n     */\n    fixClientWindow() {\n        ofAssoc(this.internalContext.getIf(APPLIED_CLIENT_WINDOW).orElse({}).value)\n            .forEach(([, value]) => {\n                const namingContainerId = this.internalContext.getIf(NAMING_CONTAINER_ID);\n                const namedViewRoot = !!this.internalContext.getIf(NAMED_VIEWROOT).value;\n                const affectedForms = this.getContainerForms(namingContainerId)\n                    .filter(affectedForm => this.isInExecuteOrRender(affectedForm));\n\n                this.appendClientWindowToForms(affectedForms, namedViewRoot, value.value, namingContainerId.orElse(\"\").value);\n            });\n    }\n\n    updateNamedViewRootState() {\n        let partialId = this.internalContext.getIf(NAMING_CONTAINER_ID);\n        let namedViewRoot = this.internalContext.getIf(NAMED_VIEWROOT);\n        if(partialId.isPresent() &&\n            (namedViewRoot.isAbsent() ||\n                !namedViewRoot.value)) {\n            const SEP = $faces().separatorchar;\n            this.internalContext.assign(NAMED_VIEWROOT).value = (!!document.getElementById(partialId.value)) || DQ$(`input[name*='${$nsp(P_VIEWSTATE)}']`)\n                .filter(node => node.attr(\"name\").value.indexOf(partialId.value + SEP) == 0).length > 0;\n        }\n    }\n\n    /**\n     * all processing done we can close the request and send the appropriate events\n     */\n    done() {\n        const eventData = EventData.createFromRequest(this.request.value, this.externalContext, SUCCESS);\n\n        //because some frameworks might decorate them over the context in the response\n        const eventHandler = this.externalContext.getIf(ON_EVENT).orElseLazy(() => this.internalContext.getIf(ON_EVENT).value).orElse(EMPTY_FUNC).value;\n        Implementation.sendEvent(eventData, eventHandler);\n    }\n\n    /**\n     * proper viewState -> form assignment\n     *\n     * @param forms the forms to append the viewState to\n     * @param viewState the final viewState\n     * @param namingContainerId\n     */\n    private appendViewStateToForms(forms: DQ, namedViewRoot: boolean, viewState: string, namingContainerId = \"\") {\n        this.assignState(forms, $nsp(SEL_VIEWSTATE_ELEM), namedViewRoot, viewState, namingContainerId);\n    }\n\n\n    /**\n     * proper clientWindow -> form assignment\n     *\n     * @param forms the forms to append the viewState to\n     * @param clientWindow the final viewState\n     * @param namingContainerId\n     */\n    private appendClientWindowToForms(forms: DQ, namedViewRoot: boolean, clientWindow: string, namingContainerId = \"\") {\n        this.assignState(forms, $nsp(SEL_CLIENT_WINDOW_ELEM), namedViewRoot, clientWindow, namingContainerId);\n    }\n\n    /**\n     * generic append state which appends a certain state as hidden element to an existing set of forms\n     *\n     * @param forms the forms to append or change to\n     * @param selector the selector for the state\n     * @param namedViewRoot if set to true, the name is also prefixed\n     * @param state the state itself which needs to be assigned\n     *\n     * @param namingContainerId\n     * @private\n     */\n    private assignState(forms: DQ,  selector: string, namedViewRoot: boolean, state: string, namingContainerId: string) {\n        /**\n         * creates the viewState or client window id element\n         * @param form\n         */\n        const createAndAppendHiddenInput = (form: DomQuery)  => {\n            return new HiddenInputBuilder(selector)\n                .withNamingContainerId(namingContainerId)\n                .withParent(form)\n                .withNamedViewRoot(namedViewRoot)\n                .build();\n        };\n\n        forms.each(form => {\n            const hiddenInput = form.querySelectorAll(selector)\n                .orElseLazy(() => createAndAppendHiddenInput(form));\n            hiddenInput.val = state;\n        });\n    }\n\n    /**\n     * Stores certain aspects of the dom for later post-processing\n     *\n     * @param updateForms the update forms which should receive standardized internal jsf data\n     * @param toBeEvaluated the resulting elements which should be evaluated\n     */\n    private storeForPostProcessing(updateForms: DQ, toBeEvaluated: DQ) {\n        this.storeForUpdate(updateForms);\n        this.storeForEval(toBeEvaluated);\n    }\n\n    /**\n     * helper to store a given form for the update post-processing (viewState)\n     *\n     * @param updateForms the dom query object pointing to the forms which need to be updated\n     */\n    private storeForUpdate(updateForms: DQ) {\n        this.internalContext.assign(UPDATE_FORMS).value.push(updateForms);\n    }\n\n    /**\n     * same for eval (js and css)\n     *\n     * @param toBeEvaluated\n     */\n    private storeForEval(toBeEvaluated: DQ) {\n        this.internalContext.assign(UPDATE_ELEMS).value.push(toBeEvaluated);\n    }\n\n    /**\n     * check whether a given XMLQuery node is an explicit viewState node\n     *\n     * @param node the node to check\n     * @returns if it is a viewState node\n     */\n    private static isViewStateNode(node: XMLQuery): boolean {\n        const SEP = $faces().separatorchar;\n        return \"undefined\" != typeof node?.id?.value && (node?.id?.value == $nsp(P_VIEWSTATE) ||\n            node?.id?.value?.indexOf([SEP, $nsp(P_VIEWSTATE)].join(EMPTY_STR)) != -1 ||\n            node?.id?.value?.indexOf([$nsp(P_VIEWSTATE), SEP].join(EMPTY_STR)) != -1);\n    }\n\n    /**\n     * incoming client window node also needs special processing\n     *\n     * @param node the node to check\n     * @returns true of it ii\n     */\n    private static isClientWindowNode(node: XMLQuery): boolean {\n        const SEP =  $faces().separatorchar;\n        return \"undefined\" != typeof node?.id?.value && (node?.id?.value == $nsp(P_CLIENT_WINDOW) ||\n            node?.id?.value?.indexOf([SEP, $nsp(P_CLIENT_WINDOW)].join(EMPTY_STR)) != -1 ||\n            node?.id?.value?.indexOf([$nsp(P_CLIENT_WINDOW), SEP].join(EMPTY_STR)) != -1);\n    }\n\n    private triggerOnError(errorData: ErrorData) {\n        this.externalContext.getIf(ON_ERROR).orElseLazy(() => this.internalContext.getIf(ON_ERROR).value).orElse(EMPTY_FUNC).value(errorData);\n    }\n\n    /**\n     * filters the forms according to being member of the \"execute\" or \"render\" cycle\n     * @param affectedForm\n     * @private\n     */\n    private isInExecuteOrRender(affectedForm) {\n        const executes = this.externalContext.getIf($nsp(P_EXECUTE)).orElse(\"@none\").value.split(/\\s+/gi);\n        const renders = this.externalContext.getIf(P_RENDER_OVERRIDE)\n            .orElseLazy(() => this.externalContext.getIf($nsp(P_RENDER)).value)\n            .orElse(IDENT_NONE).value.split(/\\s+/gi);\n        const executeAndRenders = executes.concat(...renders);\n        return [...executeAndRenders].filter(nameOrId => {\n            if ([IDENT_ALL, IDENT_NONE].indexOf(nameOrId) != -1) {\n                return true;\n            }\n\n            const NAME_OR_ID = this.getNameOrIdSelector(nameOrId);\n            //either the form directly is in execute or render or one of its children or one of its parents\n            return affectedForm.matchesSelector(NAME_OR_ID) ||\n                affectedForm.querySelectorAll(NAME_OR_ID).isPresent() ||\n                affectedForm.firstParent(NAME_OR_ID).isPresent();\n        }).length > 0;\n    }\n\n    /**\n     * gets all forms under a single naming container id\n     * @param namingContainerId\n     * @private\n     */\n    private getContainerForms(namingContainerId: Config) {\n        if (namingContainerId.isPresent()) {\n            //naming container mode, all forms under naming container id must be processed\n            return DQ$(this.getNameOrIdSelector(namingContainerId.value))\n                // missing condition if the naming container is not present we have to\n                // use the body as fallback\n                .orElseLazy(() => DQ.byTagName(HTML_TAG_BODY))\n                .byTagName(HTML_TAG_FORM, true);\n        } else {\n            return DQ.byTagName(HTML_TAG_FORM);\n        }\n    }\n\n    private getNameOrIdSelector(nameOrId) {\n        return `[id='${nameOrId}'], [name='${nameOrId}']`;\n    }\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Config, DQ} from \"mona-dish\";\nimport {$nsp, EMPTY_STR, IDENT_NONE, P_VIEWSTATE} from \"../core/Const\";\n\nimport {\n    encodeFormData,\n    fixEmptyParameters, getFormInputsAsArr\n} from \"../util/FileUtils\";\nimport {ExtLang} from \"../util/Lang\";\nimport ofAssoc = ExtLang.ofAssoc;\nimport {Es2019Array} from \"mona-dish\";\n\n\ntype ParamsMapper<V, K> = (key: V, item: K) => [V, K];\nconst defaultParamsMapper: ParamsMapper<string, any> = (key, item) => [key, item];\n\n/**\n * A unified form data class\n * which builds upon our configuration.\n *\n * We cannot use standard html5 forms everywhere\n * due to api constraints on the HTML Form object in IE11\n * and due to the url encoding constraint given by the faces.js spec\n *\n *\n * internal storage format\n * every value is stored as an array\n * even scalar ones!\n */\nexport class XhrFormData extends Config {\n    /**\n     * Checks if the given datasource is a multipart request source\n     * multipart is only needed if one of the executes is a file input\n     * since file inputs are stateless, they fall out of the view state\n     * and need special handling. With file submits we have to send a formData object\n     * instead of an encoded string files cannot be sent that way\n     */\n    isMultipartRequest: boolean = false;\n\n    /**\n     * data collector from a given form\n     *\n     * @param dataSource either a form as DomQuery object or an encoded url string\n     * @param paramsMapper a remapper for the params keys and values\n     * @param executes the executes id list for the elements to being processed\n     * @param partialIds partial ids to collect, to reduce the data sent down\n     */\n    constructor(private dataSource: DQ, private paramsMapper: ParamsMapper<string, any> = defaultParamsMapper, executes?: string[], private partialIds?: string[]) {\n        super({});\n        //encode and append the issuing item if not a partial ids array of ids is passed\n        /*\n         * Spec. 13.3.1\n         * Collect and encode input elements.\n         * Additionally the hidden element jakarta.faces.ViewState\n         * Enhancement partial page submit\n         */\n        this.resolveRequestType(this.dataSource, executes);\n        this.encodeSubmittableFields(this.dataSource, this.partialIds);\n        this.applyViewState(this.dataSource);\n    }\n\n    /**\n     * @returns a Form data representation, this is needed for file submits\n     */\n    toFormData(): FormData {\n        /*\n           * expands key: [item1, item2]\n           * to: [{key: key,  value: item1}, {key: key, value: item2}]\n           */\n        let expandValueArrays = ([key, item]) => {\n            if (Array.isArray(item)) {\n                return new Es2019Array(...item).map(value => {\n                    return {key, value}\n                })\n            }\n            return [{key, value: item}]\n        }\n\n        /*\n         * remaps the incoming {key, value} tuples\n         * to naming container prefixed keys and values\n         */\n        let remapForNamingContainer = ({key, value}) => {\n            key = this.remapKeyForNamingContainer(key);\n            return {key, value}\n        };\n\n        /*\n         * collects everything into a FormData object\n         */\n        return ofAssoc(this.value)\n            .flatMap(expandValueArrays)\n            .map(remapForNamingContainer)\n            .reduce((formData: FormData, {key, value}: any) => {\n                formData.append(key, value);\n                return formData;\n            }, new FormData()) as FormData;\n    }\n\n    /**\n     * returns an encoded string representation of our xhr form data\n     *\n     * @param defaultStr optional default value if nothing is there to encode\n     */\n    toString(defaultStr = EMPTY_STR): string {\n        return encodeFormData(this, this.paramsMapper, defaultStr);\n    }\n\n    /**\n     * generic post init code, for now, this performs some post assign data post-processing\n     * @param rootElement the root element which knows the request type (usually a form)\n     * @param executes the executable dom nodes which need to be processed into the form data, which we can send\n     * in our ajax request\n     */\n    private resolveRequestType(rootElement: DQ, executes?: Array<string>) {\n        if (!executes || executes.indexOf(IDENT_NONE) != -1) {\n            return;\n        }\n        this.isMultipartRequest = rootElement.isMultipartCandidate(true);\n    }\n\n    /**\n     * special case view state handling\n     *\n     * @param form the form holding the view state value\n     */\n    private applyViewState(form: DQ) {\n        if (this.getIf($nsp(P_VIEWSTATE)).isPresent()) {\n            return;\n        }\n        let viewStateElement = form.querySelectorAllDeep(`[name*='${$nsp(P_VIEWSTATE)}'`);\n        let viewState = viewStateElement.inputValue;\n        this.appendIf(viewState.isPresent(), this.remapKeyForNamingContainer(viewStateElement.name.value)).value = viewState.value;\n    }\n\n    /**\n     * determines fields to submit\n     * @param {Node} parentItem - form element item is nested in\n     * @param {Array} partialIds - ids fo PPS\n     */\n    private encodeSubmittableFields(parentItem: DQ, partialIds: string[] = []) {\n\n        const mergeIntoThis = ([key, value]) => this.append(key).value = value;\n        const namingContainerRemap = ([key, value]) => this.paramsMapper(key as string, value);\n\n        const remappedPartialIds = partialIds.map(partialId => this.remapKeyForNamingContainer(partialId));\n        const partialIdsFilter = ([key, value]) => (!remappedPartialIds.length || key.indexOf(\"@\") == 0) ? true :\n            remappedPartialIds.indexOf(key) != -1;\n\n        let inputs = getFormInputsAsArr(parentItem);\n        inputs\n            .map(fixEmptyParameters)\n            .map(namingContainerRemap)\n            .filter(partialIdsFilter)\n            .forEach(mergeIntoThis);\n    }\n\n    private remapKeyForNamingContainer(key: string): string {\n        return this.paramsMapper(key, \"\")[0];\n    }\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AsyncRunnable, IAsyncRunnable} from \"../util/AsyncRunnable\";\nimport {Config, DQ} from \"mona-dish\";\nimport {Implementation} from \"../AjaxImpl\";\n\nimport {XhrFormData} from \"./XhrFormData\";\nimport {ErrorData} from \"./ErrorData\";\nimport {EventData} from \"./EventData\";\nimport {ExtLang} from \"../util/Lang\";\nimport {\n    $faces,\n    BEGIN,\n    COMPLETE,\n    CONTENT_TYPE,\n    CTX_PARAM_MF_INTERNAL,\n    CTX_PARAM_REQ_PASS_THR,\n    ERROR,\n    HEAD_FACES_REQ,\n    MALFORMEDXML,\n    NO_TIMEOUT,\n    ON_ERROR,\n    ON_EVENT, P_EXECUTE,\n    REQ_ACCEPT,\n    REQ_TYPE_GET,\n    REQ_TYPE_POST, SOURCE,\n    STATE_EVT_TIMEOUT,\n    STD_ACCEPT,\n    URL_ENCODED,\n    VAL_AJAX, IDENT_NONE, CTX_PARAM_SRC_FRM_ID, CTX_PARAM_SRC_CTL_ID, CTX_PARAM_PPS\n} from \"../core/Const\";\nimport {\n    resolveFinalUrl,\n    resolveHandlerFunc,\n    resoveNamingContainerMapper\n} from \"./RequestDataResolver\";\nimport failSaveExecute = ExtLang.failSaveExecute;\nimport {ExtConfig} from \"../util/ExtDomQuery\";\n\n/**\n * Faces XHR Request Wrapper\n * as AsyncRunnable for our Asynchronous queue\n * This means from the outside the\n * xhr request is similar to a Promise in a way\n * that you can add then and catch and finally callbacks.\n *\n *\n * The idea is that we basically just enqueue\n * a single ajax request into our queue\n * and let the queue do the processing.\n *\n *\n */\n\nexport class XhrRequest extends AsyncRunnable<XMLHttpRequest> {\n\n    private responseContext: Config;\n\n    private stopProgress = false;\n\n\n    private xhrObject = new XMLHttpRequest();\n\n    /**\n     * Required Parameters\n     *\n     * @param requestContext the request context with all pass through values\n     * @param internalContext internal context with internal info which is passed through, not used by the user\n     * Optional Parameters\n     * @param timeout optional xhr timeout\n     * @param ajaxType optional request type, default \"POST\"\n     * @param contentType optional content type, default \"application/x-www-form-urlencoded\"\n     */\n    constructor(\n        private requestContext: ExtConfig,\n        private internalContext: Config,\n        private timeout = NO_TIMEOUT,\n        private ajaxType = REQ_TYPE_POST,\n        private contentType = URL_ENCODED\n    ) {\n        super();\n        // we omit promises here because we have to deal with cancel functionality,\n        // and promises to not provide that (yet) instead we have our async queue\n        // which uses an api internally, which is very close to promises\n        this.registerXhrCallbacks((data: any) => this.resolve(data), (data: any) => this.reject(data));\n    }\n\n    start(): IAsyncRunnable<XMLHttpRequest> {\n\n        let ignoreErr = failSaveExecute;\n        let xhrObject = this.xhrObject;\n        let sourceForm = DQ.byId(this.internalContext.getIf(CTX_PARAM_SRC_FRM_ID).value)\n\n        let executesArr = () => {\n            return this.requestContext.getIf(CTX_PARAM_REQ_PASS_THR, P_EXECUTE).get(IDENT_NONE).value.split(/\\s+/gi);\n        };\n\n        try {\n            // encoded we need to decode\n            // We generated a base representation of the current form\n            // in case someone has overloaded the viewState with additional decorators we merge\n            // that in, there is no way around it, the spec allows it and getViewState\n            // must be called, so whatever getViewState delivers has higher priority then\n            // whatever the formData object delivers\n            // the partialIdsArray arr is almost deprecated legacy code where we allowed to send a separate list of partial\n            // ids for reduced load and server processing, this will be removed soon, we can handle the same via execute\n            const executes = executesArr();\n            const partialIdsArray = this.internalContext.getIf(CTX_PARAM_PPS).value === true ? executes : [];\n            const formData: XhrFormData = new XhrFormData(\n                sourceForm,\n                resoveNamingContainerMapper(this.internalContext),\n                executes, partialIdsArray\n            );\n\n            this.contentType = formData.isMultipartRequest ? \"undefined\" : this.contentType;\n\n            // next step the pass through parameters are merged in for post params\n            this.requestContext.$nspEnabled = false;\n            const requestContext = this.requestContext;\n            const requestPassThroughParams = requestContext.getIf(CTX_PARAM_REQ_PASS_THR) as ExtConfig;\n\n            // we are turning off here the jsf, faces remapping because we are now dealing with\n            // pass-through parameters\n            requestPassThroughParams.$nspEnabled = false;\n            // this is an extension where we allow pass through parameters to be sent down additionally\n            // this can be used and is used in the impl to enrich the post request parameters with additional\n            // information\n            try {\n                formData.shallowMerge(requestPassThroughParams, true, true);\n            } finally {\n                // unfortunately as long as we support\n                // both namespaces we have to keep manual control\n                // on the key renaming before doing ops like deep copy\n                this.requestContext.$nspEnabled = true;\n                requestPassThroughParams.$nspEnabled = true;\n            }\n\n            this.responseContext = requestPassThroughParams.deepCopy;\n\n            // we have to shift the internal passthroughs around to build up our response context\n            const responseContext = this.responseContext;\n\n            responseContext.assign(CTX_PARAM_MF_INTERNAL).value = this.internalContext.value;\n\n            // per spec the onEvent and onError handlers must be passed through to the response\n            responseContext.assign(ON_EVENT).value = requestContext.getIf(ON_EVENT).value;\n            responseContext.assign(ON_ERROR).value = requestContext.getIf(ON_ERROR).value;\n\n            xhrObject.open(this.ajaxType, resolveFinalUrl(sourceForm, formData, this.ajaxType), true);\n\n            // adding timeout\n            this.timeout ? xhrObject.timeout = this.timeout : null;\n\n            // a bug in the xhr stub library prevents the setRequestHeader to be properly executed on fake xhr objects\n            // normal browsers should resolve this\n            // tests can quietly fail on this one\n            if (this.contentType != \"undefined\") {\n                ignoreErr(() => xhrObject.setRequestHeader(CONTENT_TYPE, `${this.contentType}; charset=utf-8`));\n            }\n\n            ignoreErr(() => xhrObject.setRequestHeader(HEAD_FACES_REQ, VAL_AJAX));\n\n            // probably not needed anymore, will test this\n            // some webkit based mobile browsers do not follow the w3c spec of\n            // setting, they accept headers automatically\n            ignoreErr(() => xhrObject.setRequestHeader(REQ_ACCEPT, STD_ACCEPT));\n\n            this.sendEvent(BEGIN);\n            this.sendRequest(formData);\n        } catch (e) {\n            // this happens usually in a client side condition, hence we have to deal in with it in a client\n            // side manner\n            this.handleErrorAndClearQueue(e);\n            throw e;\n        }\n        return this;\n    }\n\n\n\n    cancel() {\n        try {\n            // this causes onError to be called where the error\n            // handling takes over\n            this.xhrObject.abort();\n        } catch (e) {\n            this.handleError(e);\n        }\n    }\n\n\n    /**\n     * attaches the internal event and processing\n     * callback within the promise to our xhr object\n     *\n     * @param resolve\n     * @param reject\n     */\n    private registerXhrCallbacks(resolve: Consumer<any>, reject: Consumer<any>) {\n        const xhrObject = this.xhrObject;\n\n        xhrObject.onabort = () => {\n            this.onAbort(resolve, reject);\n        };\n        xhrObject.ontimeout = () => {\n            this.onTimeout(resolve, reject);\n        };\n        xhrObject.onload = () => {\n            this.onResponseReceived(resolve)\n        };\n        xhrObject.onloadend = () => {\n            this.onResponseProcessed(this.xhrObject, resolve);\n        };\n        xhrObject.onerror = (errorData: any) => {\n            // Safari in rare cases triggers an error when cancelling a request internally, or when\n            // in this case we simply ignore the request and clear up the queue, because\n            // it is not safe anymore to proceed with the current queue\n\n            // This bypasses a Safari issue where it keeps requests hanging after page unload\n            // and then triggers a cancel error on then instead of just stopping\n            // and clearing the code\n            // in a page unload case it is safe to clear the queue\n            // in the exact safari case any request after this one in the queue is invalid\n            // because the queue references xhr requests to a page which already is gone!\n            if (this.isCancelledResponse(this.xhrObject)) {\n                /*\n                 * this triggers the catch chain and after that finally\n                 */\n                this.stopProgress = true;\n                reject();\n                return;\n            }\n            // error already processed somewhere else\n            if (this.stopProgress) {\n                return;\n            }\n            this.handleError(errorData);\n        };\n    }\n\n    private isCancelledResponse(currentTarget: XMLHttpRequest): boolean {\n        return currentTarget?.status === 0 && // cancelled internally by browser\n            currentTarget?.readyState === 4 &&\n            currentTarget?.responseText === '' &&\n            currentTarget?.responseXML === null;\n    }\n\n    /*\n     * xhr processing callbacks\n     *\n     * Those methods are the callbacks called by\n     * the xhr object depending on its own state\n     */\n    /**\n     * client side abort... also here for now we clean the queue\n     *\n     * @param resolve\n     * @param reject\n     * @private\n     */\n    private onAbort(resolve: Consumer<any>, reject: Consumer<any>) {\n        // reject means clear queue, in this case we abort entirely the processing\n        // does not happen yet, we have to probably rethink this strategy in the future\n        // when we introduce cancel functionality\n        this.handleGenericError(reject);\n    }\n\n    /**\n     * request timeout, this must be handled like a generic server error per spec\n     * unfortunately, so we have to jump to the next item (we cancelled before)\n     * @param resolve\n     * @param reject\n     * @private\n     */\n    private onTimeout(resolve: Consumer<any>, reject: Consumer<any>) {\n        // timeout also means we we probably should clear the queue,\n        // the state is unsafe for the next requests\n        this.sendEvent(STATE_EVT_TIMEOUT);\n        this.handleGenericError(resolve);\n    }\n\n    /**\n     * the response is received and normally is a normal response\n     * but also can be some kind of error (http code >= 300)\n     * In any case the response will be resolved either as error or response\n     * and the next item in the queue will be processed\n     * @param resolve\n     * @private\n     */\n    private onResponseReceived(resolve: Consumer<any>) {\n\n        this.sendEvent(COMPLETE);\n        /*\n         * second on error path\n         */\n        if ((this.xhrObject?.status ?? 0) >= 300 || !this?.xhrObject?.responseXML) {\n            // all errors from the server are resolved without interfering in the queue\n            this.handleGenericError(resolve);\n            return;\n        }\n\n        $faces().ajax.response(this.xhrObject, this.responseContext.value ?? {});\n    }\n\n    private handleGenericError(resolveOrReject: Function) {\n        this.stopProgress = true;\n        const errorData = {\n            type: ERROR,\n            status: MALFORMEDXML,\n            responseCode: this.xhrObject?.status ?? 400,\n            responseText: this.xhrObject?.responseText ?? \"Error\",\n            source: this.internalContext.getIf(CTX_PARAM_SRC_CTL_ID).value\n        };\n        try {\n            this.handleError(errorData, true);\n        } finally {\n            // we issue a resolveOrReject in this case to allow the system to recover\n            // reject would clean up the queue\n            // resolve would trigger the next element in the queue to be processed\n            resolveOrReject(errorData);\n        }\n        // non blocking non clearing\n    }\n\n    /**\n     * last minute cleanup, the request now either is fully done\n     * or not by having had a cancel or error event be\n     * @param data\n     * @param resolve\n     * @private\n     */\n    private onResponseProcessed(data: any, resolve: Consumer<any>) {\n        // if stop progress true, the cleanup already has been performed\n        if (this.stopProgress) {\n            return;\n        }\n        /*\n         * normal case, cleanup == next item if possible\n         */\n        resolve(data);\n    }\n\n    private sendRequest(formData: XhrFormData) {\n        const isPost = this.ajaxType != REQ_TYPE_GET;\n        if (formData.isMultipartRequest) {\n            // in case of a multipart request we send in a formData object as body\n            this.xhrObject.send((isPost) ? formData.toFormData() : null);\n        } else {\n            // in case of a normal request we send it normally\n            this.xhrObject.send((isPost) ? formData.toString() : null);\n        }\n    }\n\n    /*\n     * other helpers\n     */\n    private sendEvent(evtType: string) {\n        const eventData = EventData.createFromRequest(this.xhrObject, this.requestContext, evtType);\n        try {\n            // User code error, we might cover\n            // this in onError, but also we cannot swallow it.\n            // We need to resolve the local handlers lazily,\n            // because some frameworks might decorate them over the context in the response\n            let eventHandler = resolveHandlerFunc(this.requestContext, this.responseContext, ON_EVENT);\n\n            Implementation.sendEvent(eventData, eventHandler);\n        } catch (e) {\n            e.source = e?.source ?? this.requestContext.getIf(SOURCE).value;\n            // this is a client error, no save state anymore for queue processing!\n            this.handleErrorAndClearQueue(e);\n            // we forward the error upward like all client side errors\n            throw e;\n        }\n    }\n\n    private handleErrorAndClearQueue(e, responseFormatError: boolean = false) {\n        this.handleError(e, responseFormatError);\n        this.reject(e);\n    }\n\n    private handleError(exception, responseFormatError: boolean = false) {\n        const errorData = (responseFormatError) ? ErrorData.fromHttpConnection(exception.source, exception.type, exception.status, exception.responseText, exception.responseCode, exception.status) : ErrorData.fromClient(exception);\n        const eventHandler = resolveHandlerFunc(this.requestContext, this.responseContext, ON_ERROR);\n\n        Implementation.sendError(errorData, eventHandler);\n    }\n}","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DQ} from \"mona-dish\";\nimport {ExtLang} from \"../impl/util/Lang\";\n\n/**\n * legacy code to enable various aspects\n * of myfaces, used to be rendered inline\n * for jsf 2.0 we can externalize it into its own custom resource\n *\n * note this is a straight 1:1 port from the existing codebase\n * (not too much work has been spent here, the important thing is, that\n * the namespace and functions need to be kept intact for legacy code)\n *\n * we might move the code over in the future, but for now a straight 1:1 port suffices\n */\nexport module oam {\n    import ofAssoc = ExtLang.ofAssoc;\n    /**\n     * sets a hidden input field\n     * @param formName the formName\n     * @param name the hidden field\n     * @param value the value to be rendered\n     */\n    export const setHiddenInput = function (formName: string, name: string, value: string): void {\n        DQ.byId(document.forms[formName])\n            .each(form => {\n                const input = form.querySelectorAll(`input[type='hidden'][name='${name}']`);\n                if (input.isPresent()) {\n                    input.inputValue.value = value;\n                } else {\n                    const newInput = DQ.fromMarkup(`<input type='hidden' id='${name}' name='${name}'>`);\n                    newInput.inputValue.value = value;\n                    newInput.appendTo(form);\n                }\n            });\n    };\n\n    /**\n     * clears a hidden input field\n     *\n     * @param formName formName for the input\n     * @param name the name of the input field\n     */\n    export const clearHiddenInput = function (formName: string, name: string): void {\n        let element = document.forms?.[formName]?.elements?.[name];\n        if(!element) {\n            return;\n        }\n        DQ.byId(element).delete();\n    };\n\n    // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n    /**\n     * does special form submit remapping\n     * re-maps the issuing command link into something,\n     * the \"decode\" of the command link on the server can understand\n     *\n     * @param formName\n     * @param linkId\n     * @param target\n     * @param params\n     */\n    export const submitForm = function (formName: string, linkId: string | null = null, target: string |null = null, params: AssocArr<any> | Tuples<string, any> | null = {} ): boolean {\n\n\n        //handle a possible incoming null, not sure if this is used that way anywhere, but we allow it\n        params = (!params) ? {} : params;\n\n        let clearFn = 'clearFormHiddenParams_' + formName.replace(/-/g, '\\$:').replace(/:/g, '_');\n        window?.[clearFn]?.(formName);\n\n        //autoscroll code\n        if (window?.myfaces?.core?.config?.autoScroll && (window as any)?.getScrolling) {\n            myfaces.oam.setHiddenInput(formName, 'autoScroll', (window as any)?.getScrolling());\n        }\n        let paramsStream: Array<[string, any]> = Array.isArray(params) ? [...params] : ofAssoc(params);\n        paramsStream.forEach(([key, data]) => myfaces.oam.setHiddenInput(formName, key, data));\n\n        //we call the namespaced function, to allow decoration, via a direct call we would\n        myfaces.oam.setHiddenInput(formName, `${formName}:_idcl`, linkId ?? '');\n\n\n        DQ.byId(document.forms?.[formName] ?? document.getElementById(formName)).each(form => {\n            const ATTR_TARGET = \"target\";\n            const formElement = form.getAsElem(0).value as HTMLFormElement;\n            const oldTarget = (form.getAsElem(0).value as HTMLFormElement).getAttribute(\"target\");\n\n            if(target != \"null\" && target) {\n                (form.getAsElem(0).value as HTMLFormElement).setAttribute(\"target\", target);\n            }\n\n            const result = formElement?.onsubmit?.(null);\n\n            try {\n                if ((!!result) || 'undefined' == typeof result) {\n                    formElement.submit();\n                }\n            } catch (e) {\n                window?.console.error(e);\n            } finally {\n                if(oldTarget == null || oldTarget == \"null\") {\n                    (form.getAsElem(0).value as HTMLFormElement).removeAttribute(\"target\");\n                } else {\n                    (form.getAsElem(0).value as HTMLFormElement).setAttribute(\"target\", oldTarget);\n                }\n\n                // noinspection JSUnusedLocalSymbols\n                paramsStream.forEach(([key, data]) => {\n                    myfaces.oam.clearHiddenInput(formName, key);\n                });\n                myfaces.oam.clearHiddenInput(formName, `${formName}:_idcl`);\n            }\n\n        });\n        return false;\n    };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*! Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * faces.js init layer which provides as per spec the proper\n * window namespace if it does not exist already\n *\n * The idea is that we use a small shim on top of\n * the implementation to provide the window namespace.\n * The implementation itself is in a protected namespace\n * which will be bound by the build system\n *\n * The documentation nevertheless targets the _api file, which\n * hosts the full api\n */\nif(!window.faces) {\n    //we lazily load the code to prevent ram bloat\n    const faces = require(\"./_api\").faces;\n    window['faces'] = window?.faces ?? faces;\n}\nif(!window?.myfaces?.ab) {\n    const myfaces = require(\"./_api\").myfaces;\n\n    //namespace might be extended is not exclusively reserved so we merge\n    (window as any)[\"myfaces\"] = window?.myfaces ?? {};\n    Object.keys(myfaces).forEach(key => window.myfaces[key] = window.myfaces?.[key] ?? myfaces[key]);\n}\nexport var faces = window.faces;\nexport var myfaces = window.myfaces;\n"],"names":["e","t","r","d","append","i","appendIf","a","assign","s","assignIf","o","buildPath","v","deepCopy","p","resolve","u","shallowMerge","m","simpleShallowMerge","g","n","l","constructor","this","parent","value","length","target","key","Array","isArray","push","f","c","h","indexOf","substring","parseInt","Es2019Array","flatMap","split","map","filter","Error","JSON","parse","stringify","arr","keys","Object","forEach","De","ac","ko","Lang","objAssign","ValueEmbedder","super","arrPos","_value","absent","fromNullable","Optional","configDef","shallowCopy","shallowCopy$","deepCopy$","static","getOwnPropertyNames","getIf","assertAccessPath","getClass","get","delete","toJson","setVal","preprocessKeys","keyVal","arrayIndex","find","isPresent","isNoArray","DQ","w","DQ$","E","DomQuery","y","DomQueryCollector","b","ElementAttribute","trim","isString","equalsIgnoreCase","objToArray","SELECT","BUTTON","SUBMIT","RESET","IMAGE","RADIO","CHECKBOX","element","name","defaultVal","orElse","values","getAttribute","setAttribute","style","rootNode","pos","_limits","isAbsent","querySelectorAll","getAsElem","allElems","global","R","stream","lazyStream","id","tagName","nodeName","isTag","toLowerCase","type","inputValue","val","nodeId","checked","every","eachElem","elements","deepElements","querySelectorAllDeep","shadowRoot","disabled","attr","removeAttribute","childNodes","concat","asArray","byId","offsetWidth","reduce","offsetHeight","offsetLeft","offsetTop","asNodeArray","document","_querySelectorAllDeep","_querySelectorAll","byIdDeep","byTagName","globalEval","globalEvalSticky","implementation","createHTMLDocument","search","documentElement","innerHTML","join","createElement","html","detach","filesFromElem","files","call","ifPresentLazy","parentNode","removeChild","closest","_closestDeep","_closest","hasClass","classList","contains","addClass","add","removeClass","remove","isMultipartCandidate","matchesSelector","first","dispatchEvent","innerHtml","filterSelector","_mozMatchesSelector","some","firstElem","lastElem","each","replace","parentElement","nextElementSibling","previousElementSibling","insertBefore","insertAfter","last","getElementsByTagName","nonce","appendChild","applyNonce","appendTo","orElseLazy","loadScriptEval","_loadScriptEval","loadScriptEvalSticky","nextSibling","allParents","firstParent","parentsWhileMatch","host","copyAttrs","attributes","resolveAttributeHolder","outerHTML","activeElement","getCaretPosition","fromMarkup","replaceChild","slice","runScripts","runCss","setCaretPosition","evalText","text","innerText","sort","compareDocumentPosition","console","error","message","description","click","fireEvent","addEventListener","removeEventListener","bubbles","cancelable","ownerDocument","nodeType","Event","MouseEvent","KeyboardEvent","synthetic","createEventObject","textContent","encodeFormElement","selectedIndex","options","selected","from","cDATAAsString","data","subNodes","Math","min","limits","hasNext","next","lookAhead","dD","EO_STRM","current","BEF_STRM","reset","attachShadow","mode","waitUntilDom","childList","subtree","timeout","interval","Promise","throw","done","then","apply","MutationObserver","setTimeout","disconnect","clearTimeout","observe","setInterval","clearInterval","shadowElements","hasShadow","selection","focus","createRange","moveStart","setSelectiongRange","Symbol","iterator","prependTo","prepend","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","item","createSourceNode","Date","now","random","head","src","collect","finalValue","_Es2019Array","_another","_flatMap","flat","_flat","prototype","reverse","splice","_flatResolve","Proxy","isNaN","set","globalThis","window","test","charAt","arguments","String","saveResolve","saveResolveLazy","strToArray","assertType","isFunc","Function","TypeError","hasOwnProperty","Monad","getIfPresent","match","XMLQuery","XQ","ActiveXObject","async","parseFromString","loadXML","isXMLParserError","toString","XMLSerializer","serializeToString","xml","parserErrorText","exports","defineProperty","enumerable","toStringTag","Assoc","CONFIG_ANY","CONFIG_VALUE","Config","__esModule","faces","ajax","util","specversion","implversion","separatorchar","sep","Implementation","getSeparatorChar","contextpath","getProjectStage","getViewState","formElement","getClientWindow","request","event","response","context","addOnError","errorFunc","addOnEvent","eventFunc","chain","source","funcs","init","socketClientId","url","channel","onopen","onmessage","onerror","onclose","behaviors","autoConnect","PushImpl","open","close","myfaces","ab","eventName","execute","render","CTX_OPTIONS_PARAMS","$nsp","P_BEHAVIOR_EVENT","CTX_OPTIONS_EXECUTE","CTX_PARAM_RENDER","jsf","onReadyChain","readyStateListener","onDomReady","executionFunc","readyState","func","oam","ProjectStages","BlockFilter","getMessage","ExtLang","getGlobalConfig","assert","Assertions","ofAssoc","collectAssoc","projectStage","separator","eventQueue","errorQueue","requestQueue","resolveProjectStateFromURL","foundStage","ExtDomQuery","searchJsfJsFor","Production","sendError","errorData","localHandler","errorCallback","alert","displayError","assignNamingContainerData","internalContext","viewRootId","resolveViewRootId","NAMED_VIEWROOT","NAMING_CONTAINER_ID","remapDefaultConstants","targetConfig","targetKey","userValues","issuingForm","issuingElementId","rootNamingContainerId","SEP","$faces","iterValues","ret","processed","remapNamingContainer","componentIdToTransform","rootNamingContainerPrefix","EMPTY_STR","formClientId","nearestNamingContainer","lastIndexOf","nearestNamingContainerPrefix","hasLeadingSep","finalIdentifier","getElementById","cnt","IDENT_NONE","IDENT_ALL","IDENT_FORM","IDENT_THIS","resolveGlobalConfig","MYFACES","config","returnVal","sourceCode","resolveAndExecute","el","opts","elem","elementId","windowId","isResetValues","resolveDefaults","requestCtx","ExtConfig","internalCtx","assertRequestIntegrity","form","resolveForm","viewId","resolveViewId","formId","delay","resolveDelay","resolveTimeout","mappedOpts","P_WINDOW_ID","CTX_PARAM_REQ_PASS_THR","params","arrayedParams","ctxPassthrough","requestOptions","targetContext","sourceElementId","$nspEnabled","P_EVT","SOURCE","VIEW_ID","ON_EVENT","onevent","ON_ERROR","P_AJAX_SOURCE","P_AJAX","P_RESET_VALUES","CTX_PARAM_SRC_FRM_ID","CTX_PARAM_SRC_CTL_ID","CTX_PARAM_PPS","extractMyFacesParams","MYFACES_OPTION_PPS","clientWindow","P_CLIENT_WINDOW","assignClientWindowId","P_EXECUTE","P_RENDER","assignRender","queueHandler","addRequestToQueue","Response","processResponse","errorListener","eventListener","sendEvent","fn","stdErrorHandler","exception","clearRequestQueue","ErrorData","fromClient","clear","node","ALTERED","INIT","searchRoot","formWindowId","value1","value2","href","location","results","RegExp","exec","fetchWindowIdFromURL","HTML_TAG_FORM","dummyContext","formElements","encodeFormData","resoveNamingContainerMapper","reqCtx","respPassThr","XhrQueueController","enqueue","XhrRequest","URL_PROTOCOL","protocol","sockets","components","clientIdsByTokens","resolveFunction","WebSocket","channelToken","substr","Socket","base","hostname","port","getBaseURL","getSocket","reconnectAttempts","socket","bindCallbacks","clientIds","onmmessage","functions","j","code","reason","REASON_EXPIRED","MAX_RECONNECT_ATTEMPTS","RECONNECT_INTERVAL","XML_ATTR_NAMED_VIEWROOT","P_VIEWSTATE","P_VIEWROOT","P_VIEWHEAD","P_VIEWBODY","P_RESOURCE","EMPTY_FUNC","freeze","EMPTY_MAP","HTML_VIEWSTATE","HTML_CLIENT_WINDOW","P_RENDER_OVERRIDE","WINDOW_ID","ERROR","EVENT","BEGIN","COMPLETE","SUCCESS","STATUS","ERROR_NAME","ERROR_MESSAGE","RESPONSE_TEXT","RESPONSE_XML","HTTPERROR","EMPTY_RESPONSE","MALFORMEDXML","SERVER_ERROR","CLIENT_ERROR","TIMEOUT_EVENT","CTX_OPTIONS_DELAY","DELAY_NONE","CTX_OPTIONS_TIMEOUT","CTX_OPTIONS_RESET","CTX_PARAM_MF_INTERNAL","CONTENT_TYPE","HEAD_FACES_REQ","REQ_ACCEPT","VAL_AJAX","ENCODED_URL","REQ_TYPE_GET","REQ_TYPE_POST","STATE_EVT_BEGIN","STATE_EVT_TIMEOUT","STATE_EVT_COMPLETE","URL_ENCODED","MULTIPART","NO_TIMEOUT","STD_ACCEPT","HTML_TAG_HEAD","HTML_TAG_BODY","HTML_TAG_LINK","HTML_TAG_SCRIPT","HTML_TAG_STYLE","SEL_VIEWSTATE_ELEM","SEL_CLIENT_WINDOW_ELEM","SEL_RESPONSE_XML","PHASE_PROCESS_RESPONSE","ERR_NO_PARTIAL_RESPONSE","ATTR_URL","ATTR_NAME","ATTR_VALUE","ATTR_ID","XML_TAG_PARTIAL_RESP","XML_TAG_CHANGES","XML_TAG_UPDATE","XML_TAG_DELETE","XML_TAG_INSERT","XML_TAG_EVAL","XML_TAG_ERROR","XML_TAG_ATTRIBUTES","XML_TAG_EXTENSION","XML_TAG_REDIRECT","XML_TAG_BEFORE","XML_TAG_AFTER","XML_TAG_ATTR","UPDATE_FORMS","UPDATE_ELEMS","DEFERRED_HEAD_INSERTS","MF_NONE","APPLIED_VST","APPLIED_CLIENT_WINDOW","UNKNOWN","inputNamespace","viewStatePos","nameSpace","hasNameSpace","MSG_TEST","MSG_DEV_MODE","MSG_AFFECTED_CLASS","MSG_AFFECTED_METHOD","MSG_ERROR_NAME","MSG_ERROR_MESSAGE","MSG_SERVER_ERROR_NAME","MSG_ERROR_DESC","MSG_ERROR_NO","MSG_ERROR_LINENO","ERR_FORM","ERR_VIEWSTATE","ERR_TRANSPORT","ERR_EVT_PASS","ERR_CONSTRUCT","ERR_MALFORMEDXML","ERR_SOURCE_FUNC","ERR_EV_OR_UNKNOWN","ERR_SOURCE_NOSTR","ERR_SOURCE_DEF_NULL","ERR_MUST_STRING","ERR_REF_OR_ID","ERR_PARAM_GENERIC","ERR_PARAM_STR","ERR_PARAM_STR_RE","ERR_PARAM_MIXMAPS","ERR_MUST_BE_PROVIDED","ERR_MUST_BE_PROVIDED1","ERR_REPLACE_EL","ERR_EMPTY_RESPONSE","ERR_ITEM_ID_NOTFOUND","ERR_PPR_IDREQ","ERR_PPR_INSERTBEFID","ERR_PPR_INSERTBEFID_1","ERR_PPR_INSERTBEFID_2","ERR_PPR_DELID","ERR_PPR_UNKNOWNCID","ERR_NO_VIEWROOTATTR","ERR_NO_HEADATTR","ERR_RED_URL","ERR_REQ_FAILED_UNKNOWN","ERR_REQU_FAILED","msg","caller","title","raiseError","theType","assertFunction","assertUrlExists","assertValidXMLResponse","responseXML","finalTitle","finalName","finalMessage","makeException","assertDelay","catchFunctions","thenFunctions","inputVal","thenFunc","reject","catchFunc","catch","finally","IS_FACES_SOURCE","ATTR_SRC","body","result","curScript","currentScript","extractNonce","nonceScript","regExp","decodeURIComponent","sticky","whiteListed","runHeadInserts","suppressDoubleIncludes","processedScripts","reference","selector","deep","ExtDQ","root","condition","accessPath","accessPathMapped","remap","decodeEncodedValues","encoded","line","index","resolveFiles","dataSource","fileInput","file","formData","paramsMapper","inStr","inVal","defaultStr","assocValues","File","encodeURIComponent","parentItem","standardInputs","resolveViewState","fileInputs","namedViewRoot","isViewState","template","withNamingContainerId","namingContainer","namingContainerId","withParent","withNamedViewRoot","build","state","ident","item1","item2","max","newElement","installedLocale","defaultMessage","templateParams","Messages","param","callerCls","callFunc","getLanguage","language","navigator","languages","failSaveResolve","resolverProducer","defaultValue","failSaveExecute","keyValToStr","delimiter","configName","getForm","queryElem","eventTarget","getEventTarget","foundForm","assertFormExists","getLocalOrGlobalConfig","localOptions","activeTimeouts","debounce","runnable","clearActiveTimeout","queue","taskRunning","timeOut","requestHandler","enrichRunnable","signalTaskRunning","start","updateTaskRunning","shift","isEmpty","asyncRunnable","ErrorType","EventData","errorName","errorMessage","responseText","responseCode","status","sourceId","typeDetails","serverErrorName","serverErrorMessage","stack","HTTP_ERROR","errorCode","errorType","getMsg","fromGeneric","eventData","resolveTargetUrl","srcFormElement","action","resolveWindowId","requestContext","responseContext","funcName","sourceForm","ajaxType","viewState","divider","viewStateViewId","prefix","getCfg","evt","finalEvent","srcElement","resetValues","externalContext","elemId","resolveSourceElementId","sourceFormId","forms","req","resolveContexts","resolveResponseXML","responseProcessor","ResponseProcessor","partialId","updateNamedViewRootState","SEL_SUB_TAGS","redirect","ALLOWED_TAGS","processViewState","processClientWindow","storeState","cdataBlock","replaceViewRoot","replaceHead","replaceBody","addToHead","update","handleElementUpdate","processUpdateTag","eval","processInsert","processChangesTag","processPartialTag","fixViewStates","fixClientWindow","insertWithSubTags","insert","shadowDocument","shadowHead","mappedHeadData","scriptTags","nodesToAdd","scriptElements","addToHeadDeferred","newElements","shadowBody","shadowInnerHTML","resultingBody","updateForms","storeForPostProcessing","mergedErrorData","hasResponseXML","fromServerError","triggerOnError","redirectUrl","before","after","insertNodes","insertId","isViewStateNode","StateHolder","isClientWindowNode","updateElems","affectedForms","getContainerForms","affectedForm","isInExecuteOrRender","appendViewStateToForms","appendClientWindowToForms","createFromRequest","eventHandler","assignState","HiddenInputBuilder","createAndAppendHiddenInput","toBeEvaluated","storeForUpdate","storeForEval","executes","renders","nameOrId","NAME_OR_ID","getNameOrIdSelector","defaultParamsMapper","XhrFormData","partialIds","isMultipartRequest","resolveRequestType","encodeSubmittableFields","applyViewState","toFormData","remapKeyForNamingContainer","FormData","rootElement","viewStateElement","remappedPartialIds","getFormInputsAsArr","fixEmptyParameters","AsyncRunnable","contentType","stopProgress","xhrObject","XMLHttpRequest","registerXhrCallbacks","ignoreErr","executesArr","partialIdsArray","requestPassThroughParams","resolveFinalUrl","setRequestHeader","sendRequest","handleErrorAndClearQueue","cancel","abort","handleError","onabort","onAbort","ontimeout","onTimeout","onload","onResponseReceived","onloadend","onResponseProcessed","isCancelledResponse","currentTarget","handleGenericError","resolveOrReject","isPost","send","evtType","resolveHandlerFunc","responseFormatError","fromHttpConnection","setHiddenInput","formName","input","newInput","clearHiddenInput","submitForm","linkId","clearFn","core","autoScroll","getScrolling","paramsStream","oldTarget","onsubmit","submit","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__"],"sourceRoot":""}